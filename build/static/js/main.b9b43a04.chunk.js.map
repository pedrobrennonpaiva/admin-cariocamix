{"version":3,"sources":["styles/default.module.css","components/Footer.tsx","assets/logo.png","services/session.ts","components/Header.tsx","components/Alert.tsx","configs/Utils.ts","configs/Validations.ts","models/base/Base.ts","models/Coupon.ts","services/api.ts","screens/Coupons.tsx","screens/Home.tsx","screens/Login.tsx","screens/NotFound.tsx","screens/Orders.tsx","models/PaymentType.ts","screens/PaymentTypes.tsx","models/Category.ts","components/screens/CategoryComponent.tsx","models/Item.ts","components/screens/ItemComponent.tsx","models/Product.ts","models/utils/SelectModel.ts","models/CategoryProduct.ts","components/AccordionMenu.tsx","models/ProductItem.ts","components/screens/ProductComponent.tsx","screens/Products.tsx","models/Admin.ts","components/screens/AdminComponent.tsx","screens/Profile.tsx","models/AddressStore.ts","components/screens/AddressStoreComponent.tsx","models/DeliveryTax.ts","assets/pin.svg","components/screens/DeliveryTaxComponent.tsx","models/Store.ts","models/StoreDayHour.ts","components/screens/StoreComponent.tsx","screens/Stores.tsx","models/User.ts","screens/Users.tsx","navigations/AppNavigator.tsx","App.tsx","index.tsx","styles/home.module.css","styles/store.module.css","styles/login.module.css","styles/header.module.css","styles/profile.module.css","styles/coupon.module.css","styles/paymentType.module.css","styles/footer.module.css"],"names":["module","exports","Footer","className","styles","div_footer","Session","TOKEN_KEY","ADMIN","isAuthenticated","localStorage","getItem","gItem","item","JSON","parse","data","Date","date","valueOf","getTimezoneOffset","toISOString","tokenExpires","getToken","login","token","user","setItem","stringify","logout","removeItem","getAdmin","error","console","log","name","Header","Navbar","header","expand","collapseOnSelect","Brand","as","Link","to","navbar_brand","img_logo","src","logo","alt","Toggle","aria-controls","nav_toggle","Collapse","id","Nav","nav_link","store","span_admin_store","icon","faUser","nav_icon","Alert","state","useState","showAlert","setShowAlert","alertDisplay","setAlertDisplay","alertClass","setAlertClass","alertMessage","setAlertMessage","alertType","setAlertType","setAlert","message","type","setTimeout","useEffect","style","display","data-dismiss","aria-label","onClick","aria-hidden","Utils","removeDiacritics","value","replace","currencyValue","toFixed","convertToCurrencyDb","formatDate","d","month","getMonth","day","getDate","year","getFullYear","length","join","newDate","formatDateSplitView","string","dateSplit","split","dateMask","onlyLetterMask","hourMinuteMask","numberPhoneMask","cepMask","cpfMask","groupBy","xs","key","reduce","rv","x","push","alertLocalStorage","isSuccess","convertDayWeek","dayWeek","daysOfWeek","validImageExtensions","Validations","validateRequiredField","field","nameField","undefined","validateNumberMoreThanZero","validateUsername","username","validatePassword","password","validateRequiredSelect","select","validateFile","file","Base","uuid","registerDate","Coupon","code","isActive","ADDRESS_STORE_URL","CATEGORY_URL","COUPON_URL","DELIVERY_TAX_URL","ITEM_URL","IMAGE_URL","PAYMENT_TYPE_URL","PRODUCT_URL","STORE_URL","STOREDAYHOUR_URL","Api","BASE_URL","accessToken","getUser","a","axios","get","headers","then","res","catch","Promise","reject","getUserById","insertUser","model","post","authenticateUser","updateUser","put","deleteUser","delete","resetPasswordUser","newPassword","forgotPasswordUser","email","getAdminById","insertAdmin","authenticateAdmin","updateAdmin","deleteAdmin","resetPasswordAdmin","url","response","getById","insert","update","insertImage","formData","FormData","append","cepSearch","cep","Coupons","props","search","setSearch","coupons","setCoupons","couponUpd","setCouponUpd","initCoupons","setInitCoupons","setCode","codeError","setCodeError","idUpdate","setIdUpdate","idRemove","setIdRemove","setIsActive","btnDisableAdd","setBtnDisableAdd","btnTxtAdd","setBtnTxtAdd","showModalAdd","setShowModalAdd","btnDisableRemove","setBtnDisableRemove","btnTxtRemove","setBtnTxtRemove","showModalRemove","setShowModalRemove","api","getCoupons","results","filter","cp","toLowerCase","includes","handleAdd","Spinner","animation","variant","size","cError","cpn","handleModalAddUpd","_","newCpn","handleRemove","handleModalRemove","err","isOpen","isRemove","location","Modal","show","onHide","centered","Title","Body","onKeyPress","e","Form","Group","controlId","Label","Control","placeholder","onChange","target","toUpperCase","Text","Check","label","checked","disabled","div_btns","btn_add","InputGroup","event","faSearch","Table","table","responsive","map","align","faSyncAlt","table_icon","title","faTrash","Home","history","useHistory","handleCardMenu","div_home","h_home","div_row_menu","Card","card_menu","card_body_menu","faClipboardList","icon_menu","faUsers","faHamburger","faStoreAlt","faCreditCard","faTicketAlt","Login","setUsername","setPassword","usernameError","setUsernameError","passwordError","setPasswordError","inputPassword","setInputPassword","btnTxt","setBtnTxt","div_full","body","card_login","div_img_logo","onSubmit","preventDefault","uError","pError","userLogged","form_group_login","form_label_login","form_control_login","btn_login","NotFound","h_registration","Orders","PaymentType","PaymentTypes","paymentTypes","setPaymentTypes","paymentTypeUpd","setPaymentTypeUpd","initPaymentTypes","setInitPaymentTypes","nameError","getPaymentTypes","Category","CategoryComponent","categorys","setCategorys","categoryUpd","setCategoryUpd","initCategorys","setInitCategorys","setTitle","titleError","setTitleError","getCategorys","Item","price","ItemComponent","items","setItems","itemUpd","setItemUpd","initItems","setInitItems","setPrice","priceError","setPriceError","getItems","Number","parseFloat","toString","decimalSeparator","thousandSeparator","inputmode","Product","description","image","points","isOneItem","categoryProductsId","categoryProducts","productItemsId","productItems","SelectModel","this","CategoryProduct","categoryId","productId","v4","AccordionMenu","rest","open","setOpen","Accordion","eventKey","header_prod","span_header_prod","faSortDown","icon_header_top","faSortUp","icon_header_bottom","ProductItem","product","itemId","isDefault","ProductComponent","products","setProducts","productUpd","setProductUpd","initProducts","setInitProducts","defaultItems","setDefaultItems","additionalItems","setAdditionalItems","setDescription","setIsOneItem","category","setCategory","optionCategory","setOptionCategory","categoryError","setCategoryError","setImage","filename","setFilename","fileInput","useRef","selectedFile","setSelectedFile","useMemo","getProducts","modelSelect","Array","forEach","g","cSel","catError","newpi","addProduct","resp","fileUrl","findIndex","find","handlePopulateItems","pItems","defItems","addItems","pi","handleCheckedItems","handleChangeItems","newItems","options","menuPlacement","menuPosition","img_table","accept","files","alert","ref","current","click","faTimes","rows","text_secondary","Products","Tabs","defaultActiveKey","Tab","unmountOnExit","Admin","birthday","numberPhone","isRoot","storeId","AdminComponent","admins","setAdmins","setAdminUpd","initAdmins","setInitAdmins","setName","setBirthday","setNumberPhone","setEmail","setStore","optionStore","setOptionStore","setNameError","birthdayError","setBirthdayError","numberPhoneError","setNumberPhoneError","emailError","setEmailError","getAdmins","stores","noneSel","getStores","nError","bError","nbError","eError","addAdmin","minLength","maxLength","Profile","btnDisable","setBtnDisable","btnTxtPassword","setBtnTxtPassword","btnDisablePassword","setBtnDisablePassword","showModalPassword","setShowModalPassword","showModalLogout","setShowModalLogout","admin","setAdmin","AdminLogged","sessionAdmin","handleCloseModal","handleCloseModalLogout","btn","btn_primary","changePassword","Container","Row","Col","sm","Content","Pane","h_title","newAdmin","AddressStore","addressText","complement","neighborhood","city","country","AddressStoreComponent","addressStores","setAddressStores","addressStoreUpd","setAddressStoreUpd","initAddressStores","setInitAddressStores","setCep","setAddressText","setComplement","setNeighborhood","setCity","setState","cepError","setCepError","addressTextError","setAddressTextError","neighborhoodError","setNeighborhoodError","cityError","setCityError","stateError","setStateError","inputDisable","setInputDisable","storeError","setStoreError","getAddressStores","sError","aError","ciError","staError","handleCepSearch","viaCep","logradouro","complemento","bairro","localidade","uf","mask","onBlur","DeliveryTax","radius","DeliveryTaxComponent","MAPBOX","ACCESS_TOKEN_MAP_BOX","initialPosition","lat","lng","position","setPosition","deliveryTaxs","setDeliveryTaxs","deliveryTaxUpd","setDeliveryTaxUpd","initDeliveryTaxs","setInitDeliveryTaxs","setRadius","radiusError","setRadiusError","initStores","setInitStores","getDeliveryTaxs","handleStore","addressStore","fetchLocalMapBox","positionStore","features","center","mapPinIcon","Leaflet","iconUrl","mapPin","iconSize","iconAnchor","popupAnchor","local","fetch","json","ChangeMapView","coords","useMap","setView","getZoom","pageMap","MapContainer","zoom","scrollWheelZoom","width","height","TileLayer","Marker","Circle","pathOptions","fillColor","Store","storeDayHours","StoreDayHour","dayOfWeek","dayOfWeekString","hourOpen","hourClose","selectDayOfWeek","StoreComponent","setStores","storeUpd","setStoreUpd","setStoreDayHours","initStoreDayHours","setInitStoreDayHours","optionStoreDayHour","setOptionStoreDayHour","sts","y","i","getSelectStoreDayHours","sth","removeSth","addSth","newStoreDayHours","index","selectDayWeek","storeDh","handleChangeDayWeek","inputHourMinute","handleChangeHourOpen","handleChangeHourClose","newStoreDh","splice","handleRemoveStoreDayHour","dayHour","k","Stores","User","cpf","Users","users","setUsers","userUpd","setUserUpd","initUsers","setInitUsers","setCpf","cpfError","setCpfError","emailForgotPassword","setEmailForgotPassword","getUsers","handleForgotPassword","PrivateRoute","Component","component","render","pathname","AppNavigator","exact","path","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9b43a04.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"div_btns\":\"default_div_btns__1opWP\",\"btn_add\":\"default_btn_add__2Xi9s\",\"table\":\"default_table__3cSci\",\"header_prod\":\"default_header_prod__1_rmz\",\"span_header_prod\":\"default_span_header_prod__15iOV\",\"icon_header_top\":\"default_icon_header_top__1alfC\",\"icon_header_bottom\":\"default_icon_header_bottom__2M9FX\",\"img_table\":\"default_img_table__34GKy\",\"text_secondary\":\"default_text_secondary__3nvyx\"};","import styles from '../styles/footer.module.css';\r\n\r\nconst Footer = () => {\r\n\r\n    return (\r\n        <div className={`${styles.div_footer}`}>\r\n            <p>Copyright © Carioca Mix 2021. Todos os direitos reservados.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/logo.6bdeb108.png\";","import { AdminAuthenticate } from \"../models/Admin\";\r\n\r\n\r\nexport class Session {\r\n\r\n    static TOKEN_KEY = \"Token\";\r\n    static ADMIN = \"ADN\";\r\n\r\n    static isAuthenticated = () => {\r\n\r\n        if(localStorage.getItem(Session.TOKEN_KEY) !== null)\r\n        {\r\n            var gItem = localStorage.getItem(Session.ADMIN) as string;\r\n            var item = JSON.parse(gItem) as AdminAuthenticate;\r\n\r\n            var data = new Date();\r\n            var date = new Date(data.valueOf() - (data.getTimezoneOffset() * 60000)).toISOString();\r\n            if(item.tokenExpires < date)\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    static getToken = () => localStorage.getItem(Session.TOKEN_KEY);\r\n\r\n    static login = (token: string, user: AdminAuthenticate) => {\r\n        localStorage.setItem(Session.TOKEN_KEY, token);\r\n        localStorage.setItem(Session.ADMIN, JSON.stringify(user));\r\n    }\r\n    \r\n    static logout = () => {\r\n        localStorage.removeItem(Session.TOKEN_KEY);\r\n        localStorage.removeItem(Session.ADMIN);\r\n    }\r\n\r\n    static getAdmin = () : AdminAuthenticate | undefined => {\r\n        var gItem = localStorage.getItem(Session.ADMIN) as string;\r\n\r\n        try {\r\n            return JSON.parse(gItem);\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    static getItem = <T>(item: string) : T | undefined => {\r\n        var gItem = localStorage.getItem(item) as string;\r\n\r\n        try {\r\n            return JSON.parse(gItem);\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    static setItem = <T>(name: string, item: T) => {\r\n        localStorage.setItem(name, JSON.stringify(item));\r\n    }\r\n\r\n    static removeItem = (item: string) => {\r\n        localStorage.removeItem(item);\r\n    }\r\n}\r\n","import { Nav, Navbar } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport styles from '../styles/header.module.css';\r\nimport logo from '../assets/logo.png';\r\nimport { Session } from '../services/session';\r\n\r\nconst Header = () => {\r\n\r\n    return (\r\n        <Navbar className={`${styles.header}`} expand='md' collapseOnSelect>\r\n            <Navbar.Brand as={Link} to='/' className={`${styles.navbar_brand}`}>\r\n                <img \r\n                    className={`${styles.img_logo} img-fluid`} \r\n                    src={logo}\r\n                    alt='Logo'\r\n                />\r\n            </Navbar.Brand>\r\n\r\n            <Navbar.Toggle aria-controls=\"navbar-nav\" className={`${styles.nav_toggle}`} />\r\n\r\n            <Navbar.Collapse id=\"navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link as={Link} to=\"/\" className={`${styles.nav_link}`}>Início</Nav.Link>\r\n                    <Nav.Link as={Link} to=\"/pedidos\" className={`${styles.nav_link}`}>Pedidos</Nav.Link>\r\n                    <Nav.Link as={Link} to=\"/usuarios\" className={`${styles.nav_link}`}>Usuários</Nav.Link>\r\n                    <Nav.Link as={Link} to=\"/produtos\" className={`${styles.nav_link}`}>Produtos</Nav.Link>\r\n                </Nav>\r\n                <Nav className=\"ml-auto ms-auto align-items-center\">\r\n                    {Session.isAuthenticated() && Session.getAdmin()?.store ? \r\n                    <span className={`${styles.span_admin_store}`}>\r\n                        Loja {Session.getAdmin()?.store?.name}\r\n                    </span> : ''}\r\n                    <Nav.Link as={Link} to=\"/perfil\" className={`${styles.nav_link}`}>\r\n                        <FontAwesomeIcon icon={faUser} className={`${styles.nav_icon}`} />\r\n                    </Nav.Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default Header;","import { useEffect, useState } from \"react\";\r\n\r\ntype AlertProps = {\r\n    state?: any;\r\n}\r\n\r\nconst Alert = ({ state }: AlertProps) => {\r\n\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [alertDisplay, setAlertDisplay] = useState(\"none\");\r\n    const [alertClass, setAlertClass] = useState<string | null>();\r\n    const [alertMessage, setAlertMessage] = useState<string | null>();\r\n    const [alertType, setAlertType] = useState<string | null>();\r\n\r\n    const setAlert = () => {\r\n\r\n        if(typeof state !== 'undefined' || localStorage.getItem('alert-message') != null)\r\n        {\r\n            const message = typeof state !== 'undefined' ? state.alertMessage : localStorage.getItem('alert-message');\r\n            const type = typeof state !== 'undefined' ? state.alertType : localStorage.getItem('alert-type');\r\n\r\n            setAlertType(type);\r\n            setAlertMessage(message);\r\n            setShowAlert(true);\r\n            \r\n            setTimeout(function () {\r\n                setAlertDisplay(\"block\");\r\n                setAlertClass('show');\r\n            }, 500);\r\n            \r\n            setTimeout(function () {\r\n                setAlertClass('');\r\n            }, 5000);\r\n            \r\n            setTimeout(function () {\r\n              setAlertDisplay(\"none\");\r\n            }, 5500);\r\n\r\n            localStorage.removeItem('alert-message');\r\n            localStorage.removeItem('alert-type');\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setAlert();\r\n    }, [setAlert]);\r\n\r\n    useEffect(() => {\r\n        setAlert();\r\n    }, [localStorage.getItem('alert-message')]);\r\n\r\n    return (\r\n        <div>\r\n            {showAlert ?\r\n            <div \r\n                className={`alert ${alertType} alert-dismissible fade alert-message ${alertClass}`}\r\n                style={{ display: alertDisplay }}>\r\n                <button \r\n                    type=\"button\" \r\n                    className=\"close\" \r\n                    data-dismiss=\"alert\" \r\n                    aria-label=\"Close\"\r\n                    onClick={() => setAlertDisplay(\"none\")}\r\n                >\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n                {alertMessage}\r\n            </div> : <div></div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Alert;","\r\nexport class Utils {\r\n\r\n    static removeDiacritics = (value: string) => {\r\n        return value\r\n            .replace(\" \", \"\")\r\n            .replace(\"+\", \"\")\r\n            .replace(\":\", \"\")\r\n            .replace(\".\", \"\")\r\n            .replace(\".\", \"\")\r\n            .replace(\"-\", \"\")\r\n            .replace(\"/\", \"\")\r\n            .replace(\"(\", \"\")\r\n            .replace(\")\", \"\");\r\n    }\r\n\r\n    static currencyValue = (value: Number) => {\r\n        return value?.toFixed(2).replace(',', '.').replace('.', ',');\r\n    }\r\n\r\n    static convertToCurrencyDb = (value: string) => {\r\n        return value.replace('.', ',').replace(',', '.');\r\n    }\r\n\r\n    static formatDate = (date?: string | undefined) => {\r\n\r\n        var d = date != null ? new Date(date!) : new Date(),\r\n            month = '' + (d.getMonth() + 1),\r\n            day = '' + (d.getDate() + 1),\r\n            year = d.getFullYear();\r\n\r\n        if (month.length < 2) \r\n            month = '0' + month;\r\n        if (day.length < 2) \r\n            day = '0' + day;\r\n    \r\n        return [year, month, day].join('-');\r\n    }\r\n\r\n    static newDate = (date?: string | undefined) => {\r\n        var d = date != null ? new Date(date!) : new Date();\r\n        return new Date(d.getFullYear(), d.getMonth(), !date ? d.getDate() : d.getDate() + 1);\r\n    }\r\n\r\n    static formatDateSplitView = (string: string) => {   \r\n        var dateSplit = string.split('-');\r\n        var date = `${dateSplit[2]}/${dateSplit[1]}/${dateSplit[0]}`;\r\n        return date;\r\n    }\r\n\r\n    // static formatDateView = (string: string) => {   \r\n    //     var options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n    // }\r\n\r\n    static dateMask = (date: string) => {\r\n        var d = date != null ? new Date(date!) : new Date(),\r\n            month = '' + (d.getMonth() + 1),\r\n            day = '' + (d.getDate() + 1),\r\n            year = d.getFullYear();\r\n\r\n        if (month.length < 2) \r\n            month = '0' + month;\r\n        if (day.length < 2) \r\n            day = '0' + day;\r\n\r\n        return [day, month, year].join('/');\r\n    }\r\n\r\n    static onlyLetterMask = (value: string) => {\r\n        return value\r\n            .replace(/[^A-Za-z]/ig, '');\r\n    }\r\n\r\n    static hourMinuteMask = (value: string) => {\r\n        return value\r\n            .replace(/\\D/g, '')\r\n            .replace(/^(\\d{2})(\\d{2}).*/, '$1:$2');\r\n    }\r\n\r\n    static numberPhoneMask = (value: string) => {\r\n        return value\r\n            .replace(/\\D/g, '')\r\n            .replace(/^\\(?([0-9]{2})\\)?[-. ]?([0-9]{5})[-. ]?([0-9]{4})$/, \"($1) $2-$3\");\r\n    }\r\n\r\n    //not working\r\n    static cepMask = (value: string) => {\r\n        return value\r\n            .replace(/\\D/g, '')\r\n            .replace(/^(\\d{2})(\\d)/g,\"($1) $2\")\r\n            .replace(/(\\d)(\\d{4})$/,\"$1-$2\");\r\n    }\r\n\r\n    static cpfMask = (value: string) => {\r\n        return value\r\n          .replace(/\\D/g, '') // substitui qualquer caracter que nao seja numero por nada\r\n          .replace(/(\\d{3})(\\d)/, '$1.$2') // captura 2 grupos de numero o primeiro de 3 e o segundo de 1, apos capturar o primeiro grupo ele adiciona um ponto antes do segundo grupo de numero\r\n          .replace(/(\\d{3})(\\d)/, '$1.$2')\r\n          .replace(/(\\d{3})(\\d{1,2})/, '$1-$2')\r\n          .replace(/(-\\d{2})\\d+?$/, '$1') // captura 2 numeros seguidos de um traço e não deixa ser digitado mais nada\r\n    }\r\n\r\n    static groupBy = <T>(xs: T[], key: string) => {\r\n        return xs.reduce(function(rv: any, x: any) {\r\n            (rv[x[key]] = rv[x[key]] || []).push(x);\r\n            return rv;\r\n        }, {});\r\n    };\r\n\r\n    static alertLocalStorage = (message: string, isSuccess: boolean) => {\r\n        localStorage.setItem('alert-message', message);\r\n        localStorage.setItem('alert-type', isSuccess ? 'alert-success' : 'alert-danger');\r\n    }\r\n\r\n    static convertDayWeek = (dayWeek: number) : string => {\r\n\r\n        return Utils.daysOfWeek[dayWeek];\r\n    }\r\n    \r\n    static daysOfWeek = ['Domingo','Segunda-feira','Terça-feira','Quarta-feira','Quinta-feira','Sexta-feira','Sábado'];\r\n    static validImageExtensions = [\"image/jpg\", \"image/jpeg\", \"image/png\"];  \r\n}","import { SelectModel } from \"../models/utils/SelectModel\";\r\n\r\nexport class Validations {\r\n\r\n    static validateRequiredField = (field: string | number, nameField: string) => {\r\n\r\n        if(!field || field === undefined || field == null) {\r\n            return `O campo ${nameField} deve ser preenchido!\\n`;\r\n        }\r\n        \r\n        return '';\r\n    }\r\n\r\n    static validateNumberMoreThanZero = (field: number, nameField: string) => {\r\n\r\n        if(!field || field === undefined || field == null || field <= 0) {\r\n            return `O campo ${nameField} deve ser preenchido e maior que 0!\\n`;\r\n        }\r\n        \r\n        return '';\r\n    }\r\n\r\n    static validateUsername = (username: string) => {\r\n\r\n        var error = '';\r\n\r\n        if(!username || username === undefined || username == null) {\r\n            error += 'O e-mail/username deve ser preenchido!\\n';\r\n        }\r\n\r\n        return error;\r\n    }\r\n\r\n    static validatePassword = (password: string) => {\r\n\r\n        var error = '';\r\n\r\n        if(!password || password === undefined || password == null) {\r\n            error += 'A senha deve ser preenchido!\\n';\r\n        }\r\n\r\n        if(password?.length < 8) {\r\n            error += 'A senha deve ter mais de 8 caracteres!\\n';\r\n        }\r\n\r\n        return error;\r\n    }\r\n\r\n    static validateRequiredSelect = (select: SelectModel | null | undefined, nameField: string) => {\r\n\r\n        if(!select || select === undefined || select == null \r\n            || select.value === '' || select.value === undefined) {\r\n            return `O campo ${nameField} deve ser preenchido!\\n`;\r\n        }\r\n        \r\n        return '';\r\n    }\r\n\r\n    static validateFile = (file: File | undefined, nameField: string) => {\r\n\r\n        if(!file || file === undefined || file == null)\r\n        {\r\n            return `O campo ${nameField} deve ser preenchido!\\n`;\r\n        }\r\n\r\n        return '';\r\n    }\r\n}\r\n","import { v4 as uuid } from 'uuid';\r\n\r\nexport abstract class Base {\r\n\r\n    id: string = uuid();\r\n\r\n    registerDate: Date | string = new Date();\r\n}","import { Base } from \"./base/Base\";\n\nexport class Coupon extends Base {\n\n    code: string = '';\n\n    isActive: boolean = false;\n}\n","import axios from \"axios\";\r\nimport { Admin } from \"../models/Admin\";\r\nimport { AuthenticateModel } from \"../models/Authenticate\";\r\nimport { Base } from \"../models/base/Base\";\r\nimport { User } from \"../models/User\";\r\nimport { Session } from \"./session\";\r\n\r\nconst ADDRESS_URL = 'address';\r\nconst ADDRESS_STORE_URL = 'addressStore';\r\nconst CATEGORY_URL = 'category';\r\nconst CATEGORY_PRODUCT_URL = 'categoryProduct';\r\nconst COUPON_URL = 'coupon';\r\nconst DELIVERY_STATUS_URL = 'deliveryStatus';\r\nconst DELIVERY_TAX_URL = 'deliveryTax';\r\nconst ITEM_URL = 'item';\r\nconst IMAGE_URL = 'image';\r\nconst ORDER_URL = 'order';\r\nconst ORDER_PRODUCT_URL = 'orderProduct';\r\nconst ORDER_PRODUCT_ITEM_URL = 'orderProductItem';\r\nconst PAYMENT_STATUS_URL = 'paymentStatus';\r\nconst PAYMENT_TYPE_URL = 'paymentType';\r\nconst PRODUCT_URL = 'product';\r\nconst PRODUCT_ITEM_URL = 'productItem';\r\nconst STORE_URL = 'store';\r\nconst STOREDAYHOUR_URL = 'storeDayHour';\r\nconst USER_COUPON_URL = 'userCoupon';\r\n\r\nclass Api {\r\n\r\n    // BASE_URL = \"https://api-cariocamix.herokuapp.com\";\r\n    BASE_URL = \"http://localhost:5000\";\r\n\r\n    accessToken = Session.getToken();\r\n\r\n    //#region User\r\n\r\n    getUser = async () => {\r\n\r\n        return await axios.get(`${this.BASE_URL}/user`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${this.accessToken}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                return res.data;\r\n            })\r\n            .catch((error) => {\r\n                return Promise.reject(error);\r\n            });\r\n    }\r\n\r\n    getUserById = async (id: string) => {\r\n\r\n        return await axios.get(`${this.BASE_URL}/user/${id}`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${this.accessToken}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                return res.data;\r\n            })\r\n            .catch((error) => {\r\n                return Promise.reject(error);\r\n            });\r\n    }\r\n\r\n    insertUser = async (model: User) => {\r\n\r\n        return await axios.post(`${this.BASE_URL}/user`, model)\r\n            .then((res) => {\r\n                return res;\r\n            })\r\n            .catch((error) => {\r\n                return Promise.reject(error);\r\n            });\r\n    }\r\n\r\n    authenticateUser = async (model: AuthenticateModel) => {\r\n\r\n        return await axios.post(`${this.BASE_URL}/user/authenticate`, model)\r\n            .then((res) => {\r\n                return res;\r\n            })\r\n            .catch((error) => {\r\n                return Promise.reject(error);\r\n            });\r\n    }\r\n\r\n    updateUser = async (model: User) => {\r\n\r\n        return await axios.put(`${this.BASE_URL}/user/${model.id}`, model, {\r\n            headers: {\r\n                'Authorization': `Bearer ${this.accessToken}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                return res;\r\n            })\r\n            .catch((error) => {\r\n                return Promise.reject(error);\r\n            });\r\n    }\r\n\r\n    deleteUser = async (id: string) => {\r\n\r\n        return await axios.delete(`${this.BASE_URL}/user/${id}`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${this.accessToken}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                return res;\r\n            })\r\n            .catch((error) => {\r\n                return Promise.reject(error);\r\n            });\r\n    }\r\n\r\n    resetPasswordUser = async (id: string, newPassword: string) => {\r\n\r\n        return await axios.post(`${this.BASE_URL}/user/resetPassword/${id}/${newPassword}`, {}, {\r\n            headers: {\r\n                'Authorization': `Bearer ${this.accessToken}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                return res;\r\n            })\r\n            .catch((error) => {\r\n                return Promise.reject(error);\r\n            });\r\n    }\r\n\r\n    forgotPasswordUser = async (email: string) => {\r\n\r\n        return await axios.post(`${this.BASE_URL}/user/forgotPassword/${email}`, {}, {\r\n            headers: {\r\n                'Authorization': `Bearer ${this.accessToken}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                return res;\r\n            })\r\n            .catch((error) => {\r\n                return Promise.reject(error);\r\n            });\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region Admin\r\n\r\n    getAdmin = async () => {\r\n\r\n        return await axios.get(`${this.BASE_URL}/admin`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${this.accessToken}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                return res.data;\r\n            })\r\n            .catch((error) => {\r\n                return Promise.reject(error);\r\n            });\r\n    }\r\n\r\n    getAdminById = async (id: string) => {\r\n\r\n        return await axios.get(`${this.BASE_URL}/admin/${id}`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${this.accessToken}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                return res.data;\r\n            })\r\n            .catch((error) => {\r\n                return Promise.reject(error);\r\n            });\r\n    }\r\n\r\n    insertAdmin = async (model: Admin) => {\r\n\r\n        return await axios.post(`${this.BASE_URL}/admin`, model)\r\n            .then((res) => {\r\n                return res;\r\n            })\r\n            .catch((error) => {\r\n                return Promise.reject(error);\r\n            });\r\n    }\r\n\r\n    authenticateAdmin = async (model: AuthenticateModel) => {\r\n\r\n        return await axios.post(`${this.BASE_URL}/admin/authenticate`, model)\r\n            .then((res) => {\r\n                return res;\r\n            })\r\n            .catch(async (error) => {\r\n                return Promise.reject(error);\r\n            });\r\n    }\r\n\r\n    updateAdmin = async (model: Admin) => {\r\n\r\n        return await axios.put(`${this.BASE_URL}/admin/${model.id}`, model, {\r\n            headers: {\r\n                'Authorization': `Bearer ${this.accessToken}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                return res;\r\n            })\r\n            .catch((error) => {\r\n                return Promise.reject(error);\r\n            });\r\n    }\r\n\r\n    deleteAdmin = async (id: string) => {\r\n\r\n        return await axios.delete(`${this.BASE_URL}/admin/${id}`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${this.accessToken}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                return res;\r\n            })\r\n            .catch((error) => {\r\n                return Promise.reject(error);\r\n            });\r\n    }\r\n\r\n    resetPasswordAdmin = async (id: string, newPassword: string) => {\r\n\r\n        return await axios.post(`${this.BASE_URL}/admin/resetPassword/${id}/${newPassword}`, {}, {\r\n            headers: {\r\n                'Authorization': `Bearer ${this.accessToken}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                return res;\r\n            })\r\n            .catch((error) => {\r\n                return Promise.reject(error);\r\n            });\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region Generic\r\n\r\n    get = async (url: string) => {\r\n\r\n        return await axios.get(`${this.BASE_URL}/${url}`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${this.accessToken}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                return res.data;\r\n            })\r\n            .catch((error) => {\r\n                return Promise.reject(error.response);\r\n            });\r\n    }\r\n\r\n    getById = async (url: string, id: string) => {\r\n\r\n        return await axios.get(`${this.BASE_URL}/${url}/${id}`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${this.accessToken}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                return res.data;\r\n            })\r\n            .catch((error) => {\r\n                return Promise.reject(error.response);\r\n            });\r\n    }\r\n\r\n    insert = async <T> (url: string, model: T) => {\r\n\r\n        return await axios.post(`${this.BASE_URL}/${url}`, model, {\r\n            headers: {\r\n                'Authorization': `Bearer ${this.accessToken}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                return res;\r\n            })\r\n            .catch((error) => {\r\n                return Promise.reject(error.response);\r\n            });\r\n    }\r\n\r\n    update = async <T extends Base> (url: string, model: T) => {\r\n\r\n        return await axios.put(`${this.BASE_URL}/${url}/${model.id}`, model, {\r\n            headers: {\r\n                'Authorization': `Bearer ${this.accessToken}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                return res;\r\n            })\r\n            .catch((error) => {\r\n                return Promise.reject(error.response);\r\n            });\r\n    }\r\n\r\n    delete = async (url: string, id: string) => {\r\n\r\n        return await axios.delete(`${this.BASE_URL}/${url}/${id}`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${this.accessToken}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                return res;\r\n            })\r\n            .catch((error) => {\r\n                return Promise.reject(error.response);\r\n            });\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region Additionals\r\n\r\n    insertImage = async (url: string, file: File | undefined) => {\r\n\r\n        var formData = new FormData();\r\n        formData.append('file', file!);\r\n\r\n        return await axios.post(`${this.BASE_URL}/${url}`, formData, {\r\n            headers: {\r\n                'Authorization': `Bearer ${this.accessToken}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                return res;\r\n            })\r\n            .catch((error) => {\r\n                return Promise.reject(error.response);\r\n            });\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region External\r\n\r\n    cepSearch = async (cep: string) => {\r\n\r\n        return await axios.get(`https://viacep.com.br/ws/${cep}/json/`)\r\n            .then((res) => {\r\n                return res.data;\r\n            })\r\n            .catch((error) => {\r\n                return Promise.reject(error);\r\n            });\r\n    }\r\n\r\n    //#endregion\r\n}\r\n\r\nexport {\r\n    ADDRESS_URL,\r\n    ADDRESS_STORE_URL,\r\n    CATEGORY_URL,\r\n    CATEGORY_PRODUCT_URL,\r\n    COUPON_URL,\r\n    DELIVERY_STATUS_URL,\r\n    DELIVERY_TAX_URL,\r\n    ITEM_URL,\r\n    IMAGE_URL,\r\n    ORDER_URL,\r\n    ORDER_PRODUCT_URL,\r\n    ORDER_PRODUCT_ITEM_URL,\r\n    PAYMENT_STATUS_URL,\r\n    PAYMENT_TYPE_URL,\r\n    PRODUCT_URL,\r\n    PRODUCT_ITEM_URL,\r\n    STORE_URL,\r\n    USER_COUPON_URL,\r\n    STOREDAYHOUR_URL\r\n};\r\n\r\nexport default Api;","import { faSearch, faSyncAlt, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Form, InputGroup, Modal, Spinner, Table } from \"react-bootstrap\";\r\nimport Alert from \"../components/Alert\";\r\nimport { Props } from \"../configs/Props\";\r\nimport { Utils } from \"../configs/Utils\";\r\nimport { Validations } from \"../configs/Validations\";\r\nimport { Coupon } from \"../models/Coupon\";\r\nimport Api, { COUPON_URL } from \"../services/api\";\r\n\r\nimport styles from '../styles/coupon.module.css';\r\n\r\nconst Coupons = (props: Props) => {\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n    const [coupons, setCoupons] = useState([] as Coupon[]);\r\n    const [couponUpd, setCouponUpd] = useState({} as Coupon);\r\n    const [initCoupons, setInitCoupons] = useState([] as Coupon[]);\r\n    \r\n    const [code, setCode] = useState(\"\");\r\n    const [codeError, setCodeError] = useState(\"\");\r\n\r\n    const [idUpdate, setIdUpdate] = useState(\"\");\r\n    const [idRemove, setIdRemove] = useState(\"\");\r\n\r\n    const [isActive, setIsActive] = useState(true);\r\n    \r\n    const [btnDisableAdd, setBtnDisableAdd] = useState(false);\r\n    const [btnTxtAdd, setBtnTxtAdd] = useState<string | object>(\"Adicionar\");\r\n    const [showModalAdd, setShowModalAdd] = useState(false);\r\n    \r\n    const [btnDisableRemove, setBtnDisableRemove] = useState(false);\r\n    const [btnTxtRemove, setBtnTxtRemove] = useState<string | object>(\"Remover\");\r\n    const [showModalRemove, setShowModalRemove] = useState(false);\r\n\r\n    const api = new Api();\r\n\r\n    useEffect(() => {\r\n        \r\n        const getCoupons = async () => {\r\n\r\n            await api.get(COUPON_URL).then(res => {\r\n                setCoupons(res);\r\n                setInitCoupons(res);\r\n            });\r\n        }\r\n        getCoupons();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const results = initCoupons?.filter(cp =>\r\n            cp.code.toLowerCase().includes(search.toLowerCase())\r\n        );\r\n        setCoupons(results);\r\n    }, [initCoupons, search]);\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setSearch(event.target.value);\r\n    };\r\n\r\n    const handleAdd = async () => {\r\n\r\n        setBtnDisableAdd(true);\r\n        setBtnTxtAdd(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\r\n\r\n        var cError = Validations.validateRequiredField(code, \"código\");\r\n\r\n        if(cError)\r\n        {\r\n            setCodeError(cError);\r\n            setBtnDisableAdd(false);\r\n            setBtnTxtAdd(idUpdate !== '' ? 'Atualizar' : 'Adicionar');\r\n        }\r\n        else\r\n        {\r\n            if(idUpdate === '')\r\n            {\r\n                var model = new Coupon();\r\n                model.code = code;\r\n                model.isActive = isActive;\r\n                \r\n                await api.insert(COUPON_URL, model)\r\n                .then(res => {\r\n                    const cpn = res.data.data as Coupon;\r\n                    Utils.alertLocalStorage('Cupom inserido com sucesso!', true);\r\n                    setBtnDisableAdd(false);\r\n                    setBtnTxtAdd('Adicionar');\r\n                    setCoupons([...coupons, cpn]);\r\n                    setInitCoupons([...initCoupons, cpn]);\r\n                    handleModalAddUpd(false);\r\n                })\r\n                .catch(_ => {\r\n                    Utils.alertLocalStorage(`Ocorreu um erro ao adicionar!`, false);\r\n\r\n                    setBtnDisableAdd(false);\r\n                    setBtnTxtAdd('Adicionar');\r\n                });\r\n            }\r\n            else \r\n            {\r\n                couponUpd.code = code;\r\n                couponUpd.isActive = isActive;\r\n                \r\n                await api.update(COUPON_URL, couponUpd)\r\n                .then(res => {\r\n                    const cpn = res.data.data as Coupon;\r\n                    Utils.alertLocalStorage('Cupom atualizado com sucesso!', true);\r\n                    setBtnDisableAdd(false);\r\n                    setBtnTxtAdd('Atualizar');\r\n                    const newCpn = initCoupons.filter((x) => x.id !== cpn.id);\r\n                    setCoupons([...newCpn, cpn]);\r\n                    setInitCoupons([...newCpn, cpn]);\r\n                    handleModalAddUpd(false);\r\n                })\r\n                .catch(_ => {\r\n                    Utils.alertLocalStorage(`Ocorreu um erro ao atualizar!`, false);\r\n\r\n                    setBtnDisableAdd(false);\r\n                    setBtnTxtAdd('Atualizar');\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleRemove = async () => {\r\n\r\n        if(idRemove === '')\r\n        {\r\n            Utils.alertLocalStorage(`Ocorreu um erro ao remover!`, false);\r\n            handleModalRemove(false);\r\n        }\r\n        else\r\n        {   \r\n            await api.delete(COUPON_URL, idRemove)\r\n            .then(_ => {\r\n                Utils.alertLocalStorage('Cupom removido com sucesso!', true);\r\n                setBtnDisableRemove(false);\r\n                setBtnTxtRemove('Remover');\r\n\r\n                const newCpn = initCoupons.filter((x) => x.id !== idRemove);\r\n                setCoupons(newCpn);\r\n                setInitCoupons(newCpn);\r\n                handleModalRemove(false);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                Utils.alertLocalStorage(`Ocorreu um erro ao remover!`, false);\r\n                \r\n                setBtnDisableRemove(false);\r\n                setBtnTxtRemove('Remover');\r\n                handleModalRemove(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleModalAddUpd = async (isOpen: boolean, id: string = '') => {\r\n\r\n        if(id !== '')\r\n        {\r\n            setBtnTxtAdd('Atualizar');\r\n            await api.getById(COUPON_URL, id)\r\n            .then(res => {\r\n                const cpn = res as Coupon;\r\n                setCouponUpd(cpn);\r\n                setCode(cpn.code);\r\n                setIsActive(cpn.isActive);\r\n                setIdUpdate(id !== '' ? id : idUpdate);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                Utils.alertLocalStorage('Ocorreu um erro ao pegar os dados do cupom', false);\r\n                setShowModalAdd(false);\r\n            });\r\n        }\r\n        else\r\n        {\r\n            setBtnTxtAdd('Adicionar');\r\n            setIdUpdate('');\r\n            setCode('');\r\n            setIsActive(true);\r\n        }\r\n        setShowModalAdd(isOpen);\r\n    }\r\n\r\n    const handleModalRemove = (isRemove: boolean, id: string = '') => {\r\n\r\n        setIdRemove(id !== '' ? id : idRemove);\r\n        setShowModalRemove(isRemove);\r\n    }\r\n\r\n    const handleKeypress = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n        if (e.key === 'Enter') {\r\n          handleAdd();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`px-4`}>\r\n\r\n            <Alert state={props.location.state} />\r\n\r\n            <Modal \r\n                show={showModalAdd} \r\n                onHide={() => handleModalAddUpd(false)}\r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        Adicionar cupom\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body onKeyPress={handleKeypress}>\r\n                    <Form.Group controlId=\"formPassword\" className={`d-flex flex-column align-items-start`}>\r\n                        <Form.Label>Código</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Digite o código\" \r\n                            value={code}\r\n                            onChange={(e) => setCode(e.target.value.toUpperCase())}\r\n                        />\r\n                        <Form.Text className=\"text-danger\">\r\n                            {codeError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formCheckbox\" className={`d-flex align-items-start`}>\r\n                        <Form.Check \r\n                            type=\"checkbox\" \r\n                            label=\"Ativo\"\r\n                            checked={isActive} \r\n                            onChange={() => setIsActive(!isActive)} \r\n                        />\r\n                    </Form.Group>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button className={`button`} onClick={() => handleModalAddUpd(false)}>\r\n                        Cancelar\r\n                    </button>\r\n                    <button \r\n                        className={`button`} \r\n                        onClick={handleAdd}\r\n                        disabled={btnDisableAdd}\r\n                    >\r\n                        {btnTxtAdd}\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal \r\n                show={showModalRemove} \r\n                onHide={() => handleModalRemove(false)}\r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        Remover cupom\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>Tem certeza que deseja remover?</p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button className={`button`} onClick={() => handleModalRemove(false)}>\r\n                        Cancelar\r\n                    </button>\r\n                    <button \r\n                        className={`button`} \r\n                        onClick={handleRemove}\r\n                        disabled={btnDisableRemove}\r\n                    >\r\n                        {btnTxtRemove}\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <div>\r\n                <h3 className={`title`}>\r\n                    Cupons\r\n                </h3>\r\n            </div>\r\n\r\n            <div className={`${styles.div_btns}`}>\r\n                <button\r\n                    onClick={() => handleModalAddUpd(true)}\r\n                    className={`button ${styles.btn_add} me-md-2 me-0`}\r\n                >\r\n                    Adicionar cupom\r\n                </button>\r\n                <InputGroup className={`mt-2 mt-md-0`}>\r\n                    <Form.Control \r\n                        type=\"text\"\r\n                        placeholder=\"Pesquise aqui...\"\r\n                        value={search}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <button className={`button`}>\r\n                        <FontAwesomeIcon icon={faSearch} />\r\n                    </button>\r\n                </InputGroup>\r\n            </div>\r\n\r\n            <div className={`mt-3`}>\r\n                {coupons?.length > 0 ? \r\n                    <Table className={`${styles.table}`} responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Código</th>\r\n                                <th>Ativo</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {coupons.map((model, key) => (\r\n                                <tr key={key}>\r\n                                    <td>\r\n                                        {model.code}\r\n                                    </td>\r\n                                    <td>\r\n                                        <Form.Check \r\n                                            type=\"checkbox\"\r\n                                            checked={model.isActive} \r\n                                        />\r\n                                    </td>\r\n                                    <td align='right'>\r\n                                        <button \r\n                                            className={`button`}\r\n                                            onClick={() => handleModalAddUpd(true, model.id)}\r\n                                        >\r\n                                            <FontAwesomeIcon \r\n                                                icon={faSyncAlt} \r\n                                                className={`${styles.table_icon}`}\r\n                                                title='Atualizar' \r\n                                            />\r\n                                        </button>\r\n                                        <button \r\n                                            className={`button ms-2`} \r\n                                            onClick={() => handleModalRemove(true, model.id)}\r\n                                        >\r\n                                            <FontAwesomeIcon \r\n                                                icon={faTrash} \r\n                                                className={`${styles.table_icon}`}\r\n                                                title='Apagar'\r\n                                            />\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                : <div><p>Nenhum cupom adicionado.</p></div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Coupons;","import { faClipboardList, faCreditCard, faHamburger, faStoreAlt, faTicketAlt, faUsers } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useEffect } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Alert from \"../components/Alert\";\r\nimport { Props } from \"../configs/Props\";\r\nimport { Session } from \"../services/session\";\r\n\r\nimport styles from '../styles/home.module.css';\r\n\r\nconst Home = (props: Props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        \r\n        if(!Session.isAuthenticated())\r\n        {\r\n            history.push('/login');\r\n        }\r\n    }, []);\r\n\r\n    const handleCardMenu = (url: string) => history.push(url);\r\n\r\n    return (\r\n        <div className={`${styles.div_home}`}>\r\n\r\n            <Alert state={props.location.state} />\r\n\r\n            <div className={`text-center`}>\r\n                <h1 className={`${styles.h_home}`}>\r\n                    PAINEL ADMIN\r\n                </h1>\r\n            </div>\r\n\r\n            <div className={`row ${styles.div_row_menu}`}>\r\n                <div className={`col-md-4 d-flex justify-content-center`}>\r\n                    <Card className={`${styles.card_menu}`} onClick={() => handleCardMenu('/pedidos')}>\r\n                        <Card.Body className={`${styles.card_body_menu}`}>\r\n                            <FontAwesomeIcon icon={faClipboardList} className={`${styles.icon_menu}`} />\r\n\r\n                            <h6 className={`mt-3`}>\r\n                                Pedidos\r\n                            </h6>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                <div className={`col-md-4 mt-md-0 mt-3 d-flex justify-content-center`}>\r\n                    <Card className={`${styles.card_menu}`} onClick={() => handleCardMenu('/usuarios')}>\r\n                        <Card.Body className={`${styles.card_body_menu}`}>\r\n                            <FontAwesomeIcon icon={faUsers} className={`${styles.icon_menu}`} />\r\n                            <h6 className={`mt-3`}>\r\n                                Usuários\r\n                            </h6>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                <div className={`col-md-4 mt-md-0 mt-3 d-flex justify-content-center`}>\r\n                    <Card className={`${styles.card_menu}`} onClick={() => handleCardMenu('/produtos')}>\r\n                        <Card.Body className={`${styles.card_body_menu}`}>\r\n                            <FontAwesomeIcon icon={faHamburger} className={`${styles.icon_menu}`} />\r\n                            <h6 className={`mt-3`}>\r\n                                Produtos\r\n                            </h6>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={`row ${styles.div_row_menu} mt-3`}>\r\n                <div className={`col-md-4 d-flex justify-content-center`}>\r\n                    <Card className={`${styles.card_menu}`} onClick={() => handleCardMenu('/lojas')}>\r\n                        <Card.Body className={`${styles.card_body_menu}`}>\r\n                            <FontAwesomeIcon icon={faStoreAlt} className={`${styles.icon_menu}`} />\r\n\r\n                            <h6 className={`mt-3`}>\r\n                                Lojas\r\n                            </h6>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                <div className={`col-md-4 mt-md-0 mt-3 d-flex justify-content-center`}>\r\n                    <Card className={`${styles.card_menu}`} onClick={() => handleCardMenu('/pagamento')}>\r\n                        <Card.Body className={`${styles.card_body_menu}`}>\r\n                            <FontAwesomeIcon icon={faCreditCard} className={`${styles.icon_menu}`} />\r\n                            <h6 className={`mt-3`}>\r\n                                Meios de pagamento\r\n                            </h6>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                <div className={`col-md-4 mt-md-0 mt-3 d-flex justify-content-center`}>\r\n                    <Card className={`${styles.card_menu}`} onClick={() => handleCardMenu('/cupons')}>\r\n                        <Card.Body className={`${styles.card_body_menu}`}>\r\n                            <FontAwesomeIcon icon={faTicketAlt} className={`${styles.icon_menu}`} />\r\n                            <h6 className={`mt-3`}>\r\n                                Cupons\r\n                            </h6>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { useState, useEffect } from 'react';\r\nimport { Card, Form, Spinner } from 'react-bootstrap';\r\nimport { Validations } from '../configs/Validations';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Props } from '../configs/Props';\r\nimport Alert from '../components/Alert';\r\nimport Api from '../services/api';\r\nimport { Session } from '../services/session';\r\n\r\nimport { AuthenticateModel } from '../models/Authenticate';\r\n\r\nimport logo from '../assets/logo.png';\r\nimport styles from '../styles/login.module.css';\r\nimport { Utils } from '../configs/Utils';\r\nimport { AdminAuthenticate } from '../models/Admin';\r\n\r\nconst Login = (props: Props) => {\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [usernameError, setUsernameError] = useState('');\r\n    const [passwordError, setPasswordError] = useState('');\r\n\r\n    const [inputPassword, setInputPassword] = useState('password');\r\n    const [btnTxt, setBtnTxt] = useState<string | object>();\r\n    \r\n    const api = new Api();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        setBtnTxt(\"Entrar\");\r\n    }, []);\r\n\r\n    const changeInputPassword = () => setInputPassword(inputPassword === 'password' ? 'text' : 'password');\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        \r\n        event?.preventDefault();\r\n        setBtnTxt(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\r\n\r\n        var uError = Validations.validateUsername(username);\r\n        var pError = Validations.validatePassword(password);\r\n\r\n        if(uError || pError)\r\n        {\r\n            setUsernameError(uError);\r\n            setPasswordError(pError);\r\n            setBtnTxt(\"Entrar\");\r\n        }\r\n        else\r\n        {\r\n            const login = async () => {\r\n\r\n                var model: AuthenticateModel = {\r\n                    username, \r\n                    password\r\n                }\r\n\r\n                await api.authenticateAdmin(model)\r\n                    .then(res => {\r\n                        var userLogged = res.data as AdminAuthenticate;\r\n\r\n                        Session.login(userLogged.token, userLogged);\r\n                        Utils.alertLocalStorage('Usuário logado com sucesso!', true);\r\n                        history.push('/');\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error);\r\n                        setBtnTxt(\"Entrar\");\r\n                        Utils.alertLocalStorage(\"Usuário ou senha inválidos\", false);\r\n                    });\r\n            }\r\n            login();\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className={`${styles.div_full}`}>\r\n\r\n            <Alert state={props.location.state} />\r\n\r\n            <Card body className={`${styles.card_login}`}>\r\n                <div className={`${styles.div_img_logo} mb-3`}>\r\n                    <img \r\n                        src={logo} \r\n                        className={`${styles.img_logo} img-fluid center`} \r\n                        alt='Carioca Mix Logo'\r\n                    />\r\n                </div>\r\n\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group className={`${styles.form_group_login}`}>\r\n                        <Form.Label className={`${styles.form_label_login}`}>\r\n                            Username ou E-mail\r\n                        </Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Digite seu e-mail ou username\" \r\n                            value={username}\r\n                            onChange={(e) => setUsername(e.target.value)}\r\n                            className={`${styles.form_control_login}`}\r\n                        />\r\n                        <Form.Text className=\"text-danger\">\r\n                            {usernameError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className={`${styles.form_group_login}`}>\r\n                        <Form.Label className={`${styles.form_label_login}`}>\r\n                            Senha\r\n                        </Form.Label>\r\n                        <Form.Control \r\n                            type={inputPassword} \r\n                            placeholder=\"Digite sua senha\" \r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            className={`${styles.form_control_login}`}\r\n                        />\r\n                        <Form.Text className=\"text-danger\">\r\n                            {passwordError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formCheckbox\" className={`d-flex align-items-start`}>\r\n                        <Form.Check type=\"checkbox\" label=\"Mostrar senha\" onClick={changeInputPassword} />\r\n                    </Form.Group>\r\n\r\n                    <div className={`text-center mt-3`}>\r\n                        <button type=\"submit\" className={`${styles.btn_login}`}>\r\n                            {btnTxt}\r\n                        </button>\r\n                    </div>\r\n                </Form>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport styles from '../styles/login.module.css';\r\nimport logo from '../assets/logo.png';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst NotFound = () => {\r\n\r\n    return (\r\n        <div className={`${styles.div_full}`}>\r\n\r\n            <Card body className={`${styles.card_login}`}>\r\n                <div className={`${styles.div_img_logo} mb-3`}>\r\n                    <img \r\n                        src={logo} \r\n                        className={`${styles.img_logo} img-fluid center`} \r\n                        alt='Logo CariocaMix'\r\n                    />\r\n                </div>\r\n\r\n                <div className={`text-center`}>\r\n                    <h4 className={`${styles.h_registration}`}>Página não encontrada!</h4>\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;","\r\nconst Orders = () => {\r\n\r\n    return (\r\n        <div></div>\r\n    )\r\n}\r\n\r\nexport default Orders;","import { Base } from \"./base/Base\";\n\nexport class PaymentType extends Base {\n\n    name: string = '';\n}\n","import { faSearch, faSyncAlt, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Form, InputGroup, Modal, Spinner, Table } from \"react-bootstrap\";\r\nimport Alert from \"../components/Alert\";\r\nimport { Props } from \"../configs/Props\";\r\nimport { Utils } from \"../configs/Utils\";\r\nimport { Validations } from \"../configs/Validations\";\r\nimport { PaymentType } from \"../models/PaymentType\";\r\nimport Api, { PAYMENT_TYPE_URL } from \"../services/api\";\r\n\r\nimport styles from '../styles/paymentType.module.css';\r\n\r\nconst PaymentTypes = (props: Props) => {\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n    const [paymentTypes, setPaymentTypes] = useState([] as PaymentType[]);\r\n    const [paymentTypeUpd, setPaymentTypeUpd] = useState({} as PaymentType);\r\n    const [initPaymentTypes, setInitPaymentTypes] = useState([] as PaymentType[]);\r\n    \r\n    const [name, setCode] = useState(\"\");\r\n    const [nameError, setCodeError] = useState(\"\");\r\n\r\n    const [idUpdate, setIdUpdate] = useState(\"\");\r\n    const [idRemove, setIdRemove] = useState(\"\");\r\n    \r\n    const [btnDisableAdd, setBtnDisableAdd] = useState(false);\r\n    const [btnTxtAdd, setBtnTxtAdd] = useState<string | object>(\"Adicionar\");\r\n    const [showModalAdd, setShowModalAdd] = useState(false);\r\n    \r\n    const [btnDisableRemove, setBtnDisableRemove] = useState(false);\r\n    const [btnTxtRemove, setBtnTxtRemove] = useState<string | object>(\"Remover\");\r\n    const [showModalRemove, setShowModalRemove] = useState(false);\r\n\r\n    const api = new Api();\r\n\r\n    useEffect(() => {\r\n        \r\n        const getPaymentTypes = async () => {\r\n\r\n            await api.get(PAYMENT_TYPE_URL).then(res => {\r\n                setPaymentTypes(res);\r\n                setInitPaymentTypes(res);\r\n            });\r\n        }\r\n        getPaymentTypes();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const results = initPaymentTypes?.filter(cp =>\r\n            cp.name.toLowerCase().includes(search.toLowerCase())\r\n        );\r\n        setPaymentTypes(results);\r\n    }, [initPaymentTypes, search]);\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setSearch(event.target.value);\r\n    };\r\n\r\n    const handleAdd = async () => {\r\n\r\n        setBtnDisableAdd(true);\r\n        setBtnTxtAdd(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\r\n\r\n        var cError = Validations.validateRequiredField(name, \"nome\");\r\n\r\n        if(cError)\r\n        {\r\n            setCodeError(cError);\r\n            setBtnDisableAdd(false);\r\n            setBtnTxtAdd(idUpdate !== '' ? 'Atualizar' : 'Adicionar');\r\n        }\r\n        else\r\n        {\r\n            if(idUpdate === '')\r\n            {\r\n                var model = new PaymentType();\r\n                model.name = name;\r\n                \r\n                await api.insert(PAYMENT_TYPE_URL, model)\r\n                .then(res => {\r\n                    const cpn = res.data.data as PaymentType;\r\n                    Utils.alertLocalStorage('Meio de pagamento inserido com sucesso!', true);\r\n                    setBtnDisableAdd(false);\r\n                    setBtnTxtAdd('Adicionar');\r\n                    setPaymentTypes([...paymentTypes, cpn]);\r\n                    setInitPaymentTypes([...initPaymentTypes, cpn]);\r\n                    handleModalAddUpd(false);\r\n                })\r\n                .catch(_ => {\r\n                    Utils.alertLocalStorage(`Ocorreu um erro ao adicionar!`, false);\r\n\r\n                    setBtnDisableAdd(false);\r\n                    setBtnTxtAdd('Adicionar');\r\n                });\r\n            }\r\n            else \r\n            {\r\n                paymentTypeUpd.name = name;\r\n                \r\n                \r\n                await api.update(PAYMENT_TYPE_URL, paymentTypeUpd)\r\n                .then(res => {\r\n                    const cpn = res.data.data as PaymentType;\r\n                    Utils.alertLocalStorage('Meio de pagamento atualizado com sucesso!', true);\r\n                    setBtnDisableAdd(false);\r\n                    setBtnTxtAdd('Atualizar');\r\n                    const newCpn = initPaymentTypes.filter((x) => x.id !== cpn.id);\r\n                    setPaymentTypes([...newCpn, cpn]);\r\n                    setInitPaymentTypes([...newCpn, cpn]);\r\n                    handleModalAddUpd(false);\r\n                })\r\n                .catch(_ => {\r\n                    Utils.alertLocalStorage(`Ocorreu um erro ao atualizar!`, false);\r\n\r\n                    setBtnDisableAdd(false);\r\n                    setBtnTxtAdd('Atualizar');\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleRemove = async () => {\r\n\r\n        if(idRemove === '')\r\n        {\r\n            Utils.alertLocalStorage(`Ocorreu um erro ao remover!`, false);\r\n            handleModalRemove(false);\r\n        }\r\n        else\r\n        {   \r\n            await api.delete(PAYMENT_TYPE_URL, idRemove)\r\n            .then(_ => {\r\n                Utils.alertLocalStorage('Meio de pagamento removido com sucesso!', true);\r\n                setBtnDisableRemove(false);\r\n                setBtnTxtRemove('Remover');\r\n\r\n                const newCpn = initPaymentTypes.filter((x) => x.id !== idRemove);\r\n                setPaymentTypes(newCpn);\r\n                setInitPaymentTypes(newCpn);\r\n                handleModalRemove(false);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                Utils.alertLocalStorage(`Ocorreu um erro ao remover!`, false);\r\n                \r\n                setBtnDisableRemove(false);\r\n                setBtnTxtRemove('Remover');\r\n                handleModalRemove(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleModalAddUpd = async (isOpen: boolean, id: string = '') => {\r\n\r\n        if(id !== '')\r\n        {\r\n            setBtnTxtAdd('Atualizar');\r\n            await api.getById(PAYMENT_TYPE_URL, id)\r\n            .then(res => {\r\n                const cpn = res as PaymentType;\r\n                setPaymentTypeUpd(cpn);\r\n                setCode(cpn.name);\r\n                setIdUpdate(id !== '' ? id : idUpdate);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                Utils.alertLocalStorage('Ocorreu um erro ao pegar os dados do meio de pagamento', false);\r\n                setShowModalAdd(false);\r\n            });\r\n        }\r\n        else\r\n        {\r\n            setBtnTxtAdd('Adicionar');\r\n            setIdUpdate('');\r\n            setCode('');\r\n        }\r\n        setShowModalAdd(isOpen);\r\n    }\r\n\r\n    const handleModalRemove = (isRemove: boolean, id: string = '') => {\r\n\r\n        setIdRemove(id !== '' ? id : idRemove);\r\n        setShowModalRemove(isRemove);\r\n    }\r\n\r\n    const handleKeypress = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n        if (e.key === 'Enter') {\r\n          handleAdd();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`px-4`}>\r\n\r\n            <Alert state={props.location.state} />\r\n\r\n            <Modal \r\n                show={showModalAdd} \r\n                onHide={() => handleModalAddUpd(false)}\r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        Adicionar meio de pagamento\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body onKeyPress={handleKeypress}>\r\n                    <Form.Group controlId=\"formPassword\" className={`d-flex flex-column align-items-start`}>\r\n                        <Form.Label>Nome</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Digite o nome\" \r\n                            value={name}\r\n                            onChange={(e) => setCode(e.target.value)}\r\n                        />\r\n                        <Form.Text className=\"text-danger\">\r\n                            {nameError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button className={`button`} onClick={() => handleModalAddUpd(false)}>\r\n                        Cancelar\r\n                    </button>\r\n                    <button \r\n                        className={`button`} \r\n                        onClick={handleAdd}\r\n                        disabled={btnDisableAdd}\r\n                    >\r\n                        {btnTxtAdd}\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal \r\n                show={showModalRemove} \r\n                onHide={() => handleModalRemove(false)}\r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        Remover meio de pagamento\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>Tem certeza que deseja remover?</p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button className={`button`} onClick={() => handleModalRemove(false)}>\r\n                        Cancelar\r\n                    </button>\r\n                    <button \r\n                        className={`button`} \r\n                        onClick={handleRemove}\r\n                        disabled={btnDisableRemove}\r\n                    >\r\n                        {btnTxtRemove}\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <div>\r\n                <h3 className={`title`}>\r\n                    Meios de pagamento\r\n                </h3>\r\n            </div>\r\n\r\n            <div className={`${styles.div_btns}`}>\r\n                <button\r\n                    onClick={() => handleModalAddUpd(true)}\r\n                    className={`button ${styles.btn_add} me-md-2 me-0`}\r\n                >\r\n                    Adicionar meio de pagamento\r\n                </button>\r\n                <InputGroup className={`mt-2 mt-md-0`}>\r\n                    <Form.Control \r\n                        type=\"text\"\r\n                        placeholder=\"Pesquise aqui...\"\r\n                        value={search}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <button className={`button`}>\r\n                        <FontAwesomeIcon icon={faSearch} />\r\n                    </button>\r\n                </InputGroup>\r\n            </div>\r\n\r\n            <div className={`mt-3`}>\r\n                {paymentTypes?.length > 0 ? \r\n                    <Table className={`${styles.table}`} responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Nome</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {paymentTypes.map((model, key) => (\r\n                                <tr key={key}>\r\n                                    <td>\r\n                                        {model.name}\r\n                                    </td>\r\n                                    <td align='right'>\r\n                                        <button \r\n                                            className={`button`}\r\n                                            onClick={() => handleModalAddUpd(true, model.id)}\r\n                                        >\r\n                                            <FontAwesomeIcon \r\n                                                icon={faSyncAlt} \r\n                                                className={`${styles.table_icon}`}\r\n                                                title='Atualizar' \r\n                                            />\r\n                                        </button>\r\n                                        <button \r\n                                            className={`button ms-2`} \r\n                                            onClick={() => handleModalRemove(true, model.id)}\r\n                                        >\r\n                                            <FontAwesomeIcon \r\n                                                icon={faTrash} \r\n                                                className={`${styles.table_icon}`}\r\n                                                title='Apagar'\r\n                                            />\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                : <div><p>Nenhum meio de pagamento adicionado.</p></div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaymentTypes;","import { Base } from \"./base/Base\";\n\nexport class Category extends Base {\n\n    title: string = '';\n}\n","import { useEffect, useState } from \"react\";\r\nimport { Form, InputGroup, Modal, Spinner, Table } from \"react-bootstrap\";\r\nimport { faSearch, faSyncAlt, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Alert from \"../Alert\";\r\nimport { Utils } from \"../../configs/Utils\";\r\nimport { Validations } from \"../../configs/Validations\";\r\nimport { Category } from \"../../models/Category\";\r\nimport Api, { CATEGORY_URL } from \"../../services/api\";\r\n\r\nimport styles from '../../styles/default.module.css';\r\n\r\nconst CategoryComponent = () => {\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n    const [categorys, setCategorys] = useState([] as Category[]);\r\n    const [categoryUpd, setCategoryUpd] = useState({} as Category);\r\n    const [initCategorys, setInitCategorys] = useState([] as Category[]);\r\n    \r\n    const [title, setTitle] = useState(\"\");\r\n    const [titleError, setTitleError] = useState(\"\");\r\n\r\n    const [idUpdate, setIdUpdate] = useState(\"\");\r\n    const [idRemove, setIdRemove] = useState(\"\");\r\n    \r\n    const [btnDisableAdd, setBtnDisableAdd] = useState(false);\r\n    const [btnTxtAdd, setBtnTxtAdd] = useState<string | object>(\"Adicionar\");\r\n    const [showModalAdd, setShowModalAdd] = useState(false);\r\n    \r\n    const [btnDisableRemove, setBtnDisableRemove] = useState(false);\r\n    const [btnTxtRemove, setBtnTxtRemove] = useState<string | object>(\"Remover\");\r\n    const [showModalRemove, setShowModalRemove] = useState(false);\r\n\r\n    const api = new Api();\r\n\r\n    useEffect(() => {\r\n        \r\n        const getCategorys = async () => {\r\n\r\n            await api.get(CATEGORY_URL).then(res => {\r\n                setCategorys(res);\r\n                setInitCategorys(res);\r\n            });\r\n        }\r\n        getCategorys();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const results = initCategorys?.filter(cp =>\r\n            cp.title.toLowerCase().includes(search.toLowerCase())\r\n        );\r\n        setCategorys(results);\r\n    }, [initCategorys, search]);\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setSearch(event.target.value);\r\n    };\r\n\r\n    const handleAdd = async () => {\r\n\r\n        setBtnDisableAdd(true);\r\n        setBtnTxtAdd(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\r\n\r\n        var cError = Validations.validateRequiredField(title, \"nome\");\r\n\r\n        if(cError)\r\n        {\r\n            setTitleError(cError);\r\n            setBtnDisableAdd(false);\r\n            setBtnTxtAdd(idUpdate !== '' ? 'Atualizar' : 'Adicionar');\r\n        }\r\n        else\r\n        {\r\n            if(idUpdate === '')\r\n            {\r\n                var model = new Category();\r\n                model.title = title;\r\n                \r\n                await api.insert(CATEGORY_URL, model)\r\n                .then(res => {\r\n                    const cpn = res.data.data as Category;\r\n                    Utils.alertLocalStorage('Categoria inserida com sucesso!', true);\r\n                    setBtnDisableAdd(false);\r\n                    setBtnTxtAdd('Adicionar');\r\n                    setCategorys([...categorys, cpn]);\r\n                    setInitCategorys([...initCategorys, cpn]);\r\n                    handleModalAddUpd(false);\r\n                })\r\n                .catch(_ => {\r\n                    Utils.alertLocalStorage(`Ocorreu um erro ao adicionar!`, false);\r\n\r\n                    setBtnDisableAdd(false);\r\n                    setBtnTxtAdd('Adicionar');\r\n                });\r\n            }\r\n            else \r\n            {\r\n                categoryUpd.title = title;\r\n                \r\n                \r\n                await api.update(CATEGORY_URL, categoryUpd)\r\n                .then(res => {\r\n                    const cpn = res.data.data as Category;\r\n                    Utils.alertLocalStorage('Categoria atualizada com sucesso!', true);\r\n                    setBtnDisableAdd(false);\r\n                    setBtnTxtAdd('Atualizar');\r\n                    const newCpn = initCategorys.filter((x) => x.id !== cpn.id);\r\n                    setCategorys([...newCpn, cpn]);\r\n                    setInitCategorys([...newCpn, cpn]);\r\n                    handleModalAddUpd(false);\r\n                })\r\n                .catch(_ => {\r\n                    Utils.alertLocalStorage(`Ocorreu um erro ao atualizar!`, false);\r\n\r\n                    setBtnDisableAdd(false);\r\n                    setBtnTxtAdd('Atualizar');\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleRemove = async () => {\r\n\r\n        if(idRemove === '')\r\n        {\r\n            Utils.alertLocalStorage(`Ocorreu um erro ao remover!`, false);\r\n            handleModalRemove(false);\r\n        }\r\n        else\r\n        {   \r\n            await api.delete(CATEGORY_URL, idRemove)\r\n            .then(_ => {\r\n                Utils.alertLocalStorage('Categoria removida com sucesso!', true);\r\n                setBtnDisableRemove(false);\r\n                setBtnTxtRemove('Remover');\r\n\r\n                const newCpn = initCategorys.filter((x) => x.id !== idRemove);\r\n                setCategorys(newCpn);\r\n                setInitCategorys(newCpn);\r\n                handleModalRemove(false);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                Utils.alertLocalStorage(`Ocorreu um erro ao remover!`, false);\r\n                \r\n                setBtnDisableRemove(false);\r\n                setBtnTxtRemove('Remover');\r\n                handleModalRemove(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleModalAddUpd = async (isOpen: boolean, id: string = '') => {\r\n\r\n        if(!isOpen)\r\n        {\r\n            setTitle('');\r\n            setShowModalAdd(isOpen);\r\n        }\r\n        else\r\n        {\r\n            if(id !== '')\r\n            {\r\n                setBtnTxtAdd('Atualizar');\r\n                await api.getById(CATEGORY_URL, id)\r\n                .then(res => {\r\n                    const cpn = res as Category;\r\n                    setCategoryUpd(cpn);\r\n                    setTitle(cpn.title);\r\n                    setIdUpdate(id !== '' ? id : idUpdate);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    Utils.alertLocalStorage('Ocorreu um erro ao pegar os dados da categoria', false);\r\n                    setShowModalAdd(false);\r\n                });\r\n            }\r\n            else\r\n            {\r\n                setBtnTxtAdd('Adicionar');\r\n                setIdUpdate('');\r\n                setTitle('');\r\n            }\r\n            setShowModalAdd(isOpen);\r\n        }\r\n    }\r\n\r\n    const handleModalRemove = (isRemove: boolean, id: string = '') => {\r\n\r\n        setIdRemove(id !== '' ? id : idRemove);\r\n        setShowModalRemove(isRemove);\r\n    }\r\n\r\n    const handleKeypress = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n        if (e.key === 'Enter') {\r\n          handleAdd();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`px-4`}>\r\n\r\n            <Alert />\r\n\r\n            <Modal \r\n                show={showModalAdd} \r\n                onHide={() => handleModalAddUpd(false)}\r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        Adicionar categoria\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body onKeyPress={handleKeypress}>\r\n                    <Form.Group>\r\n                        <Form.Label>Nome</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Digite o nome\" \r\n                            value={title}\r\n                            onChange={(e) => setTitle(e.target.value)}\r\n                            />\r\n                        <Form.Text className=\"text-danger\">\r\n                            {titleError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button className={`button`} onClick={() => handleModalAddUpd(false)}>\r\n                        Cancelar\r\n                    </button>\r\n                    <button \r\n                        className={`button`} \r\n                        onClick={handleAdd}\r\n                        disabled={btnDisableAdd}\r\n                    >\r\n                        {btnTxtAdd}\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal \r\n                show={showModalRemove} \r\n                onHide={() => handleModalRemove(false)}\r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        Remover categoria\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>Tem certeza que deseja remover?</p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button className={`button`} onClick={() => handleModalRemove(false)}>\r\n                        Cancelar\r\n                    </button>\r\n                    <button \r\n                        className={`button`} \r\n                        onClick={handleRemove}\r\n                        disabled={btnDisableRemove}\r\n                    >\r\n                        {btnTxtRemove}\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <div>\r\n                <h3 className={`title`}>\r\n                    Categorias\r\n                </h3>\r\n            </div>\r\n\r\n            <div className={`${styles.div_btns}`}>\r\n                <button\r\n                    onClick={() => handleModalAddUpd(true)}\r\n                    className={`button ${styles.btn_add} me-md-2 me-0`}\r\n                >\r\n                    Adicionar categoria\r\n                </button>\r\n                <InputGroup className={`mt-2 mt-md-0`}>\r\n                    <Form.Control \r\n                        type=\"text\"\r\n                        placeholder=\"Pesquise aqui...\"\r\n                        value={search}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <button className={`button`}>\r\n                        <FontAwesomeIcon icon={faSearch} />\r\n                    </button>\r\n                </InputGroup>\r\n            </div>\r\n\r\n            <div className={`mt-3`}>\r\n                {categorys?.length > 0 ? \r\n                    <Table className={`${styles.table}`} responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Nome</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {categorys.map((model, key) => (\r\n                                <tr key={key}>\r\n                                    <td>\r\n                                        {model.title}\r\n                                    </td>\r\n                                    <td align='right'>\r\n                                        <button \r\n                                            className={`button`}\r\n                                            onClick={() => handleModalAddUpd(true, model.id)}\r\n                                        >\r\n                                            <FontAwesomeIcon \r\n                                                icon={faSyncAlt} \r\n                                                className={`${styles.table_icon}`}\r\n                                                title='Atualizar' \r\n                                            />\r\n                                        </button>\r\n                                        <button \r\n                                            className={`button ms-2`} \r\n                                            onClick={() => handleModalRemove(true, model.id)}\r\n                                        >\r\n                                            <FontAwesomeIcon \r\n                                                icon={faTrash} \r\n                                                className={`${styles.table_icon}`}\r\n                                                title='Apagar'\r\n                                            />\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                : <div><p>Nenhuma categoria adicionada.</p></div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoryComponent;","import { Base } from \"./base/Base\";\n\nexport class Item extends Base {\n\n    title: string = '';\n    \n    price: number = 0;\n}\n","import { useEffect, useState } from \"react\";\r\nimport { Form, InputGroup, Modal, Spinner, Table } from \"react-bootstrap\";\r\nimport { faSearch, faSyncAlt, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport Alert from \"../Alert\";\r\nimport { Utils } from \"../../configs/Utils\";\r\nimport { Validations } from \"../../configs/Validations\";\r\nimport { Item } from \"../../models/Item\";\r\nimport Api, { ITEM_URL } from \"../../services/api\";\r\n\r\nimport styles from '../../styles/default.module.css';\r\n\r\nconst ItemComponent = () => {\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n    const [items, setItems] = useState([] as Item[]);\r\n    const [itemUpd, setItemUpd] = useState({} as Item);\r\n    const [initItems, setInitItems] = useState([] as Item[]);\r\n    \r\n    const [title, setTitle] = useState(\"\");\r\n    const [titleError, setTitleError] = useState(\"\");\r\n    const [price, setPrice] = useState(\"\");\r\n    const [priceError, setPriceError] = useState(\"\");\r\n\r\n    const [idUpdate, setIdUpdate] = useState(\"\");\r\n    const [idRemove, setIdRemove] = useState(\"\");\r\n    \r\n    const [btnDisableAdd, setBtnDisableAdd] = useState(false);\r\n    const [btnTxtAdd, setBtnTxtAdd] = useState<string | object>(\"Adicionar\");\r\n    const [showModalAdd, setShowModalAdd] = useState(false);\r\n    \r\n    const [btnDisableRemove, setBtnDisableRemove] = useState(false);\r\n    const [btnTxtRemove, setBtnTxtRemove] = useState<string | object>(\"Remover\");\r\n    const [showModalRemove, setShowModalRemove] = useState(false);\r\n\r\n    const api = new Api();\r\n\r\n    useEffect(() => {\r\n        \r\n        const getItems = async () => {\r\n\r\n            await api.get(ITEM_URL).then(res => {\r\n                setItems(res);\r\n                setInitItems(res);\r\n            });\r\n        }\r\n        getItems();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const results = initItems?.filter(cp =>\r\n            cp.title.toLowerCase().includes(search.toLowerCase())\r\n        );\r\n        setItems(results);\r\n    }, [initItems, search]);\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setSearch(event.target.value);\r\n    };\r\n\r\n    const handleAdd = async () => {\r\n\r\n        setBtnDisableAdd(true);\r\n        setBtnTxtAdd(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\r\n\r\n        var cError = Validations.validateRequiredField(title, \"nome\");\r\n        var pError = Validations.validateRequiredField(price, \"preço\");\r\n\r\n        if(cError || pError)\r\n        {\r\n            setTitleError(cError);\r\n            setPriceError(pError);\r\n            setBtnDisableAdd(false);\r\n            setBtnTxtAdd(idUpdate !== '' ? 'Atualizar' : 'Adicionar');\r\n        }\r\n        else\r\n        {\r\n            if(idUpdate === '')\r\n            {\r\n                var model = new Item();\r\n                model.title = title;\r\n                model.price = Number.parseFloat(Utils.convertToCurrencyDb(price));\r\n                \r\n                await api.insert(ITEM_URL, model)\r\n                .then(res => {\r\n                    const cpn = res.data.data as Item;\r\n                    Utils.alertLocalStorage('Item inserido com sucesso!', true);\r\n                    setBtnDisableAdd(false);\r\n                    setBtnTxtAdd('Adicionar');\r\n                    setItems([...items, cpn]);\r\n                    setInitItems([...initItems, cpn]);\r\n                    handleModalAddUpd(false);\r\n                })\r\n                .catch(_ => {\r\n                    Utils.alertLocalStorage(`Ocorreu um erro ao adicionar!`, false);\r\n\r\n                    setBtnDisableAdd(false);\r\n                    setBtnTxtAdd('Adicionar');\r\n                });\r\n            }\r\n            else \r\n            {\r\n                itemUpd.title = title;\r\n                itemUpd.price = Number.parseFloat(Utils.convertToCurrencyDb(price));\r\n                \r\n                await api.update(ITEM_URL, itemUpd)\r\n                .then(res => {\r\n                    const cpn = res.data.data as Item;\r\n                    Utils.alertLocalStorage('Item atualizado com sucesso!', true);\r\n                    setBtnDisableAdd(false);\r\n                    setBtnTxtAdd('Atualizar');\r\n                    const newCpn = initItems.filter((x) => x.id !== cpn.id);\r\n                    setItems([...newCpn, cpn]);\r\n                    setInitItems([...newCpn, cpn]);\r\n                    handleModalAddUpd(false);\r\n                })\r\n                .catch(_ => {\r\n                    Utils.alertLocalStorage(`Ocorreu um erro ao atualizar!`, false);\r\n\r\n                    setBtnDisableAdd(false);\r\n                    setBtnTxtAdd('Atualizar');\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleRemove = async () => {\r\n\r\n        if(idRemove === '')\r\n        {\r\n            Utils.alertLocalStorage(`Ocorreu um erro ao remover!`, false);\r\n            handleModalRemove(false);\r\n        }\r\n        else\r\n        {   \r\n            await api.delete(ITEM_URL, idRemove)\r\n            .then(_ => {\r\n                Utils.alertLocalStorage('Item removido com sucesso!', true);\r\n                setBtnDisableRemove(false);\r\n                setBtnTxtRemove('Remover');\r\n\r\n                const newCpn = initItems.filter((x) => x.id !== idRemove);\r\n                setItems(newCpn);\r\n                setInitItems(newCpn);\r\n                handleModalRemove(false);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                Utils.alertLocalStorage(`Ocorreu um erro ao remover!`, false);\r\n                \r\n                setBtnDisableRemove(false);\r\n                setBtnTxtRemove('Remover');\r\n                handleModalRemove(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleModalAddUpd = async (isOpen: boolean, id: string = '') => {\r\n\r\n        if(!isOpen)\r\n        {\r\n            setTitle('');\r\n            setPrice('');\r\n            setShowModalAdd(isOpen);\r\n        }\r\n        else\r\n        {\r\n            if(id !== '')\r\n            {\r\n                setBtnTxtAdd('Atualizar');\r\n                await api.getById(ITEM_URL, id)\r\n                .then(res => {\r\n                    const cpn = res as Item;\r\n                    setItemUpd(cpn);\r\n                    setTitle(cpn.title);\r\n                    setPrice(Utils.currencyValue(cpn.price).toString());\r\n                    setIdUpdate(id !== '' ? id : idUpdate);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    Utils.alertLocalStorage('Ocorreu um erro ao pegar os dados do item', false);\r\n                    setShowModalAdd(false);\r\n                });\r\n            }\r\n            else\r\n            {\r\n                setBtnTxtAdd('Adicionar');\r\n                setIdUpdate('');\r\n                setTitle('');\r\n            }\r\n            setShowModalAdd(isOpen);\r\n        }\r\n    }\r\n\r\n    const handleModalRemove = (isRemove: boolean, id: string = '') => {\r\n\r\n        setIdRemove(id !== '' ? id : idRemove);\r\n        setShowModalRemove(isRemove);\r\n    }\r\n\r\n    const handleKeypress = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n        if (e.key === 'Enter') {\r\n          handleAdd();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`px-4`}>\r\n\r\n            <Alert />\r\n\r\n            <Modal \r\n                show={showModalAdd} \r\n                onHide={() => handleModalAddUpd(false)}\r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        Adicionar item\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body onKeyPress={handleKeypress}>\r\n                    <Form.Group>\r\n                        <Form.Label>Nome</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Digite o nome\" \r\n                            value={title}\r\n                            onChange={(e) => setTitle(e.target.value)}\r\n                            />\r\n                        <Form.Text className=\"text-danger\">\r\n                            {titleError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className={`mb-2`}>\r\n                        <Form.Label>Preço</Form.Label>\r\n                        <NumberFormat \r\n                            className={`form-control`}\r\n                            placeholder=\"Digite o preço\" \r\n                            value={price} \r\n                            onChange={(e) => setPrice(e.target.value)}\r\n                            decimalSeparator=','\r\n                            thousandSeparator='.'\r\n                            inputmode=\"numeric\"\r\n                        />\r\n                        <Form.Text className=\"text-danger\">\r\n                            {priceError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button className={`button`} onClick={() => handleModalAddUpd(false)}>\r\n                        Cancelar\r\n                    </button>\r\n                    <button \r\n                        className={`button`} \r\n                        onClick={handleAdd}\r\n                        disabled={btnDisableAdd}\r\n                    >\r\n                        {btnTxtAdd}\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal \r\n                show={showModalRemove} \r\n                onHide={() => handleModalRemove(false)}\r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        Remover item\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>Tem certeza que deseja remover?</p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button className={`button`} onClick={() => handleModalRemove(false)}>\r\n                        Cancelar\r\n                    </button>\r\n                    <button \r\n                        className={`button`} \r\n                        onClick={handleRemove}\r\n                        disabled={btnDisableRemove}\r\n                    >\r\n                        {btnTxtRemove}\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <div>\r\n                <h3 className={`title`}>\r\n                    Itens\r\n                </h3>\r\n            </div>\r\n\r\n            <div className={`${styles.div_btns}`}>\r\n                <button\r\n                    onClick={() => handleModalAddUpd(true)}\r\n                    className={`button ${styles.btn_add} me-md-2 me-0`}\r\n                >\r\n                    Adicionar item\r\n                </button>\r\n                <InputGroup className={`mt-2 mt-md-0`}>\r\n                    <Form.Control \r\n                        type=\"text\"\r\n                        placeholder=\"Pesquise aqui...\"\r\n                        value={search}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <button className={`button`}>\r\n                        <FontAwesomeIcon icon={faSearch} />\r\n                    </button>\r\n                </InputGroup>\r\n            </div>\r\n\r\n            <div className={`mt-3`}>\r\n                {items?.length > 0 ? \r\n                    <Table className={`${styles.table}`} responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Nome</th>\r\n                                <th>Preço</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {items.map((model, key) => (\r\n                                <tr key={key}>\r\n                                    <td>\r\n                                        {model.title}\r\n                                    </td>\r\n                                    <td>\r\n                                        {Utils.currencyValue(model.price)}\r\n                                    </td>\r\n                                    <td align='right'>\r\n                                        <button \r\n                                            className={`button`}\r\n                                            onClick={() => handleModalAddUpd(true, model.id)}\r\n                                        >\r\n                                            <FontAwesomeIcon \r\n                                                icon={faSyncAlt} \r\n                                                className={`${styles.table_icon}`}\r\n                                                title='Atualizar' \r\n                                            />\r\n                                        </button>\r\n                                        <button \r\n                                            className={`button ms-2`} \r\n                                            onClick={() => handleModalRemove(true, model.id)}\r\n                                        >\r\n                                            <FontAwesomeIcon \r\n                                                icon={faTrash} \r\n                                                className={`${styles.table_icon}`}\r\n                                                title='Apagar'\r\n                                            />\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                : <div><p>Nenhum item adicionado.</p></div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemComponent;","import { Base } from \"./base/Base\";\nimport { CategoryProduct } from \"./CategoryProduct\";\nimport { ProductItem } from \"./ProductItem\";\n\nexport class Product extends Base {\n\n    title: string = '';\n    \n    description: string = '';\n    \n    image: string = '';\n    \n    price: number = 0;\n\n    points: number = 0;\n\n    isOneItem: boolean = false;\n\n    categoryProductsId: string[] | null = null;\n    \n    categoryProducts: CategoryProduct[] | null = null;\n    \n    productItemsId: string[] | null = null;\n\n    productItems: ProductItem[] | null = null;\n}\n","\r\nexport class SelectModel {\r\n\r\n    constructor(value?: string, label?: string)\r\n    {\r\n        this.value = value || '';\r\n        this.label = label || '';\r\n    }\r\n    \r\n    value: string = '';\r\n    label: string = '';\r\n}","import { v4 } from \"uuid\";\nimport { Base } from \"./base/Base\";\n\nexport class CategoryProduct extends Base {\n\n    constructor(categoryId: string, productId: string) {\n        super();\n        this.categoryId = categoryId;\n        this.productId = productId;\n    }\n    categoryId: string = v4();\n\n    productId: string = v4();\n}\n","import { ReactNode, useState } from \"react\";\r\nimport { faSortDown, faSortUp } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Accordion, AccordionProps, Card } from \"react-bootstrap\";\r\nimport styles from '../styles/default.module.css';\r\n\r\ntype Props = AccordionProps & {\r\n    title: string;\r\n    body: ReactNode;\r\n}\r\n\r\nconst AccordionMenu = ({ title, body, ...rest }: Props) => {\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    return (\r\n        <Accordion {...rest}>\r\n            <Card>\r\n                <Accordion.Toggle \r\n                    as={Card.Header} \r\n                    eventKey=\"0\" \r\n                    className={`${styles.header_prod}`}\r\n                    onClick={() => setOpen(!open)}\r\n                >\r\n                    <span className={`${styles.span_header_prod}`}>\r\n                        {title}\r\n                    </span>\r\n                    { !open ?\r\n                        <div>\r\n                            <FontAwesomeIcon icon={faSortUp} className={`${styles.icon_header_bottom}`} />\r\n                        </div>\r\n                    :\r\n                        <div>\r\n                            <FontAwesomeIcon icon={faSortDown} className={`${styles.icon_header_top}`} />\r\n                        </div>\r\n                    }\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body>\r\n                        {body}\r\n                    </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n        </Accordion>\r\n    )\r\n}\r\n\r\nexport default AccordionMenu;","import { v4 } from \"uuid\";\nimport { Base } from \"./base/Base\";\nimport { Item } from \"./Item\";\nimport { Product } from \"./Product\";\n\nexport class ProductItem extends Base {\n\n    productId: string = v4();\n\n    product: Product | null = null;\n    \n    itemId: string = v4();\n\n    item: Item | null = null;\n    \n    isDefault: boolean = false;\n    \n    price: number = 0;\n}\n","import React, { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { Form, InputGroup, Modal, Spinner, Table } from \"react-bootstrap\";\r\nimport { faSearch, faSyncAlt, faTimes, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport Select, { ValueType } from \"react-select\";\r\nimport Alert from \"../Alert\";\r\nimport { Utils } from \"../../configs/Utils\";\r\nimport { Validations } from \"../../configs/Validations\";\r\nimport { Product } from \"../../models/Product\";\r\nimport { Category } from \"../../models/Category\";\r\nimport { SelectModel } from \"../../models/utils/SelectModel\";\r\nimport { Item } from \"../../models/Item\";\r\nimport { Image } from \"../../models/Image\";\r\nimport { CategoryProduct } from \"../../models/CategoryProduct\";\r\nimport Api, { CATEGORY_URL, IMAGE_URL, ITEM_URL, PRODUCT_URL } from \"../../services/api\";\r\nimport AccordionMenu from \"../AccordionMenu\";\r\nimport { ProductItem } from \"../../models/ProductItem\";\r\nimport styles from '../../styles/default.module.css';\r\nimport logo from '../../assets/logo.png';\r\n\r\nconst ProductComponent = () => {\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n    const [products, setProducts] = useState([] as Product[]);\r\n    const [productUpd, setProductUpd] = useState({} as Product);\r\n    const [initProducts, setInitProducts] = useState([] as Product[]);\r\n\r\n    const [items, setItems] = useState([] as Item[]);\r\n    const [defaultItems, setDefaultItems] = useState([] as Item[]);\r\n    const [additionalItems, setAdditionalItems] = useState([] as Item[]);\r\n    \r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [price, setPrice] = useState(\"\");\r\n    const [isOneItem, setIsOneItem] = useState(false);\r\n    const [category, setCategory] = useState<SelectModel | null>();\r\n    const [optionCategory, setOptionCategory] = useState<SelectModel[]>();\r\n\r\n    const [categoryError, setCategoryError] = useState(\"\");\r\n    const [titleError, setTitleError] = useState(\"\");\r\n    const [priceError, setPriceError] = useState(\"\");\r\n\r\n    const [image, setImage] = useState('');\r\n    const [filename, setFilename] = useState('Selecione uma imagem (máx. 5MB)');\r\n    const fileInput = useRef<HTMLInputElement>(null);\r\n    const [selectedFile, setSelectedFile] = useState<File>();\r\n\r\n    const [idUpdate, setIdUpdate] = useState(\"\");\r\n    const [idRemove, setIdRemove] = useState(\"\");\r\n    \r\n    const [btnDisableAdd, setBtnDisableAdd] = useState(false);\r\n    const [btnTxtAdd, setBtnTxtAdd] = useState<string | object>(\"Adicionar\");\r\n    const [showModalAdd, setShowModalAdd] = useState(false);\r\n    \r\n    const [btnDisableRemove, setBtnDisableRemove] = useState(false);\r\n    const [btnTxtRemove, setBtnTxtRemove] = useState<string | object>(\"Remover\");\r\n    const [showModalRemove, setShowModalRemove] = useState(false);\r\n\r\n    const api = useMemo(() => new Api(), []);\r\n    \r\n    useEffect(() => {\r\n        \r\n        const getProducts = async () => {\r\n\r\n            await api.get(PRODUCT_URL).then(res => {\r\n                setProducts(res);\r\n                setInitProducts(res);\r\n            });\r\n        }\r\n        getProducts();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const results = initProducts?.filter(cp =>\r\n            cp.title.toLowerCase().includes(search.toLowerCase())\r\n        );\r\n        setProducts(results);\r\n    }, [initProducts, search]);\r\n\r\n    useEffect(() => {\r\n        \r\n        const getCategorys = async () => {\r\n\r\n            await api.get(CATEGORY_URL)\r\n            .then(res => {\r\n\r\n                const categorys = res as Category[];\r\n\r\n                var modelSelect = new Array<SelectModel>();\r\n                categorys!.forEach(g => {   \r\n                    var cSel = new SelectModel(g.id, g.title);\r\n                    modelSelect.push(cSel);\r\n                });\r\n                setOptionCategory(modelSelect);\r\n            })\r\n            .catch(err => {\r\n            });\r\n        }\r\n        getCategorys();\r\n        \r\n        const getItems = async () => {\r\n\r\n            await api.get(ITEM_URL)\r\n            .then(res => {\r\n                const resi = res as Item[];\r\n                setItems(resi);\r\n            })\r\n            .catch(err => {\r\n            });\r\n        }\r\n        getItems();\r\n    }, [api]);\r\n\r\n    const handleCategory = (event: ValueType<SelectModel, false>) => setCategory(event);\r\n\r\n    const handleFileInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if(e.target.files !== null)\r\n        {\r\n            var file = e.target.files[0];\r\n            var mb = 5 * 1024 * 1024;\r\n            \r\n            if(file.size > mb)\r\n            {\r\n                alert('O arquivo não pode ser maior que 5MB!');\r\n            }\r\n            else if(Utils.validImageExtensions.filter(x => x === file.type.toString()).length === 0)\r\n            {\r\n                alert('O arquivo deve ser uma imagem!');\r\n            }\r\n            else\r\n            {\r\n                setFilename(file.name);\r\n                setSelectedFile(file);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setSearch(event.target.value);\r\n    };\r\n\r\n    const handleAdd = async () => {\r\n\r\n        setBtnDisableAdd(true);\r\n        setBtnTxtAdd(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\r\n\r\n        var catError = Validations.validateRequiredSelect(category, \"categoria\");\r\n        var cError = Validations.validateRequiredField(title, \"nome\");\r\n        var pError = Validations.validateRequiredField(price, \"preço\");\r\n\r\n        if(catError || cError || pError)\r\n        {\r\n            setCategoryError(catError);\r\n            setTitleError(cError);\r\n            setPriceError(pError);\r\n            setBtnDisableAdd(false);\r\n            setBtnTxtAdd(idUpdate !== '' ? 'Atualizar' : 'Adicionar');\r\n        }\r\n        else\r\n        {\r\n            if(idUpdate === '')\r\n            {\r\n                var model = new Product();\r\n                model.title = title;\r\n                model.description = description;\r\n                model.price = Number.parseFloat(Utils.convertToCurrencyDb(price));\r\n                model.isOneItem = isOneItem;\r\n                model.categoryProducts = new Array<CategoryProduct>();\r\n                model.categoryProducts.push(new CategoryProduct(category?.value!, model.id));\r\n                \r\n                if(defaultItems.length > 0 || additionalItems.length > 0)\r\n                {\r\n                    model.productItems = new Array<ProductItem>();\r\n\r\n                    defaultItems.forEach(x => {\r\n\r\n                        let newpi = new ProductItem();\r\n                        newpi.isDefault = true;\r\n                        newpi.price = x.price;\r\n                        newpi.itemId = x.id;\r\n                        model.productItems?.push(newpi);\r\n                    });\r\n\r\n                    additionalItems.forEach(x => {\r\n\r\n                        let newpi = new ProductItem();\r\n                        newpi.isDefault = false;\r\n                        newpi.price = x.price;\r\n                        newpi.itemId = x.id;\r\n                        model.productItems?.push(newpi);\r\n                    });\r\n                }\r\n\r\n                const addProduct = async () => {\r\n\r\n                    await api.insert(PRODUCT_URL, model)\r\n                    .then(resp => {\r\n                        const cpn = resp.data.data as Product;\r\n\r\n                        Utils.alertLocalStorage('Produto inserido com sucesso!', true);\r\n                        setBtnDisableAdd(false);\r\n                        setBtnTxtAdd('Adicionar');\r\n                        setProducts([...products, cpn]);\r\n                        setInitProducts([...initProducts, cpn]);\r\n                        handleModalAddUpd(false);\r\n                    })\r\n                    .catch(err => {\r\n                        Utils.alertLocalStorage(`${err.data.message}`, false);\r\n                        setBtnDisableAdd(false);\r\n                        setBtnTxtAdd('Adicionar');\r\n                    });\r\n                }\r\n                \r\n                if(selectedFile !== undefined)\r\n                {\r\n                    await api.insertImage(`${IMAGE_URL}/upload`, selectedFile)\r\n                    .then(async res => {\r\n                        const image = res.data.image as Image;\r\n                        model.image = image.fileUrl;\r\n    \r\n                        await addProduct();\r\n                    });\r\n                }\r\n                else\r\n                {\r\n                    await addProduct();\r\n                }\r\n            }\r\n            else \r\n            {\r\n                productUpd.id = idUpdate;\r\n                productUpd.title = title;\r\n                productUpd.description = description;\r\n                productUpd.price = Number.parseFloat(Utils.convertToCurrencyDb(price));\r\n                productUpd.isOneItem = isOneItem;\r\n                productUpd.categoryProducts = new Array<CategoryProduct>();\r\n                productUpd.categoryProducts.push(new CategoryProduct(category?.value!, productUpd.id));\r\n                \r\n                if(defaultItems.length > 0 || additionalItems.length > 0)\r\n                {\r\n                    productUpd.productItems = new Array<ProductItem>();\r\n\r\n                    defaultItems.forEach(x => {\r\n\r\n                        let newpi = new ProductItem();\r\n                        newpi.isDefault = true;\r\n                        newpi.price = x.price;\r\n                        newpi.itemId = x.id;\r\n                        productUpd.productItems?.push(newpi);\r\n                    });\r\n\r\n                    additionalItems.forEach(x => {\r\n\r\n                        let newpi = new ProductItem();\r\n                        newpi.isDefault = false;\r\n                        newpi.price = x.price;\r\n                        newpi.itemId = x.id;\r\n                        productUpd.productItems?.push(newpi);\r\n                    });\r\n                }\r\n                \r\n                const update = async () => {\r\n                    await api.update(PRODUCT_URL, productUpd)\r\n                    .then(res => {\r\n                        const cpn = res.data.data as Product;\r\n\r\n                        Utils.alertLocalStorage('Produto atualizado com sucesso!', true);\r\n                        setBtnDisableAdd(false);\r\n                        setBtnTxtAdd('Atualizar');\r\n                        const newCpn = initProducts;\r\n                        const index = initProducts.findIndex(x => x.id === cpn.id);\r\n                        newCpn[index] = cpn;\r\n                        setProducts([...newCpn]);\r\n                        setInitProducts([...newCpn]);\r\n                        handleModalAddUpd(false);\r\n                    })\r\n                    .catch(err => {\r\n                        Utils.alertLocalStorage(`${err.data.message}`, false);\r\n                        setBtnDisableAdd(false);\r\n                        setBtnTxtAdd('Atualizar');\r\n                    });\r\n                }\r\n\r\n                if(selectedFile !== undefined)\r\n                {\r\n                    await api.insertImage(`${IMAGE_URL}/upload`, selectedFile)\r\n                    .then(async res => {\r\n                        const image = res.data.image as Image;\r\n                        productUpd.image = image.fileUrl;\r\n\r\n                        await update();\r\n                    });\r\n                }\r\n                else\r\n                {\r\n                    await update();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleRemove = async () => {\r\n\r\n        if(idRemove === '')\r\n        {\r\n            Utils.alertLocalStorage(`Ocorreu um erro ao remover!`, false);\r\n            handleModalRemove(false);\r\n        }\r\n        else\r\n        {   \r\n            await api.delete(PRODUCT_URL, idRemove)\r\n            .then(_ => {\r\n                Utils.alertLocalStorage('Produto removido com sucesso!', true);\r\n                setBtnDisableRemove(false);\r\n                setBtnTxtRemove('Remover');\r\n\r\n                const newCpn = initProducts.filter((x) => x.id !== idRemove);\r\n                setProducts(newCpn);\r\n                setInitProducts(newCpn);\r\n                handleModalRemove(false);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                Utils.alertLocalStorage(`Ocorreu um erro ao remover!`, false);\r\n                \r\n                setBtnDisableRemove(false);\r\n                setBtnTxtRemove('Remover');\r\n                handleModalRemove(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleModalAddUpd = async (isOpen: boolean, id: string = '') => {\r\n\r\n        if(!isOpen)\r\n        {\r\n            setCategory(null);\r\n            setTitle('');\r\n            setDescription('');\r\n            setImage('');\r\n            setFilename('');\r\n            setSelectedFile(undefined);\r\n            setPrice('');\r\n            setIsOneItem(false);\r\n            setDefaultItems([]);\r\n            setAdditionalItems([]);\r\n            setShowModalAdd(isOpen);\r\n            setCategoryError('');\r\n            setTitleError('');\r\n            setPriceError('');\r\n        }\r\n        else\r\n        {\r\n            if(id !== '')\r\n            {\r\n                setBtnTxtAdd('Atualizar');\r\n                await api.getById(PRODUCT_URL, id)\r\n                .then(res => {\r\n                    const cpn = res as Product;\r\n\r\n                    setProductUpd(cpn);\r\n                    setCategory(optionCategory?.find(x => x.value === cpn.categoryProducts?.find(x => x !== null)?.categoryId));\r\n                    setTitle(cpn.title);\r\n                    setDescription(cpn.description);\r\n                    setPrice(Utils.currencyValue(cpn.price).toString());\r\n                    setIsOneItem(cpn.isOneItem);\r\n\r\n                    if(cpn.image)\r\n                    {\r\n                        setFilename('Imagem já selecionada!');\r\n                        setImage(cpn.image);\r\n                    }\r\n\r\n                    if(cpn.productItems !== null)\r\n                    {\r\n                        handlePopulateItems(cpn.productItems);\r\n                    }\r\n\r\n                    setIdUpdate(id !== '' ? id : idUpdate);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    Utils.alertLocalStorage('Ocorreu um erro ao pegar os dados do produto', false);\r\n                    setShowModalAdd(false);\r\n                });\r\n            }\r\n            else\r\n            {\r\n                setBtnTxtAdd('Adicionar');\r\n                setIdUpdate('');\r\n                setTitle('');\r\n            }\r\n            setShowModalAdd(isOpen);\r\n        }\r\n    }\r\n\r\n    const handleModalRemove = (isRemove: boolean, id: string = '') => {\r\n\r\n        setIdRemove(id !== '' ? id : idRemove);\r\n        setShowModalRemove(isRemove);\r\n    }\r\n\r\n    const handleKeypress = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n        if (e.key === 'Enter') {\r\n          handleAdd();\r\n        }\r\n    }\r\n\r\n    const handlePopulateItems = (pItems: ProductItem[]) => {\r\n\r\n        var defItems = new Array<Item>();\r\n        var addItems = new Array<Item>();\r\n        \r\n        pItems.forEach(pi => {\r\n            if(pi.isDefault)\r\n            {\r\n                defItems.push(items.find(x => x.id === pi.itemId)!);\r\n            }\r\n            else \r\n            {\r\n                addItems.push(items.find(x => x.id === pi.itemId)!);\r\n            }\r\n        });\r\n\r\n        setDefaultItems(defItems);\r\n        setAdditionalItems(addItems);\r\n    }\r\n\r\n    const handleCheckedItems = (item: Item, items: Item[]) : boolean => {\r\n\r\n        if(items.includes(item))\r\n        {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const handleChangeItems = (e: React.ChangeEvent<HTMLInputElement>, item: Item, \r\n        items: Item[], setItems: React.Dispatch<React.SetStateAction<Item[]>>) => {\r\n\r\n        var newItems = [...items];\r\n        \r\n        if(e.target.checked)\r\n            newItems.push(item);\r\n        else\r\n            newItems = newItems.filter(x => x.id !== item.id);\r\n        \r\n        setItems(newItems);\r\n    }\r\n\r\n    const handleRemoveImage = () => {\r\n        setFilename('Selecione uma imagem (máx. 5MB)');\r\n        setSelectedFile(undefined);\r\n    }\r\n    \r\n    return (\r\n        <div className={`px-4`}>\r\n\r\n            <Alert />\r\n\r\n            <Modal \r\n                show={showModalAdd} \r\n                onHide={() => handleModalAddUpd(false)}\r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        Adicionar produto\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body onKeyPress={handleKeypress}>\r\n                    <Form.Group className={`mb-2`}>\r\n                        <Form.Label>Categoria</Form.Label>\r\n                        <Select \r\n                            value={category} \r\n                            onChange={(e: ValueType<SelectModel, false>) => handleCategory(e)}\r\n                            options={optionCategory} \r\n                            placeholder='Selecione a categoria'\r\n                            menuPlacement='bottom'\r\n                            menuPosition='fixed'\r\n                        />\r\n                        <Form.Text className=\"text-danger\">\r\n                            {categoryError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className={`mb-3`}>\r\n                        <Form.Label>Imagem</Form.Label>\r\n                        {image ? \r\n                        <div>\r\n                            <img \r\n                                src={image} \r\n                                alt='Imagem do produto' \r\n                                className={`${styles.img_table} mb-2 ms-2`} \r\n                            />\r\n                        </div> : ''}\r\n                        <div>\r\n                            <input \r\n                                type='file' \r\n                                style={{ display: \"none\" }} \r\n                                accept=\".png,.jpg,.jpeg\"\r\n                                onChange={handleFileInput}\r\n                                id='file'\r\n                                ref={fileInput}\r\n                            />\r\n                            <button \r\n                                type='button'\r\n                                className={`button btn_file_curr`}\r\n                                onClick={e => fileInput.current && fileInput.current.click()}\r\n                            >\r\n                                Escolher arquivo\r\n                            </button>\r\n                            <div className={`div_file_curr`}>\r\n                                <span>\r\n                                    {filename}\r\n                                </span>\r\n                                {selectedFile !== undefined ?\r\n                                    <button \r\n                                        className={`button ms-2`} \r\n                                        onClick={() => handleRemoveImage()}\r\n                                    >\r\n                                        <FontAwesomeIcon \r\n                                            icon={faTimes} \r\n                                            title='Remover imagem'\r\n                                        />\r\n                                    </button>\r\n                                : ''}\r\n                            </div>\r\n                        </div>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className={`mb-2`}>\r\n                        <Form.Label>Nome</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Digite o nome\" \r\n                            value={title}\r\n                            onChange={(e) => setTitle(e.target.value)}\r\n                            />\r\n                        <Form.Text className=\"text-danger\">\r\n                            {titleError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className={`mb-2`}>\r\n                        <Form.Label>Descrição</Form.Label>\r\n                        <Form.Control \r\n                            as='textarea'\r\n                            placeholder=\"Digite a descrição\" \r\n                            value={description}\r\n                            onChange={(e) => setDescription(e.target.value)}\r\n                            rows={3}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className={`mb-2`}>\r\n                        <Form.Label>Preço</Form.Label>\r\n                        <NumberFormat \r\n                            className={`form-control`}\r\n                            placeholder=\"Digite o preço\" \r\n                            value={price} \r\n                            onChange={(e) => setPrice(e.target.value)}\r\n                            decimalSeparator=','\r\n                            thousandSeparator='.'\r\n                            inputmode=\"numeric\"\r\n                        />\r\n                        <Form.Text className=\"text-danger\">\r\n                            {priceError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className={`mb-2`} controlId=\"formCheckbox\">\r\n                        <Form.Check \r\n                            type=\"checkbox\" \r\n                            label=\"Selecionar apenas 1 item?\"\r\n                            checked={isOneItem} \r\n                            onChange={() => setIsOneItem(!isOneItem)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <AccordionMenu\r\n                        title='Itens inclusos'\r\n                        body={\r\n                            items.map((item) => (\r\n                                <Form.Group className={`mb-2`} controlId={`${item.id}defs`}>\r\n                                    <Form.Check \r\n                                        type=\"checkbox\" \r\n                                        label={`${item.title}`}\r\n                                        checked={handleCheckedItems(item, defaultItems)}\r\n                                        onChange={(e) => \r\n                                            handleChangeItems(e, item, defaultItems, setDefaultItems)\r\n                                        }\r\n                                    />\r\n                                </Form.Group>\r\n                            ))\r\n                        }\r\n                        className={`mb-2`}\r\n                    />\r\n\r\n                    <AccordionMenu\r\n                        title='Itens adicionais'\r\n                        body={\r\n                            items.map((item) => (\r\n                                <Form.Group className={`mb-2`} controlId={`${item.id}adds`}>\r\n                                    <Form.Check \r\n                                        type=\"checkbox\" \r\n                                        label={`${item.title} (R$ ${item.price})`}\r\n                                        checked={handleCheckedItems(item, additionalItems)}\r\n                                        onChange={(e) => \r\n                                            handleChangeItems(e, item, additionalItems, setAdditionalItems)\r\n                                        }\r\n                                    />\r\n                                </Form.Group>\r\n                            ))\r\n                        }\r\n                        className={`mb-2`}\r\n                    />\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button className={`button`} onClick={() => handleModalAddUpd(false)}>\r\n                        Cancelar\r\n                    </button>\r\n                    <button \r\n                        className={`button`} \r\n                        onClick={handleAdd}\r\n                        disabled={btnDisableAdd}\r\n                    >\r\n                        {btnTxtAdd}\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal \r\n                show={showModalRemove} \r\n                onHide={() => handleModalRemove(false)}\r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        Remover produto\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>Tem certeza que deseja remover?</p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button className={`button`} onClick={() => handleModalRemove(false)}>\r\n                        Cancelar\r\n                    </button>\r\n                    <button \r\n                        className={`button`} \r\n                        onClick={handleRemove}\r\n                        disabled={btnDisableRemove}\r\n                    >\r\n                        {btnTxtRemove}\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <div>\r\n                <h3 className={`title`}>\r\n                    Produtos\r\n                </h3>\r\n            </div>\r\n\r\n            <div className={`${styles.div_btns}`}>\r\n                <button\r\n                    onClick={() => handleModalAddUpd(true)}\r\n                    className={`button ${styles.btn_add} me-md-2 me-0`}\r\n                >\r\n                    Adicionar produto\r\n                </button>\r\n                <InputGroup className={`mt-2 mt-md-0`}>\r\n                    <Form.Control \r\n                        type=\"text\"\r\n                        placeholder=\"Pesquise aqui...\"\r\n                        value={search}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <button className={`button`}>\r\n                        <FontAwesomeIcon icon={faSearch} />\r\n                    </button>\r\n                </InputGroup>\r\n            </div>\r\n\r\n            <div className={`mt-3`}>\r\n                {products?.length > 0 ? \r\n                    <Table className={`${styles.table}`} responsive>\r\n                        <tbody>\r\n                            {products.map((model, key) => (\r\n                                <tr key={key}>\r\n                                    <td>\r\n                                        {model.image !== '' \r\n                                        ?\r\n                                        <img \r\n                                            src={model.image} \r\n                                            alt={`${key} - ${model.title}`}\r\n                                            className={`${styles.img_table}`} \r\n                                        />\r\n                                        :\r\n                                        <img \r\n                                            src={logo} \r\n                                            alt={`${key} - ${model.title}`}\r\n                                            className={`${styles.img_table}`} \r\n                                        />\r\n                                        }\r\n                                    </td>\r\n                                    <td>\r\n                                        {model.title} <br/>\r\n                                        <small className={`${styles.text_secondary}`}>\r\n                                            {model.description}\r\n                                        </small>\r\n                                    </td>\r\n                                    <td>\r\n                                        {`R$ ${Utils.currencyValue(model.price)}`}\r\n                                    </td>\r\n                                    <td align='right'>\r\n                                        <button \r\n                                            className={`button`}\r\n                                            onClick={() => handleModalAddUpd(true, model.id)}\r\n                                        >\r\n                                            <FontAwesomeIcon \r\n                                                icon={faSyncAlt} \r\n                                                className={`${styles.table_icon}`}\r\n                                                title='Atualizar' \r\n                                            />\r\n                                        </button>\r\n                                        <button \r\n                                            className={`button ms-2`} \r\n                                            onClick={() => handleModalRemove(true, model.id)}\r\n                                        >\r\n                                            <FontAwesomeIcon \r\n                                                icon={faTrash} \r\n                                                className={`${styles.table_icon}`}\r\n                                                title='Apagar'\r\n                                            />\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                : <div><p>Nenhum produto adicionado.</p></div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductComponent;","import { Tab, Tabs } from \"react-bootstrap\";\r\nimport Alert from \"../components/Alert\";\r\nimport CategoryComponent from \"../components/screens/CategoryComponent\";\r\nimport ItemComponent from \"../components/screens/ItemComponent\";\r\nimport ProductComponent from \"../components/screens/ProductComponent\";\r\n\r\nconst Products = () => {\r\n\r\n    return (\r\n        <div className={`px-4`}>\r\n            <Alert />\r\n\r\n            <Tabs defaultActiveKey=\"product\" className=\"mb-3\">\r\n                <Tab eventKey=\"product\" title=\"Produtos\" unmountOnExit>\r\n                    <ProductComponent />\r\n                </Tab>\r\n                <Tab eventKey=\"category\" title=\"Categorias\">\r\n                    <CategoryComponent />\r\n                </Tab>\r\n                <Tab eventKey=\"item\" title=\"Itens\">\r\n                    <ItemComponent />\r\n                </Tab>\r\n            </Tabs>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Products;","import { Base } from \"./base/Base\";\r\nimport { Store } from \"./Store\";\r\n\r\nexport class Admin extends Base {\r\n\r\n    name: string = '';\r\n\r\n    username: string = '';\r\n\r\n    birthday: Date | string = new Date();\r\n\r\n    numberPhone: string = '';\r\n\r\n    email: string = '';\r\n\r\n    password: string | null = null;\r\n\r\n    image: string = '';\r\n\r\n    isActive: boolean = false;\r\n    \r\n    isRoot: boolean = false;\r\n\r\n    storeId?: string | null = null;\r\n\r\n    store?: Store | null = null;\r\n}\r\n\r\nexport interface AdminAuthenticate extends Admin {\r\n\r\n    token: string;\r\n\r\n    tokenExpires: Date | string;\r\n}","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport { Form, InputGroup, Modal, Spinner, Table } from \"react-bootstrap\";\r\nimport { faSearch, faSyncAlt, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Select, { ValueType } from \"react-select\";\r\nimport Alert from \"../Alert\";\r\nimport { Utils } from \"../../configs/Utils\";\r\nimport { Validations } from \"../../configs/Validations\";\r\nimport { Admin } from \"../../models/Admin\";\r\nimport { Store } from \"../../models/Store\";\r\nimport { SelectModel } from \"../../models/utils/SelectModel\";\r\nimport Api, { STORE_URL } from \"../../services/api\";\r\nimport styles from '../../styles/default.module.css';\r\n\r\nconst AdminComponent = () => {\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n    const [admins, setAdmins] = useState([] as Admin[]);\r\n    const [productUpd, setAdminUpd] = useState({} as Admin);\r\n    const [initAdmins, setInitAdmins] = useState([] as Admin[]);\r\n    \r\n    const [name, setName] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n    const [birthday, setBirthday] = useState(\"\");\r\n    const [numberPhone, setNumberPhone] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [isActive, setIsActive] = useState(true);\r\n    const [store, setStore] = useState<SelectModel | null>();\r\n    const [optionStore, setOptionStore] = useState<SelectModel[]>();\r\n\r\n    const [nameError, setNameError] = useState(\"\");\r\n    const [birthdayError, setBirthdayError] = useState(\"\");\r\n    const [numberPhoneError, setNumberPhoneError] = useState(\"\");\r\n    const [emailError, setEmailError] = useState(\"\");\r\n\r\n    const [idUpdate, setIdUpdate] = useState(\"\");\r\n    const [idRemove, setIdRemove] = useState(\"\");\r\n    \r\n    const [btnDisableAdd, setBtnDisableAdd] = useState(false);\r\n    const [btnTxtAdd, setBtnTxtAdd] = useState<string | object>(\"Adicionar\");\r\n    const [showModalAdd, setShowModalAdd] = useState(false);\r\n    \r\n    const [btnDisableRemove, setBtnDisableRemove] = useState(false);\r\n    const [btnTxtRemove, setBtnTxtRemove] = useState<string | object>(\"Remover\");\r\n    const [showModalRemove, setShowModalRemove] = useState(false);\r\n\r\n    const api = useMemo(() => new Api(), []);\r\n    \r\n    useEffect(() => {\r\n        \r\n        const getAdmins = async () => {\r\n\r\n            await api.getAdmin().then(res => {\r\n                setAdmins(res);\r\n                setInitAdmins(res);\r\n            });\r\n        }\r\n        getAdmins();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const results = initAdmins?.filter(cp =>\r\n            cp.name.toLowerCase().includes(search.toLowerCase()) ||\r\n            cp.username.toLowerCase().includes(search.toLowerCase()) ||\r\n            cp.email.toLowerCase().includes(search.toLowerCase())\r\n        );\r\n        setAdmins(results);\r\n    }, [initAdmins, search]);\r\n\r\n    useEffect(() => {\r\n        \r\n        const getStores = async () => {\r\n\r\n            await api.get(STORE_URL)\r\n            .then(res => {\r\n\r\n                const stores = res as Store[];\r\n\r\n                var modelSelect = new Array<SelectModel>();\r\n                var noneSel = new SelectModel('', 'Nenhuma loja selecionada');\r\n                modelSelect.push(noneSel);\r\n\r\n                stores!.forEach(g => {   \r\n                    var cSel = new SelectModel(g.id, g.name);\r\n                    modelSelect.push(cSel);\r\n                });\r\n                setOptionStore(modelSelect);\r\n            })\r\n            .catch(err => {\r\n            });\r\n        }\r\n        getStores();\r\n    }, [api]);\r\n\r\n    const handleStore = (event: ValueType<SelectModel, false>) => setStore(event);\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setSearch(event.target.value);\r\n    };\r\n\r\n    const handleAdd = async () => {\r\n\r\n        setBtnDisableAdd(true);\r\n        setBtnTxtAdd(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\r\n\r\n        var nError = Validations.validateRequiredField(name, \"nome\");\r\n        var bError = Validations.validateRequiredField(birthday, \"data de nascimento\");\r\n        var nbError = Validations.validateRequiredField(numberPhone, \"telefone\");\r\n        var eError = Validations.validateRequiredField(email, \"email\");\r\n\r\n        if(nError || bError || nbError || eError)\r\n        {\r\n            setNameError(nError);\r\n            setBirthdayError(bError);\r\n            setNumberPhoneError(nbError);\r\n            setEmailError(eError);\r\n            setBtnDisableAdd(false);\r\n            setBtnTxtAdd(idUpdate !== '' ? 'Atualizar' : 'Adicionar');\r\n        }\r\n        else\r\n        {\r\n            if(idUpdate === '')\r\n            {\r\n                var model = new Admin();\r\n                model.name = name;\r\n                model.username = username;\r\n                model.birthday = birthday;\r\n                model.numberPhone = Utils.removeDiacritics(numberPhone);\r\n                model.email = email;\r\n                model.isActive = isActive;\r\n                model.isRoot = false;\r\n                model.storeId = store?.value;\r\n\r\n                const addAdmin = async () => {\r\n\r\n                    await api.insertAdmin(model)\r\n                    .then(resp => {\r\n                        const cpn = resp.data.data as Admin;\r\n\r\n                        Utils.alertLocalStorage('Admin inserido com sucesso!', true);\r\n                        setBtnDisableAdd(false);\r\n                        setBtnTxtAdd('Adicionar');\r\n                        setAdmins([...admins, cpn]);\r\n                        setInitAdmins([...initAdmins, cpn]);\r\n                        handleModalAddUpd(false);\r\n                    })\r\n                    .catch(err => {\r\n                        Utils.alertLocalStorage(`Ocorreu um erro ao adicionar!`, false);\r\n                        console.log(err);\r\n                        setBtnDisableAdd(false);\r\n                        setBtnTxtAdd('Adicionar');\r\n                    });\r\n                }\r\n                \r\n                await addAdmin();\r\n            }\r\n            else \r\n            {\r\n                productUpd.id = idUpdate;\r\n                productUpd.name = name;\r\n                productUpd.username = username;\r\n                productUpd.birthday = birthday;\r\n                productUpd.numberPhone = Utils.removeDiacritics(numberPhone);\r\n                productUpd.email = email;\r\n                productUpd.isActive = isActive;\r\n                productUpd.isRoot = false;\r\n                productUpd.storeId = store?.value;\r\n                \r\n                const update = async () => {\r\n                    await api.updateAdmin(productUpd)\r\n                    .then(res => {\r\n                        const cpn = res.data.data as Admin;\r\n\r\n                        Utils.alertLocalStorage('Admin atualizado com sucesso!', true);\r\n                        setBtnDisableAdd(false);\r\n                        setBtnTxtAdd('Atualizar');\r\n                        const newCpn = initAdmins;\r\n                        const index = initAdmins.findIndex(x => x.id === cpn.id);\r\n                        newCpn[index] = cpn;\r\n                        setAdmins([...newCpn]);\r\n                        setInitAdmins([...newCpn]);\r\n                        handleModalAddUpd(false);\r\n                    })\r\n                    .catch(err => {\r\n                        Utils.alertLocalStorage(`${err.data.message}`, false);\r\n                        setBtnDisableAdd(false);\r\n                        setBtnTxtAdd('Atualizar');\r\n                    });\r\n                }\r\n                \r\n                await update();\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleRemove = async () => {\r\n\r\n        if(idRemove === '')\r\n        {\r\n            Utils.alertLocalStorage(`Ocorreu um erro ao remover!`, false);\r\n            handleModalRemove(false);\r\n        }\r\n        else\r\n        {   \r\n            await api.deleteAdmin(idRemove)\r\n            .then(_ => {\r\n                Utils.alertLocalStorage('Admin removido com sucesso!', true);\r\n                setBtnDisableRemove(false);\r\n                setBtnTxtRemove('Remover');\r\n\r\n                const newCpn = initAdmins.filter((x) => x.id !== idRemove);\r\n                setAdmins(newCpn);\r\n                setInitAdmins(newCpn);\r\n                handleModalRemove(false);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                Utils.alertLocalStorage(`Ocorreu um erro ao remover!`, false);\r\n                \r\n                setBtnDisableRemove(false);\r\n                setBtnTxtRemove('Remover');\r\n                handleModalRemove(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleModalAddUpd = async (isOpen: boolean, id: string = '') => {\r\n\r\n        if(isOpen && id !== '')\r\n        {\r\n            setBtnTxtAdd('Atualizar');\r\n            await api.getAdminById(id)\r\n            .then(res => {\r\n                const cpn = res as Admin;\r\n\r\n                setAdminUpd(cpn);\r\n                setName(cpn.name);\r\n                setUsername(cpn.username);\r\n                setNumberPhone(Utils.numberPhoneMask(cpn.numberPhone));\r\n                setBirthday(Utils.formatDate(cpn.birthday.toString()));\r\n                setEmail(cpn.email);\r\n                setStore(optionStore?.find(x => x.value === cpn.storeId));\r\n\r\n                setIdUpdate(id !== '' ? id : idUpdate);\r\n                setShowModalAdd(isOpen);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                Utils.alertLocalStorage('Ocorreu um erro ao pegar os dados do admin', false);\r\n                setShowModalAdd(false);\r\n            });\r\n        }\r\n        else\r\n        {\r\n            setBtnTxtAdd(isOpen ? 'Adicionar' : btnTxtAdd);\r\n            setIdUpdate('');\r\n            setName('');\r\n            setUsername('');\r\n            setBirthday('');\r\n            setNumberPhone('');\r\n            setEmail('');\r\n            setNameError('');\r\n            setBirthdayError('');\r\n            setEmailError('');\r\n            setNumberPhoneError('');\r\n            setStore(null);\r\n            setIsActive(true);\r\n\r\n            setShowModalAdd(isOpen);\r\n        }\r\n    }\r\n\r\n    const handleModalRemove = (isRemove: boolean, id: string = '') => {\r\n\r\n        setIdRemove(id !== '' ? id : idRemove);\r\n        setShowModalRemove(isRemove);\r\n    }\r\n\r\n    const handleKeypress = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n        if (e.key === 'Enter') {\r\n          handleAdd();\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n\r\n            <Alert />\r\n\r\n            <Modal \r\n                show={showModalAdd} \r\n                onHide={() => handleModalAddUpd(false)}\r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        Adicionar/Atualizar admin\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body onKeyPress={handleKeypress}>\r\n\r\n                    <Form.Group className={`mb-2`}>\r\n                        <Form.Label>Nome</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Digite o nome\" \r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        <Form.Text className=\"text-danger\">\r\n                            {nameError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className={`mb-2`}>\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Digite o username\" \r\n                            value={username}\r\n                            onChange={(e) => setUsername(e.target.value.toLowerCase())}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className={`mb-2`}>\r\n                        <Form.Label>Data de nascimento</Form.Label>\r\n                        <Form.Control \r\n                            type=\"date\" \r\n                            placeholder=\"Digite a data de nascimento\" \r\n                            value={birthday}\r\n                            onChange={(e) => setBirthday(e.target.value)}\r\n                        />\r\n                        <Form.Text className=\"text-danger\">\r\n                            {birthdayError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className={`mb-2`}>\r\n                        <Form.Label>Telefone</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Digite o telefone\" \r\n                            value={numberPhone}\r\n                            onChange={(e) => setNumberPhone(Utils.numberPhoneMask(e.target.value))}\r\n                            minLength={14}\r\n                            maxLength={14}\r\n                        />\r\n                        <Form.Text className=\"text-danger\">\r\n                            {numberPhoneError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className={`mb-2`}>\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control \r\n                            type=\"email\" \r\n                            placeholder=\"Digite o email\" \r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                        <Form.Text className=\"text-danger\">\r\n                            {emailError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className={`mb-2`}>\r\n                        <Form.Label>Loja administrada</Form.Label>\r\n                        <Select \r\n                            value={store} \r\n                            onChange={(e: ValueType<SelectModel, false>) => handleStore(e)}\r\n                            options={optionStore} \r\n                            placeholder='Selecione a loja (se necessário)'\r\n                            menuPlacement='bottom'\r\n                            menuPosition='fixed'\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formIsActive\">\r\n                        <Form.Check \r\n                            type=\"checkbox\" \r\n                            label=\"Ativo\"\r\n                            checked={isActive} \r\n                            onChange={() => setIsActive(!isActive)} \r\n                        />\r\n                    </Form.Group>\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button className={`button`} onClick={() => handleModalAddUpd(false)}>\r\n                        Cancelar\r\n                    </button>\r\n                    <button \r\n                        className={`button`} \r\n                        onClick={handleAdd}\r\n                        disabled={btnDisableAdd}\r\n                    >\r\n                        {btnTxtAdd}\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal \r\n                show={showModalRemove} \r\n                onHide={() => handleModalRemove(false)}\r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        Remover admin\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>Tem certeza que deseja remover?</p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button className={`button`} onClick={() => handleModalRemove(false)}>\r\n                        Cancelar\r\n                    </button>\r\n                    <button \r\n                        className={`button`} \r\n                        onClick={handleRemove}\r\n                        disabled={btnDisableRemove}\r\n                    >\r\n                        {btnTxtRemove}\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <div>\r\n                <h3 className={`title`}>\r\n                    Administradores\r\n                </h3>\r\n            </div>\r\n\r\n            <div className={`${styles.div_btns}`}>\r\n                <button\r\n                    onClick={() => handleModalAddUpd(true)}\r\n                    className={`button ${styles.btn_add} me-md-2 me-0`}\r\n                >\r\n                    Adicionar admin\r\n                </button>\r\n                <InputGroup className={`mt-2 mt-md-0`}>\r\n                    <Form.Control \r\n                        type=\"text\"\r\n                        placeholder=\"Pesquise aqui...\"\r\n                        value={search}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <button className={`button`}>\r\n                        <FontAwesomeIcon icon={faSearch} />\r\n                    </button>\r\n                </InputGroup>\r\n            </div>\r\n\r\n            <div className={`mt-3`}>\r\n                {admins?.length > 0 ? \r\n                    <Table className={`${styles.table}`} responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Nome</th>\r\n                                <th>Nascimento</th>\r\n                                <th>Telefone</th>\r\n                                <th>Email</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {admins.map((model, key) => (\r\n                                <tr key={key}>\r\n                                    <td>\r\n                                        {model.name}\r\n                                    </td>\r\n                                    <td>\r\n                                        {Utils.dateMask(model.birthday.toString())}\r\n                                    </td>\r\n                                    <td>\r\n                                        {Utils.numberPhoneMask(model.numberPhone)}\r\n                                    </td>\r\n                                    <td>\r\n                                        {model.email}\r\n                                    </td>\r\n                                    <td align='right'>\r\n                                        <button \r\n                                            className={`button`}\r\n                                            onClick={() => handleModalAddUpd(true, model.id)}\r\n                                        >\r\n                                            <FontAwesomeIcon \r\n                                                icon={faSyncAlt} \r\n                                                className={`${styles.table_icon}`}\r\n                                                name='Atualizar' \r\n                                            />\r\n                                        </button>\r\n                                        <button \r\n                                            className={`button ms-2`} \r\n                                            onClick={() => handleModalRemove(true, model.id)}\r\n                                        >\r\n                                            <FontAwesomeIcon \r\n                                                icon={faTrash} \r\n                                                className={`${styles.table_icon}`}\r\n                                                name='Apagar'\r\n                                            />\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                : <div><p>Nenhum administrador adicionado.</p></div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminComponent;","import React, { useEffect, useState } from 'react';\r\nimport { Tab, Row, Col, Nav, Spinner, Modal, Form } from \"react-bootstrap\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Alert from '../components/Alert';\r\nimport Api from '../services/api';\r\nimport { Session } from '../services/session';\r\nimport { Utils } from '../configs/Utils';\r\nimport { Validations } from '../configs/Validations';\r\nimport { Admin, AdminAuthenticate } from '../models/Admin';\r\nimport styles from '../styles/profile.module.css';\r\nimport AdminComponent from '../components/screens/AdminComponent';\r\n\r\nconst Profile = () => {\r\n\r\n    //#region update profile\r\n\r\n    const [name, setName] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [birthday, setBirthday] = useState('');\r\n    const [numberPhone, setNumberPhone] = useState('');\r\n    const [email, setEmail] = useState('');\r\n\r\n    const [nameError, setNameError] = useState('');\r\n    const [birthdayError, setBirthdayError] = useState('');\r\n    const [numberPhoneError, setNumberPhoneError] = useState('');\r\n    const [emailError, setEmailError] = useState('');\r\n\r\n    const [btnDisable, setBtnDisable] = useState(false);\r\n    const [btnTxt, setBtnTxt] = useState<string | object>();\r\n\r\n    //#endregion\r\n\r\n    //#region change password\r\n\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [passwordError, setPasswordError] = useState('');\r\n    \r\n    const [inputPassword, setInputPassword] = useState('password');\r\n    const [btnTxtPassword, setBtnTxtPassword] = useState<string | object>();\r\n    const [btnDisablePassword, setBtnDisablePassword] = useState(false);\r\n    const [showModalPassword, setShowModalPassword] = useState(false);\r\n    const [showModalLogout, setShowModalLogout] = useState(false);\r\n\r\n    //#endregion\r\n\r\n    const [admin, setAdmin] = useState({} as Admin);\r\n    const history = useHistory();\r\n    const api = new Api();\r\n\r\n    useEffect(() => {\r\n\r\n        AdminLogged();\r\n\r\n        setBtnTxt('Atualizar perfil');\r\n        setBtnTxtPassword('Atualizar senha');\r\n    }, []);\r\n\r\n    const AdminLogged = () => {\r\n\r\n        if(Session.isAuthenticated())\r\n        {\r\n            var sessionAdmin = Session.getAdmin() as AdminAuthenticate;\r\n            var token = Session.getToken() as string;\r\n\r\n            if(token === sessionAdmin.token)\r\n            {\r\n                if(sessionAdmin.tokenExpires < new Date())\r\n                {\r\n                    Utils.alertLocalStorage('Faça login novamente!', false);\r\n                    Session.logout();\r\n                    history.push('/login');\r\n                }\r\n\r\n                const getAdmin = async (id: string) => {\r\n\r\n                    await api.getAdminById(id)\r\n                    .then(res => {\r\n                        var admin = res as Admin;\r\n                        setName(admin.name);\r\n                        setEmail(admin.email);\r\n                        setBirthday(Utils.formatDate(admin.birthday.toString()));\r\n                        setUsername(admin.username);\r\n                        setNumberPhone(Utils.numberPhoneMask(admin.numberPhone));\r\n\r\n                        setAdmin(admin);\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                    });\r\n                }\r\n                getAdmin(sessionAdmin.id);\r\n            }\r\n        }\r\n        else {\r\n            Utils.alertLocalStorage('Usuário não logado', false);\r\n            history.push('/login');\r\n        }\r\n    }\r\n\r\n    const handleLogout = () => {\r\n\r\n        Utils.alertLocalStorage('Logout concluído com sucesso!', true);\r\n        Session.logout();\r\n        history.push('/login');\r\n    }\r\n\r\n    const handleUpdatePassword = () => {\r\n\r\n        setBtnDisablePassword(true);\r\n        setBtnTxtPassword(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\r\n\r\n        var pError = Validations.validatePassword(password);\r\n\r\n        if(pError)\r\n        {\r\n            setPasswordError(pError);\r\n            setBtnDisablePassword(false);\r\n            setBtnTxtPassword('Atualizar senha');\r\n        }\r\n        else\r\n        {\r\n            const changePassword = async () => {\r\n    \r\n                await api.resetPasswordAdmin(admin.id, password)\r\n                    .then(_ => {\r\n                        Utils.alertLocalStorage('Senha atualizada com sucesso!', true);\r\n                        setBtnDisablePassword(false);\r\n                        setBtnTxtPassword('Atualizar senha');\r\n                        handleCloseModal();\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                        Utils.alertLocalStorage(`Ocorreu um erro ao atualizar a senha! Tente novamente!`, false);\r\n                        setBtnDisablePassword(false);\r\n                        setBtnTxtPassword('Atualizar senha');\r\n                    });\r\n            }\r\n            changePassword();\r\n        }\r\n    }\r\n\r\n    const handleUpdateProfile = (event: React.FormEvent<HTMLFormElement>) => {\r\n        \r\n        event?.preventDefault();\r\n        setBtnDisable(true);\r\n        setBtnTxt(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\r\n\r\n        var nameError = Validations.validateRequiredField(name, 'nome');\r\n        var birthdayError = Validations.validateRequiredField(birthday, 'data de nascimento');\r\n        var numberPhoneError = Validations.validateRequiredField(numberPhone, 'número de telefone');\r\n        var emailError = Validations.validateRequiredField(email, 'e-mail');\r\n\r\n        if(nameError || birthdayError || numberPhoneError || emailError)\r\n        {\r\n            setNameError(nameError);\r\n            setBirthdayError(birthdayError);\r\n            setNumberPhoneError(numberPhoneError);\r\n            setEmailError(emailError);\r\n\r\n            setBtnDisable(false);\r\n            setBtnTxt('Atualizar perfil');\r\n        }\r\n        else \r\n        {\r\n            const api = new Api();\r\n            \r\n            const update = async () => {\r\n                \r\n                var newAdmin: Admin = {\r\n                    id: admin.id,\r\n                    registerDate: admin.registerDate,\r\n                    name: name,\r\n                    username: username,\r\n                    email: email,\r\n                    birthday: birthday,\r\n                    numberPhone: numberPhone,\r\n                    isActive: admin.isActive,\r\n                    isRoot: admin.isRoot,\r\n                    image: admin.image,\r\n                    password: null, \r\n                };\r\n                \r\n                await api.updateAdmin(newAdmin)\r\n                .then(_ => {\r\n                    Utils.alertLocalStorage('Usuário atualizado com sucesso!', true);\r\n\r\n                    setBtnDisable(false);\r\n                    setBtnTxt('Atualizar perfil');\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                    Utils.alertLocalStorage(`Ocorreu um erro ao atualizar!`, false);\r\n\r\n                    setBtnDisable(false);\r\n                    setBtnTxt('Atualizar perfil');\r\n                });\r\n            }\r\n            update();\r\n        }\r\n    }\r\n\r\n    const handleChangeNumberPhone = (e: any) => setNumberPhone(Utils.numberPhoneMask(e.target.value));\r\n    const changeInputPassword = () => setInputPassword(inputPassword === 'password' ? 'text' : 'password');\r\n    const handleCloseModal = () => setShowModalPassword(false);\r\n    const handleOpenModal = () => setShowModalPassword(true);\r\n    const handleCloseModalLogout = () => setShowModalLogout(false);\r\n    const handleOpenModalLogout = () => setShowModalLogout(true);\r\n\r\n    return (\r\n        <div>\r\n            <Alert />\r\n\r\n            <Modal \r\n                show={showModalLogout} \r\n                onHide={handleCloseModalLogout}\r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>Sair</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>\r\n                        Deseja realmente sair?\r\n                    </p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button className={`${styles.btn}`} onClick={handleCloseModalLogout}>\r\n                        Cancelar\r\n                    </button>\r\n                    <button \r\n                        className={`${styles.btn_primary}`} \r\n                        onClick={handleLogout}\r\n                    >\r\n                        Fazer logout\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            \r\n            <Modal \r\n                show={showModalPassword} \r\n                onHide={handleCloseModal}\r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>Atualizar senha</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form.Group controlId=\"formPassword\" className={`d-flex flex-column align-items-start`}>\r\n                        <Form.Label>Senha</Form.Label>\r\n                        <Form.Control \r\n                            type={inputPassword} \r\n                            placeholder=\"Digite sua nova senha\" \r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                        <Form.Text className=\"text-danger\">\r\n                            {passwordError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formCheckbox\" className={`d-flex align-items-start`}>\r\n                        <Form.Check type=\"checkbox\" label=\"Mostrar senha\" onClick={changeInputPassword} />\r\n                    </Form.Group>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button className={`${styles.btn}`} onClick={handleCloseModal}>\r\n                        Fechar\r\n                    </button>\r\n                    <button \r\n                        className={`${styles.btn_primary}`} \r\n                        onClick={handleUpdatePassword}\r\n                        disabled={btnDisablePassword}\r\n                    >\r\n                        {btnTxtPassword}\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <div className={`p-4`}>\r\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"profile\">\r\n                    <Row>\r\n                        <Col sm={3}>\r\n                            <Nav variant=\"pills\" className=\"flex-column\">\r\n                                <Nav.Item>\r\n                                    <Nav.Link className={`nav_link`} eventKey=\"profile\">Meu perfil</Nav.Link>\r\n                                </Nav.Item>\r\n                                {admin.isRoot ? \r\n                                <Nav.Item>\r\n                                    <Nav.Link className={`nav_link`} eventKey=\"admins\">Admins</Nav.Link>\r\n                                </Nav.Item> : ''}\r\n                                <Nav.Item>\r\n                                    <Nav.Link className={`nav_link`} onClick={handleOpenModalLogout}>Sair</Nav.Link>\r\n                                </Nav.Item>\r\n                            </Nav>\r\n                        </Col>\r\n                        <Col sm={9}>\r\n                            <Tab.Content>\r\n                                <Tab.Pane eventKey=\"admins\">\r\n                                    <AdminComponent />\r\n                                </Tab.Pane>\r\n                                <Tab.Pane eventKey=\"profile\">\r\n                                    <h3 className={`${styles.h_title} mb-3`}>Perfil</h3>\r\n\r\n                                    <Form onSubmit={handleUpdateProfile}>\r\n\r\n                                        <Form.Group controlId=\"formName\" className={`d-flex flex-column align-items-start`}>\r\n                                            <Form.Label>Nome</Form.Label>\r\n                                            <Form.Control \r\n                                                type=\"text\" \r\n                                                placeholder=\"Digite seu nome\" \r\n                                                value={name}\r\n                                                onChange={(e) => setName(e.target.value)}\r\n                                            />\r\n                                            <Form.Text className=\"text-danger\">\r\n                                                {nameError}\r\n                                            </Form.Text>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group controlId=\"formusername\" className={`d-flex flex-column align-items-start`}>\r\n                                            <Form.Label>username</Form.Label>\r\n                                            <Form.Control \r\n                                                type=\"text\" \r\n                                                placeholder=\"Digite seu username\" \r\n                                                value={username}\r\n                                                onChange={(e) => setUsername(Utils.onlyLetterMask(e.target.value))} \r\n                                            />\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group controlId=\"formNumberPhone\" className={`d-flex flex-column align-items-start`}>\r\n                                            <Form.Label>Telefone</Form.Label>\r\n                                            <Form.Control \r\n                                                type=\"text\" \r\n                                                placeholder=\"Digite seu número de telefone\" \r\n                                                value={numberPhone}\r\n                                                onChange={handleChangeNumberPhone}\r\n                                                maxLength={15}\r\n                                            />\r\n                                            <Form.Text className=\"text-danger\">\r\n                                                {numberPhoneError}\r\n                                            </Form.Text>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group controlId=\"formBirthday\" className={`d-flex flex-column align-items-start`}>\r\n                                            <Form.Label>Data de nascimento</Form.Label>\r\n                                            <Form.Control \r\n                                                type=\"date\" \r\n                                                placeholder=\"Digite seu aniversário\" \r\n                                                value={birthday}\r\n                                                onChange={(e) => setBirthday(e.target.value)}\r\n                                            />\r\n                                            <Form.Text className=\"text-danger\">\r\n                                                {birthdayError}\r\n                                            </Form.Text>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group controlId=\"formEmail\" className={`d-flex flex-column align-items-start`}>\r\n                                            <Form.Label>E-mail</Form.Label>\r\n                                            <Form.Control \r\n                                                type=\"email\" \r\n                                                placeholder=\"Digite seu e-mail ou username\" \r\n                                                value={email}\r\n                                                onChange={(e) => setEmail(e.target.value)}\r\n                                            />\r\n                                            <Form.Text className=\"text-danger\">\r\n                                                {emailError}\r\n                                            </Form.Text>\r\n                                        </Form.Group>\r\n                                        \r\n                                        <div className={`mt-3`}>\r\n                                            <button \r\n                                                type='submit' \r\n                                                className={`${styles.btn_primary}`}\r\n                                                disabled={btnDisable}\r\n                                            >\r\n                                                {btnTxt}\r\n                                            </button>\r\n\r\n                                            <button \r\n                                                type=\"button\" \r\n                                                className={`${styles.btn} mt-md-0 mt-2 ms-md-2 ms-0`} \r\n                                                onClick={handleOpenModal}\r\n                                            >\r\n                                                Alterar senha\r\n                                            </button>\r\n                                        </div>\r\n                                    </Form>\r\n                                </Tab.Pane>\r\n                            </Tab.Content>\r\n                        </Col>\r\n                    </Row>\r\n                </Tab.Container>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import { v4 } from \"uuid\";\nimport { Base } from \"./base/Base\";\nimport { Store } from \"./Store\";\n\nexport class AddressStore extends Base {\n\n    storeId: string = v4();\n\n    store: Store | null = null;\n\n    cep: string = '';\n    \n    addressText: string = '';\n    \n    complement: string = '';\n    \n    neighborhood: string = '';\n    \n    city: string = '';\n\n    state: string = '';\n\n    country: string = '';\n}\n","import { useEffect, useState } from \"react\";\r\nimport { Form, InputGroup, Modal, Spinner, Table } from \"react-bootstrap\";\r\nimport InputMask from \"react-input-mask\";\r\nimport Select, { ValueType } from 'react-select';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch, faSyncAlt, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Utils } from \"../../configs/Utils\";\r\nimport { Validations } from \"../../configs/Validations\";\r\nimport { AddressStore } from \"../../models/AddressStore\";\r\nimport { Store } from \"../../models/Store\";\r\nimport { SelectModel } from \"../../models/utils/SelectModel\";\r\nimport Api, { ADDRESS_STORE_URL, STORE_URL } from \"../../services/api\";\r\n\r\nimport styles from '../../styles/store.module.css';\r\nimport { ViaCepModel } from \"../../models/utils/ViaCepModel\";\r\nimport Alert from \"../Alert\";\r\n\r\nconst AddressStoreComponent = () => {\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n    const [addressStores, setAddressStores] = useState([] as AddressStore[]);\r\n    const [addressStoreUpd, setAddressStoreUpd] = useState({} as AddressStore);\r\n    const [initAddressStores, setInitAddressStores] = useState([] as AddressStore[]);\r\n    \r\n    const [cep, setCep] = useState(\"\");\r\n    const [addressText, setAddressText] = useState(\"\");\r\n    const [complement, setComplement] = useState(\"\");\r\n    const [neighborhood, setNeighborhood] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n    const [state, setState] = useState(\"\");\r\n\r\n    const [cepError, setCepError] = useState(\"\");\r\n    const [addressTextError, setAddressTextError] = useState(\"\");\r\n    const [neighborhoodError, setNeighborhoodError] = useState(\"\");\r\n    const [cityError, setCityError] = useState(\"\");\r\n    const [stateError, setStateError] = useState(\"\");\r\n\r\n    const [inputDisable, setInputDisable] = useState(false);\r\n    \r\n    const [store, setStore] = useState<SelectModel | null>();\r\n    const [optionStore, setOptionStore] = useState<SelectModel[]>();\r\n    const [storeError, setStoreError] = useState(\"\");\r\n\r\n    const [idUpdate, setIdUpdate] = useState(\"\");\r\n    const [idRemove, setIdRemove] = useState(\"\");\r\n    \r\n    const [btnDisableAdd, setBtnDisableAdd] = useState(false);\r\n    const [btnTxtAdd, setBtnTxtAdd] = useState<string | object>(\"Adicionar\");\r\n    const [showModalAdd, setShowModalAdd] = useState(false);\r\n    \r\n    const [btnDisableRemove, setBtnDisableRemove] = useState(false);\r\n    const [btnTxtRemove, setBtnTxtRemove] = useState<string | object>(\"Remover\");\r\n    const [showModalRemove, setShowModalRemove] = useState(false);\r\n\r\n    const api = new Api();\r\n\r\n    useEffect(() => {\r\n        \r\n        const getAddressStores = async () => {\r\n\r\n            await api.get(ADDRESS_STORE_URL).then(res => {\r\n                setAddressStores(res);\r\n                setInitAddressStores(res);\r\n            });\r\n        }\r\n        getAddressStores();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const results = initAddressStores?.filter(cp =>\r\n            cp.cep.toLowerCase().includes(search.toLowerCase())\r\n        );\r\n        setAddressStores(results);\r\n    }, [initAddressStores, search]);\r\n\r\n    useEffect(() => {\r\n        \r\n        const getStores = async () => {\r\n\r\n            await api.get(STORE_URL)\r\n            .then(res => {\r\n\r\n                const stores = res as Store[];\r\n\r\n                var modelSelect = new Array<SelectModel>();\r\n                stores!.forEach(g => {   \r\n                    var cSel = new SelectModel(g.id, g.name);\r\n                    modelSelect.push(cSel);\r\n                });\r\n                setOptionStore(modelSelect);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n        }\r\n        getStores();\r\n    }, [api]);\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setSearch(event.target.value);\r\n    };\r\n\r\n    const handleAdd = async () => {\r\n\r\n        setBtnDisableAdd(true);\r\n        setBtnTxtAdd(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\r\n\r\n        var cError = Validations.validateRequiredField(cep, \"cep\");\r\n        var sError = Validations.validateRequiredSelect(store, \"loja\");\r\n        var aError = Validations.validateRequiredField(addressText, \"rua\");\r\n        var nError = Validations.validateRequiredField(neighborhood, \"bairro\");\r\n        var ciError = Validations.validateRequiredField(city, \"cidade\");\r\n        var staError = Validations.validateRequiredField(state, \"estado\");\r\n\r\n        if(cError || sError || aError || nError || ciError || staError)\r\n        {\r\n            setCepError(cError);\r\n            setStoreError(sError);\r\n            setAddressTextError(aError);\r\n            setNeighborhoodError(nError);\r\n            setCityError(cityError);\r\n            setStateError(staError);\r\n            setBtnDisableAdd(false);\r\n            setBtnTxtAdd(idUpdate !== '' ? 'Atualizar' : 'Adicionar');\r\n        }\r\n        else\r\n        {\r\n            if(idUpdate === '')\r\n            {\r\n                var model = new AddressStore();\r\n                model.storeId = store?.value!;\r\n                model.cep = cep;\r\n                model.addressText = addressText;\r\n                model.complement = complement;\r\n                model.neighborhood = neighborhood;\r\n                model.city = city;\r\n                model.state = state;\r\n                model.country = 'BR';\r\n                \r\n                await api.insert(ADDRESS_STORE_URL, model)\r\n                .then(res => {\r\n                    const cpn = res.data.data as AddressStore;\r\n                    setAddressStores([...addressStores, cpn]);\r\n                    setInitAddressStores([...initAddressStores, cpn]);\r\n\r\n                    Utils.alertLocalStorage('Endereço inserido com sucesso!', true);\r\n                    setBtnDisableAdd(false);\r\n                    setBtnTxtAdd('Adicionar');\r\n                    handleModalAddUpd(false);\r\n                })\r\n                .catch(_ => {\r\n                    Utils.alertLocalStorage(`Ocorreu um erro ao adicionar!`, false);\r\n\r\n                    setBtnDisableAdd(false);\r\n                    setBtnTxtAdd('Adicionar');\r\n                });\r\n            }\r\n            else \r\n            {\r\n                addressStoreUpd.storeId = store?.value!;\r\n                addressStoreUpd.cep = cep;\r\n                addressStoreUpd.addressText = addressText;\r\n                addressStoreUpd.complement = complement;\r\n                addressStoreUpd.neighborhood = neighborhood;\r\n                addressStoreUpd.city = city;\r\n                addressStoreUpd.state = state;\r\n                addressStoreUpd.country = 'BR';\r\n                \r\n                \r\n                await api.update(ADDRESS_STORE_URL, addressStoreUpd)\r\n                .then(res => {\r\n                    const cpn = res.data.data as AddressStore;\r\n                    Utils.alertLocalStorage('Endereço atualizado com sucesso!', true);\r\n                    setBtnDisableAdd(false);\r\n                    setBtnTxtAdd('Atualizar');\r\n                    const newCpn = initAddressStores.filter((x) => x.id !== cpn.id);\r\n                    setAddressStores([...newCpn, cpn]);\r\n                    setInitAddressStores([...newCpn, cpn]);\r\n                    handleModalAddUpd(false);\r\n                })\r\n                .catch(_ => {\r\n                    Utils.alertLocalStorage(`Ocorreu um erro ao atualizar!`, false);\r\n\r\n                    setBtnDisableAdd(false);\r\n                    setBtnTxtAdd('Atualizar');\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleRemove = async () => {\r\n\r\n        if(idRemove === '')\r\n        {\r\n            Utils.alertLocalStorage(`Ocorreu um erro ao remover!`, false);\r\n            handleModalRemove(false);\r\n        }\r\n        else\r\n        {   \r\n            await api.delete(ADDRESS_STORE_URL, idRemove)\r\n            .then(_ => {\r\n                Utils.alertLocalStorage('Endereço removido com sucesso!', true);\r\n                setBtnDisableRemove(false);\r\n                setBtnTxtRemove('Remover');\r\n\r\n                const newCpn = initAddressStores.filter((x) => x.id !== idRemove);\r\n                setAddressStores(newCpn);\r\n                setInitAddressStores(newCpn);\r\n                handleModalRemove(false);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                Utils.alertLocalStorage(`Ocorreu um erro ao remover!`, false);\r\n                \r\n                setBtnDisableRemove(false);\r\n                setBtnTxtRemove('Remover');\r\n                handleModalRemove(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleModalAddUpd = async (isOpen: boolean, id: string = '') => {\r\n\r\n        if(!isOpen)\r\n        {\r\n            setStore(null);\r\n            setCep('');\r\n            setAddressText('');\r\n            setComplement('');\r\n            setNeighborhood('');\r\n            setCity('');\r\n            setState('');\r\n            setInputDisable(false);\r\n            setShowModalAdd(isOpen);\r\n        }\r\n        else\r\n        {\r\n            if(id !== '')\r\n            {\r\n                setBtnTxtAdd('Atualizar');\r\n                await api.getById(ADDRESS_STORE_URL, id)\r\n                .then(res => {\r\n                    const cpn = res as AddressStore;\r\n                    setAddressStoreUpd(cpn);\r\n                    setCep(cpn.cep);\r\n                    setIdUpdate(id !== '' ? id : idUpdate);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    Utils.alertLocalStorage('Ocorreu um erro ao pegar os dados da endereço', false);\r\n                    setShowModalAdd(false);\r\n                });\r\n            }\r\n            else\r\n            {\r\n                setBtnTxtAdd('Adicionar');\r\n                setIdUpdate('');\r\n                setCep('');\r\n            }\r\n            setShowModalAdd(isOpen);\r\n        }\r\n    }\r\n\r\n    const handleModalRemove = (isRemove: boolean, id: string = '') => {\r\n\r\n        setIdRemove(id !== '' ? id : idRemove);\r\n        setShowModalRemove(isRemove);\r\n    }\r\n\r\n    const handleKeypress = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n        if (e.key === 'Enter') {\r\n          handleAdd();\r\n        }\r\n    }\r\n\r\n    const handleStore = (event: ValueType<SelectModel, false>) => setStore(event);\r\n\r\n    const handleCepSearch = async () => {\r\n\r\n        await api.cepSearch(Utils.removeDiacritics(cep))\r\n        .then(res => {\r\n            const viaCep = res as ViaCepModel;\r\n            setAddressText(viaCep.logradouro);\r\n            setComplement(viaCep.complemento);\r\n            setNeighborhood(viaCep.bairro);\r\n            setCity(viaCep.localidade);\r\n            setState(viaCep.uf);\r\n            setInputDisable(true);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Alert />\r\n\r\n            <Modal \r\n                show={showModalAdd} \r\n                onHide={() => handleModalAddUpd(false)}\r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        Adicionar endereço\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body onKeyPress={handleKeypress}>\r\n                    <Form.Group className={`mb-2`}>\r\n                        <Form.Label>Loja</Form.Label>\r\n                        <Select \r\n                            value={store} \r\n                            onChange={(e: ValueType<SelectModel, false>) => handleStore(e)}\r\n                            options={optionStore} \r\n                            placeholder='Selecione a loja'\r\n                            menuPlacement='bottom'\r\n                            menuPosition='fixed'\r\n                        />\r\n                        <Form.Text className=\"text-danger\">\r\n                            {storeError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group className={`mb-2`}>\r\n                        <Form.Label>CEP</Form.Label>\r\n                        <InputMask \r\n                            mask=\"99.999-999\" \r\n                            onChange={(e) => setCep(e.target.value)} \r\n                            value={cep} \r\n                            className={`form-control`}\r\n                            onBlur={handleCepSearch}\r\n                        />\r\n                        <Form.Text className=\"text-danger\">\r\n                            {cepError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className={`mb-2`}>\r\n                        <Form.Label>Rua</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Digite a rua\" \r\n                            value={addressText}\r\n                            onChange={(e) => setAddressText(e.target.value)}\r\n                        />\r\n                        <Form.Text className=\"text-danger\">\r\n                            {addressTextError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className={`mb-2`}>\r\n                        <Form.Label>Complemento</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Digite o complemento\" \r\n                            value={complement}\r\n                            onChange={(e) => setComplement(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className={`mb-2`}>\r\n                        <Form.Label>Bairro</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Digite o bairro\" \r\n                            value={neighborhood}\r\n                            onChange={(e) => setNeighborhood(e.target.value)}\r\n                            disabled={inputDisable}\r\n                        />\r\n                        <Form.Text className=\"text-danger\">\r\n                            {neighborhoodError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className={`mb-2`}>\r\n                        <Form.Label>Cidade</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Digite a cidade\" \r\n                            value={city}\r\n                            onChange={(e) => setCity(e.target.value)}\r\n                            disabled={inputDisable}\r\n                        />\r\n                        <Form.Text className=\"text-danger\">\r\n                            {cityError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className={`mb-2`}>\r\n                        <Form.Label>Estado</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Digite o estado\" \r\n                            value={state}\r\n                            onChange={(e) => setState(e.target.value)}\r\n                            disabled={inputDisable}\r\n                        />\r\n                        <Form.Text className=\"text-danger\">\r\n                            {stateError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button className={`button`} onClick={() => handleModalAddUpd(false)}>\r\n                        Cancelar\r\n                    </button>\r\n                    <button \r\n                        className={`button`} \r\n                        onClick={handleAdd}\r\n                        disabled={btnDisableAdd}\r\n                    >\r\n                        {btnTxtAdd}\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal \r\n                show={showModalRemove} \r\n                onHide={() => handleModalRemove(false)}\r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        Remover endereço\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>Tem certeza que deseja remover?</p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button className={`button`} onClick={() => handleModalRemove(false)}>\r\n                        Cancelar\r\n                    </button>\r\n                    <button \r\n                        className={`button`} \r\n                        onClick={handleRemove}\r\n                        disabled={btnDisableRemove}\r\n                    >\r\n                        {btnTxtRemove}\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <div>\r\n                <h3 className={`title`}>\r\n                    Endereços\r\n                </h3>\r\n            </div>\r\n\r\n            <div className={`${styles.div_btns}`}>\r\n                <button\r\n                    onClick={() => handleModalAddUpd(true)}\r\n                    className={`button ${styles.btn_add} me-md-2 me-0`}\r\n                >\r\n                    Adicionar endereço\r\n                </button>\r\n                <InputGroup className={`mt-2 mt-md-0`}>\r\n                    <Form.Control \r\n                        type=\"text\"\r\n                        placeholder=\"Pesquise aqui...\"\r\n                        value={search}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <button className={`button`}>\r\n                        <FontAwesomeIcon icon={faSearch} />\r\n                    </button>\r\n                </InputGroup>\r\n            </div>\r\n\r\n            <div className={`mt-3`}>\r\n                {addressStores?.length > 0 ? \r\n                    <Table className={`${styles.table}`} responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Loja</th>\r\n                                <th>Endereço</th>\r\n                                <th>CEP</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {addressStores.map((model, key) => (\r\n                                <tr key={key}>\r\n                                    <td>\r\n                                        {model.store?.name}\r\n                                    </td>\r\n                                    <td>\r\n                                        {model.addressText}\r\n                                    </td>\r\n                                    <td>\r\n                                        {model.cep}\r\n                                    </td>\r\n                                    <td align='right'>\r\n                                        <button \r\n                                            className={`button`}\r\n                                            onClick={() => handleModalAddUpd(true, model.id)}\r\n                                        >\r\n                                            <FontAwesomeIcon \r\n                                                icon={faSyncAlt} \r\n                                                className={`${styles.table_icon}`}\r\n                                                title='Atualizar' \r\n                                            />\r\n                                        </button>\r\n                                        <button \r\n                                            className={`button ms-2`} \r\n                                            onClick={() => handleModalRemove(true, model.id)}\r\n                                        >\r\n                                            <FontAwesomeIcon \r\n                                                icon={faTrash} \r\n                                                className={`${styles.table_icon}`}\r\n                                                title='Apagar'\r\n                                            />\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                : <div><p>Nenhum endereço adicionado.</p></div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddressStoreComponent;","import { v4 } from \"uuid\";\nimport { Base } from \"./base/Base\";\nimport { Store } from \"./Store\";\n\nexport class DeliveryTax extends Base {\n\n    storeId: string = v4();\n\n    store: Store | null = null;\n    \n    radius: number = 0;\n    \n    price: number = 0;\n}\n","export default __webpack_public_path__ + \"static/media/pin.fa599afc.svg\";","import { useEffect, useState } from \"react\";\r\nimport { Form, InputGroup, Modal, Spinner, Table } from \"react-bootstrap\";\r\nimport Select, { ValueType } from 'react-select';\r\nimport NumberFormat from \"react-number-format\";\r\nimport { faSearch, faSyncAlt, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Circle, MapContainer, Marker, TileLayer, useMap } from \"react-leaflet\";\r\nimport Leaflet from \"leaflet\";\r\nimport { Utils } from \"../../configs/Utils\";\r\nimport { Validations } from \"../../configs/Validations\";\r\nimport { DeliveryTax } from \"../../models/DeliveryTax\";\r\nimport { Store } from \"../../models/Store\";\r\nimport { SelectModel } from \"../../models/utils/SelectModel\";\r\nimport Api, { DELIVERY_TAX_URL, STORE_URL } from \"../../services/api\";\r\nimport Alert from \"../Alert\";\r\n\r\nimport mapPin from \"../../assets/pin.svg\";\r\nimport styles from '../../styles/store.module.css';\r\n\r\ntype Position = {\r\n    lat: number;\r\n    lng: number;\r\n};\r\n\r\nconst DeliveryTaxComponent = () => {\r\n\r\n    const MAPBOX = \"pk.eyJ1IjoiY2FyaW9jYW1peCIsImEiOiJja3NxaTB1N2QwMGRwMnJqc3UzanFkOXhzIn0.3ktCZfBdJ7oreOmz-bWYwQ\";\r\n    const ACCESS_TOKEN_MAP_BOX = `access_token=${MAPBOX}`;\r\n    const initialPosition = { lat: -22.7109674, lng: -43.3279008 };\r\n    const [position, setPosition] = useState<Position | null>(null);\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n    const [deliveryTaxs, setDeliveryTaxs] = useState([] as DeliveryTax[]);\r\n    const [deliveryTaxUpd, setDeliveryTaxUpd] = useState({} as DeliveryTax);\r\n    const [initDeliveryTaxs, setInitDeliveryTaxs] = useState([] as DeliveryTax[]);\r\n    \r\n    const [radius, setRadius] = useState(0);\r\n    const [price, setPrice] = useState(\"\");\r\n\r\n    const [radiusError, setRadiusError] = useState(\"\");\r\n    const [priceError, setPriceError] = useState(\"\");\r\n    \r\n    const [initStores, setInitStores] = useState([] as Store[]);\r\n    const [store, setStore] = useState<SelectModel | null>();\r\n    const [optionStore, setOptionStore] = useState<SelectModel[]>();\r\n    const [storeError, setStoreError] = useState(\"\");\r\n\r\n    const [idUpdate, setIdUpdate] = useState(\"\");\r\n    const [idRemove, setIdRemove] = useState(\"\");\r\n    \r\n    const [btnDisableAdd, setBtnDisableAdd] = useState(false);\r\n    const [btnTxtAdd, setBtnTxtAdd] = useState<string | object>(\"Adicionar\");\r\n    const [showModalAdd, setShowModalAdd] = useState(false);\r\n    \r\n    const [btnDisableRemove, setBtnDisableRemove] = useState(false);\r\n    const [btnTxtRemove, setBtnTxtRemove] = useState<string | object>(\"Remover\");\r\n    const [showModalRemove, setShowModalRemove] = useState(false);\r\n\r\n    const api = new Api();\r\n\r\n    useEffect(() => {\r\n        \r\n        const getDeliveryTaxs = async () => {\r\n\r\n            await api.get(DELIVERY_TAX_URL).then(res => {\r\n                setDeliveryTaxs(res);\r\n                setInitDeliveryTaxs(res);\r\n            });\r\n        }\r\n        getDeliveryTaxs();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const results = initDeliveryTaxs?.filter(cp =>\r\n            cp.radius.toString().includes(search.toLowerCase())\r\n        );\r\n        setDeliveryTaxs(results);\r\n    }, [initDeliveryTaxs, search]);\r\n\r\n    useEffect(() => {\r\n        \r\n        const getStores = async () => {\r\n\r\n            await api.get(STORE_URL)\r\n            .then(res => {\r\n\r\n                const stores = res as Store[];\r\n\r\n                var modelSelect = new Array<SelectModel>();\r\n                stores!.forEach(g => {   \r\n                    var cSel = new SelectModel(g.id, g.name);\r\n                    modelSelect.push(cSel);\r\n                });\r\n                setInitStores(stores);\r\n                setOptionStore(modelSelect);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n        }\r\n        getStores();\r\n    }, []);\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setSearch(event.target.value);\r\n    };\r\n\r\n    const handleAdd = async () => {\r\n\r\n        setBtnDisableAdd(true);\r\n        setBtnTxtAdd(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\r\n\r\n        var sError = Validations.validateRequiredSelect(store, \"loja\");\r\n        var cError = Validations.validateNumberMoreThanZero(radius, \"raio\");\r\n        var pError = Validations.validateRequiredField(price, \"taxa\");\r\n\r\n        if(cError || sError || pError)\r\n        {\r\n            setRadiusError(cError);\r\n            setStoreError(sError);\r\n            setPriceError(pError);\r\n            setBtnDisableAdd(false);\r\n            setBtnTxtAdd(idUpdate !== '' ? 'Atualizar' : 'Adicionar');\r\n        }\r\n        else\r\n        {\r\n            if(idUpdate === '')\r\n            {\r\n                var model = new DeliveryTax();\r\n                model.storeId = store?.value!;\r\n                model.radius = radius;\r\n                model.price = Number.parseFloat(Utils.convertToCurrencyDb(price));\r\n\r\n                await api.insert(DELIVERY_TAX_URL, model)\r\n                .then(res => {\r\n                    const cpn = res.data.data as DeliveryTax;\r\n                    setDeliveryTaxs([...deliveryTaxs, cpn]);\r\n                    setInitDeliveryTaxs([...initDeliveryTaxs, cpn]);\r\n\r\n                    Utils.alertLocalStorage('Taxa de entrega inserida com sucesso!', true);\r\n                    setBtnDisableAdd(false);\r\n                    setBtnTxtAdd('Adicionar');\r\n                    handleModalAddUpd(false);\r\n                })\r\n                .catch(err => {\r\n                    Utils.alertLocalStorage(`${err.data.message}`, false);\r\n\r\n                    setBtnDisableAdd(false);\r\n                    setBtnTxtAdd('Adicionar');\r\n                });\r\n            }\r\n            else \r\n            {\r\n                deliveryTaxUpd.storeId = store?.value!;\r\n                deliveryTaxUpd.radius = radius;\r\n                deliveryTaxUpd.price = Number.parseFloat(Utils.convertToCurrencyDb(price));\r\n                \r\n                await api.update(DELIVERY_TAX_URL, deliveryTaxUpd)\r\n                .then(res => {\r\n                    const cpn = res.data.data as DeliveryTax;\r\n                    Utils.alertLocalStorage('Taxa de entrega atualizada com sucesso!', true);\r\n                    setBtnDisableAdd(false);\r\n                    setBtnTxtAdd('Atualizar');\r\n                    const newCpn = initDeliveryTaxs.filter((x) => x.id !== cpn.id);\r\n                    setDeliveryTaxs([...newCpn, cpn]);\r\n                    setInitDeliveryTaxs([...newCpn, cpn]);\r\n                    handleModalAddUpd(false);\r\n                })\r\n                .catch(err => {\r\n                    Utils.alertLocalStorage(`${err.data.message}`, false);\r\n\r\n                    setBtnDisableAdd(false);\r\n                    setBtnTxtAdd('Atualizar');\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleRemove = async () => {\r\n\r\n        if(idRemove === '')\r\n        {\r\n            Utils.alertLocalStorage(`Ocorreu um erro ao remover!`, false);\r\n            handleModalRemove(false);\r\n        }\r\n        else\r\n        {   \r\n            await api.delete(DELIVERY_TAX_URL, idRemove)\r\n            .then(_ => {\r\n                Utils.alertLocalStorage('Taxa de entrega removida com sucesso!', true);\r\n                setBtnDisableRemove(false);\r\n                setBtnTxtRemove('Remover');\r\n\r\n                const newCpn = initDeliveryTaxs.filter((x) => x.id !== idRemove);\r\n                setDeliveryTaxs(newCpn);\r\n                setInitDeliveryTaxs(newCpn);\r\n                handleModalRemove(false);\r\n            })\r\n            .catch(err => {\r\n                Utils.alertLocalStorage(`${err.data.message}`, false);\r\n                \r\n                setBtnDisableRemove(false);\r\n                setBtnTxtRemove('Remover');\r\n                handleModalRemove(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleModalAddUpd = async (isOpen: boolean, id: string = '') => {\r\n\r\n        if(!isOpen)\r\n        {\r\n            setStore(null);\r\n            setRadius(0);\r\n            setPrice('');\r\n            setShowModalAdd(isOpen);\r\n        }\r\n        else\r\n        {\r\n            if(id !== '')\r\n            {\r\n                setBtnTxtAdd('Atualizar');\r\n                await api.getById(DELIVERY_TAX_URL, id)\r\n                .then(res => {\r\n                    const cpn = res as DeliveryTax;\r\n                    setDeliveryTaxUpd(cpn);\r\n                    setRadius(cpn.radius);\r\n                    setStore(optionStore?.find(x => x.value === cpn.storeId));\r\n                    setPrice(Utils.currencyValue(cpn.price).toString());\r\n                    setIdUpdate(id !== '' ? id : idUpdate);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    Utils.alertLocalStorage('Ocorreu um erro ao pegar os dados da taxa de entrega', false);\r\n                    setShowModalAdd(false);\r\n                });\r\n            }\r\n            else\r\n            {\r\n                setBtnTxtAdd('Adicionar');\r\n                setIdUpdate('');\r\n                setRadius(0);\r\n                setPrice('');\r\n            }\r\n            setShowModalAdd(isOpen);\r\n        }\r\n    }\r\n\r\n    const handleModalRemove = (isRemove: boolean, id: string = '') => {\r\n\r\n        setIdRemove(id !== '' ? id : idRemove);\r\n        setShowModalRemove(isRemove);\r\n    }\r\n\r\n    const handleKeypress = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n        if (e.key === 'Enter') {\r\n          handleAdd();\r\n        }\r\n    }\r\n\r\n    const handleStore = async (event: ValueType<SelectModel, false>) => {\r\n\r\n        var store = initStores.find(x => x.id === event?.value);\r\n\r\n        if(store && store.addressStore)\r\n        {\r\n            const response = await fetchLocalMapBox(`${store.addressStore?.addressText!},${store.addressStore.neighborhood}`);\r\n            var positionStore: Position = {\r\n                lat: response.features[0].center[1],\r\n                lng: response.features[0].center[0],\r\n            }\r\n            \r\n            setPosition(positionStore ?? initialPosition);\r\n            setStore(event);\r\n        }\r\n    }\r\n\r\n    const mapPinIcon = Leaflet.icon({\r\n        iconUrl: mapPin,\r\n        iconSize: [58, 68],\r\n        iconAnchor: [29, 68],\r\n        popupAnchor: [170, 2],\r\n    });\r\n        \r\n    const fetchLocalMapBox = (local: string) =>\r\n        fetch(\r\n        `https://api.mapbox.com/geocoding/v5/mapbox.places/${local}.json?${ACCESS_TOKEN_MAP_BOX}`\r\n        )\r\n      .then(response => response.json())\r\n      .then(data => data);\r\n    \r\n    const ChangeMapView = ({ coords }: any) => {\r\n        const map = useMap();\r\n        map.setView(coords, map.getZoom());\r\n        return null;\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Alert />\r\n\r\n            <Modal \r\n                show={showModalAdd} \r\n                onHide={() => handleModalAddUpd(false)}\r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        Adicionar taxa de entrega\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body onKeyPress={handleKeypress}>\r\n\r\n                    <Form.Group className={`mb-2`}>\r\n                        <Form.Label>Loja</Form.Label>\r\n                        <Select \r\n                            value={store} \r\n                            onChange={(e: ValueType<SelectModel, false>) => handleStore(e)}\r\n                            options={optionStore} \r\n                            placeholder='Selecione a loja'\r\n                            menuPlacement='bottom'\r\n                            menuPosition='fixed'\r\n                        />\r\n                        <Form.Text className=\"text-danger\">\r\n                            {storeError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className={`mb-2`}>\r\n                        <Form.Label>Raio</Form.Label>\r\n                        <Form.Control \r\n                            type=\"number\" \r\n                            placeholder=\"Digite o raio\" \r\n                            value={radius}\r\n                            onChange={(e) => setRadius(+e.target.value)}\r\n                        />\r\n                        <Form.Text className=\"text-danger\">\r\n                            {radiusError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className={`mb-2`}>\r\n                        <Form.Label>Taxa</Form.Label>\r\n                        <NumberFormat \r\n                            className={`form-control`}\r\n                            value={price} \r\n                            onChange={(e) => setPrice(e.target.value)}\r\n                            decimalSeparator=','\r\n                            thousandSeparator='.'\r\n                            inputmode=\"numeric\"\r\n                        />\r\n                        <Form.Text className=\"text-danger\">\r\n                            {priceError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <div className={`${styles.pageMap}`}>\r\n                        <MapContainer\r\n                            center={position ?? initialPosition}\r\n                            zoom={15}\r\n                            scrollWheelZoom={false}\r\n                            style={{ width: '100%', height: 300 }}\r\n                        >\r\n                            <ChangeMapView coords={position ?? initialPosition} />\r\n                            <TileLayer\r\n                                url={`https://api.mapbox.com/styles/v1/mapbox/streets-v11/tiles/256/{z}/{x}/{y}@2x?access_token=${MAPBOX}`}\r\n                            />\r\n                    \r\n                            {position && (\r\n                                <Marker\r\n                                    icon={mapPinIcon}\r\n                                    position={position}\r\n                                ></Marker>\r\n                            )}\r\n\r\n                            {position && radius && (\r\n                                <Circle \r\n                                    center={position} \r\n                                    pathOptions={{ fillColor: 'blue' }} \r\n                                    radius={radius * 1000} \r\n                                />\r\n                            )}\r\n                        </MapContainer>\r\n\r\n                    </div>\r\n                    \r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button className={`button`} onClick={() => handleModalAddUpd(false)}>\r\n                        Cancelar\r\n                    </button>\r\n                    <button \r\n                        className={`button`} \r\n                        onClick={handleAdd}\r\n                        disabled={btnDisableAdd}\r\n                    >\r\n                        {btnTxtAdd}\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal \r\n                show={showModalRemove} \r\n                onHide={() => handleModalRemove(false)}\r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        Remover taxa de entrega\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>Tem certeza que deseja remover?</p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button className={`button`} onClick={() => handleModalRemove(false)}>\r\n                        Cancelar\r\n                    </button>\r\n                    <button \r\n                        className={`button`} \r\n                        onClick={handleRemove}\r\n                        disabled={btnDisableRemove}\r\n                    >\r\n                        {btnTxtRemove}\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <div>\r\n                <h3 className={`title`}>\r\n                    Taxas de entrega\r\n                </h3>\r\n            </div>\r\n\r\n            <div className={`${styles.div_btns}`}>\r\n                <button\r\n                    onClick={() => handleModalAddUpd(true)}\r\n                    className={`button ${styles.btn_add} me-md-2 me-0`}\r\n                >\r\n                    Adicionar taxa de entrega\r\n                </button>\r\n                <InputGroup className={`mt-2 mt-md-0`}>\r\n                    <Form.Control \r\n                        type=\"text\"\r\n                        placeholder=\"Pesquise aqui...\"\r\n                        value={search}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <button className={`button`}>\r\n                        <FontAwesomeIcon icon={faSearch} />\r\n                    </button>\r\n                </InputGroup>\r\n            </div>\r\n\r\n            <div className={`mt-3`}>\r\n                {deliveryTaxs?.length > 0 ? \r\n                    <Table className={`${styles.table}`} responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Loja</th>\r\n                                <th>Raio</th>\r\n                                <th>Taxa</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {deliveryTaxs.map((model, key) => (\r\n                                <tr key={key}>\r\n                                    <td>\r\n                                        {model.store?.name}\r\n                                    </td>\r\n                                    <td>\r\n                                        {model.radius}\r\n                                    </td>\r\n                                    <td>\r\n                                        {Utils.currencyValue(model.price)}\r\n                                    </td>\r\n                                    <td align='right'>\r\n                                        <button \r\n                                            className={`button`}\r\n                                            onClick={() => handleModalAddUpd(true, model.id)}\r\n                                        >\r\n                                            <FontAwesomeIcon \r\n                                                icon={faSyncAlt} \r\n                                                className={`${styles.table_icon}`}\r\n                                                title='Atualizar' \r\n                                            />\r\n                                        </button>\r\n                                        <button \r\n                                            className={`button ms-2`} \r\n                                            onClick={() => handleModalRemove(true, model.id)}\r\n                                        >\r\n                                            <FontAwesomeIcon \r\n                                                icon={faTrash} \r\n                                                className={`${styles.table_icon}`}\r\n                                                title='Apagar'\r\n                                            />\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                : <div><p>Nenhuma taxa de entrega adicionada.</p></div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeliveryTaxComponent;","import { AddressStore } from \"./AddressStore\";\nimport { Base } from \"./base/Base\";\nimport { StoreDayHour } from \"./StoreDayHour\";\n\nexport class Store extends Base {\n\n    name: string = '';\n\n    storeDayHours: StoreDayHour[] | null = null;\n\n    addressStore: AddressStore | null = null;\n}\n","import { Base } from \"./base/Base\";\nimport { Store } from \"./Store\";\nimport { SelectModel } from \"./utils/SelectModel\";\n\nexport class StoreDayHour extends Base {\n\n    storeId: string = '';\n\n    store: Store | null = null;\n\n    dayOfWeek: number = 0;\n\n    dayOfWeekString: string = '';\n    \n    hourOpen: string = '';\n    \n    hourClose: string = '';\n    \n    selectDayOfWeek: SelectModel | null | undefined = null;\n}\n","import { useEffect, useState } from \"react\";\r\nimport { Form, InputGroup, Modal, Spinner, Table } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch, faSyncAlt, faTimes, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Select, { ValueType } from 'react-select';\r\nimport { Utils } from \"../../configs/Utils\";\r\nimport { Validations } from \"../../configs/Validations\";\r\nimport { Store } from \"../../models/Store\";\r\nimport { StoreDayHour } from \"../../models/StoreDayHour\";\r\nimport Api, { STOREDAYHOUR_URL, STORE_URL } from \"../../services/api\";\r\n\r\nimport styles from '../../styles/store.module.css';\r\nimport AccordionMenu from \"../AccordionMenu\";\r\nimport Alert from \"../Alert\";\r\nimport { SelectModel } from \"../../models/utils/SelectModel\";\r\n\r\nconst StoreComponent = () => {\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n    const [stores, setStores] = useState([] as Store[]);\r\n    const [storeUpd, setStoreUpd] = useState({} as Store);\r\n    const [initStores, setInitStores] = useState([] as Store[]);\r\n    \r\n    const [name, setName] = useState(\"\");\r\n    const [nameError, setNameError] = useState(\"\");\r\n    const [storeDayHours, setStoreDayHours] = useState<StoreDayHour[] | null>([]);\r\n    const [initStoreDayHours, setInitStoreDayHours] = useState<StoreDayHour[] | null>([]);\r\n    const [optionStoreDayHour, setOptionStoreDayHour] = useState<SelectModel[]>();\r\n\r\n    const [idUpdate, setIdUpdate] = useState(\"\");\r\n    const [idRemove, setIdRemove] = useState(\"\");\r\n    \r\n    const [btnDisableAdd, setBtnDisableAdd] = useState(false);\r\n    const [btnTxtAdd, setBtnTxtAdd] = useState<string | object>(\"Adicionar\");\r\n    const [showModalAdd, setShowModalAdd] = useState(false);\r\n    \r\n    const [btnDisableRemove, setBtnDisableRemove] = useState(false);\r\n    const [btnTxtRemove, setBtnTxtRemove] = useState<string | object>(\"Remover\");\r\n    const [showModalRemove, setShowModalRemove] = useState(false);\r\n\r\n    const api = new Api();\r\n\r\n    useEffect(() => {\r\n        \r\n        const getStores = async () => {\r\n\r\n            await api.get(STORE_URL).then(res => {\r\n\r\n                var sts = res as Store[];\r\n                sts.forEach(x => {\r\n                    x.storeDayHours?.forEach(y => {\r\n                        y.dayOfWeekString = Utils.convertDayWeek(y.dayOfWeek);\r\n                    });\r\n                });\r\n\r\n                setStores(sts);\r\n                setInitStores(sts);\r\n            });\r\n        }\r\n        getStores();\r\n\r\n        const getSelectStoreDayHours = () => {\r\n\r\n            var modelSelect = new Array<SelectModel>();\r\n            Utils.daysOfWeek.forEach((g, i) => {   \r\n                var cSel = new SelectModel(i.toString(), g);\r\n                modelSelect.push(cSel);\r\n            });\r\n            setOptionStoreDayHour(modelSelect);\r\n        }\r\n        getSelectStoreDayHours();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const results = initStores?.filter(cp =>\r\n            cp.name.toLowerCase().includes(search.toLowerCase())\r\n        );\r\n        setStores(results);\r\n    }, [initStores, search]);\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setSearch(event.target.value);\r\n    };\r\n\r\n    const handleAdd = async () => {\r\n\r\n        setBtnDisableAdd(true);\r\n        setBtnTxtAdd(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\r\n\r\n        var cError = Validations.validateRequiredField(name, \"nome\");\r\n\r\n        if(cError)\r\n        {\r\n            setNameError(cError);\r\n            setBtnDisableAdd(false);\r\n            setBtnTxtAdd(idUpdate !== '' ? 'Atualizar' : 'Adicionar');\r\n        }\r\n        else\r\n        {\r\n            if(idUpdate === '')\r\n            {\r\n                var model = new Store();\r\n                model.name = name;\r\n                \r\n                await api.insert(STORE_URL, model)\r\n                .then(async res => {\r\n                    const cpn = res.data.data as Store;\r\n\r\n                    if(storeDayHours !== null && storeDayHours.length > 0)\r\n                    {\r\n                        storeDayHours.forEach(async sth => {\r\n                            \r\n                            sth.storeId = cpn.id;\r\n                            await api.insert(STOREDAYHOUR_URL, sth);\r\n                        });\r\n                    }\r\n\r\n                    Utils.alertLocalStorage('Loja inserida com sucesso!', true);\r\n                    setBtnDisableAdd(false);\r\n                    setBtnTxtAdd('Adicionar');\r\n                    setStores([...stores, cpn]);\r\n                    setInitStores([...initStores, cpn]);\r\n                    handleModalAddUpd(false);\r\n                })\r\n                .catch(_ => {\r\n                    Utils.alertLocalStorage(`Ocorreu um erro ao adicionar!`, false);\r\n\r\n                    setBtnDisableAdd(false);\r\n                    setBtnTxtAdd('Adicionar');\r\n                });\r\n            }\r\n            else \r\n            {\r\n                storeUpd.name = name;\r\n                \r\n                await api.update(STORE_URL, storeUpd)\r\n                .then(res => {\r\n                    const cpn = res.data.data as Store;\r\n\r\n                    if(initStoreDayHours !== null && initStoreDayHours.length > 0)\r\n                    {\r\n                        var removeSth = initStoreDayHours.filter(x => !storeDayHours?.includes(x));\r\n                        var addSth = storeDayHours?.filter(x => !initStoreDayHours?.includes(x));\r\n\r\n                        removeSth.forEach(async sth => {\r\n                            await api.delete(STOREDAYHOUR_URL, sth.id);\r\n                        });\r\n\r\n                        addSth?.forEach(async sth => {\r\n                            sth.storeId = cpn.id;\r\n                            await api.insert(STOREDAYHOUR_URL, sth);\r\n                        });\r\n                    }\r\n\r\n                    Utils.alertLocalStorage('Loja atualizada com sucesso!', true);\r\n                    setBtnDisableAdd(false);\r\n                    setBtnTxtAdd('Atualizar');\r\n                    const newCpn = initStores.filter((x) => x.id !== cpn.id);\r\n                    setStores([...newCpn, cpn]);\r\n                    setInitStores([...newCpn, cpn]);\r\n                    handleModalAddUpd(false);\r\n                })\r\n                .catch(_ => {\r\n                    Utils.alertLocalStorage(`Ocorreu um erro ao atualizar!`, false);\r\n\r\n                    setBtnDisableAdd(false);\r\n                    setBtnTxtAdd('Atualizar');\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleRemove = async () => {\r\n\r\n        if(idRemove === '')\r\n        {\r\n            Utils.alertLocalStorage(`Ocorreu um erro ao remover!`, false);\r\n            handleModalRemove(false);\r\n        }\r\n        else\r\n        {   \r\n            await api.delete(STORE_URL, idRemove)\r\n            .then(_ => {\r\n                Utils.alertLocalStorage('Loja removida com sucesso!', true);\r\n                setBtnDisableRemove(false);\r\n                setBtnTxtRemove('Remover');\r\n\r\n                const newCpn = initStores.filter((x) => x.id !== idRemove);\r\n                setStores(newCpn);\r\n                setInitStores(newCpn);\r\n                handleModalRemove(false);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                Utils.alertLocalStorage(`Ocorreu um erro ao remover!`, false);\r\n                \r\n                setBtnDisableRemove(false);\r\n                setBtnTxtRemove('Remover');\r\n                handleModalRemove(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleModalAddUpd = async (isOpen: boolean, id: string = '') => {\r\n\r\n        if(id !== '')\r\n        {\r\n            setBtnTxtAdd('Atualizar');\r\n            await api.getById(STORE_URL, id)\r\n            .then(res => {\r\n                const cpn = res as Store;\r\n                setStoreUpd(cpn);\r\n                setName(cpn.name);\r\n                setInitStoreDayHours(cpn.storeDayHours);\r\n                setStoreDayHours(cpn.storeDayHours);\r\n                setIdUpdate(id !== '' ? id : idUpdate);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                Utils.alertLocalStorage('Ocorreu um erro ao pegar os dados da loja', false);\r\n                setShowModalAdd(false);\r\n            });\r\n        }\r\n        else\r\n        {\r\n            setBtnTxtAdd('Adicionar');\r\n            setIdUpdate('');\r\n            setName('');\r\n            setStoreDayHours([]);\r\n        }\r\n        setShowModalAdd(isOpen);\r\n    }\r\n\r\n    const handleModalRemove = (isRemove: boolean, id: string = '') => {\r\n\r\n        setIdRemove(id !== '' ? id : idRemove);\r\n        setShowModalRemove(isRemove);\r\n    }\r\n\r\n    const handleKeypress = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n        if (e.key === 'Enter') {\r\n          handleAdd();\r\n        }\r\n    }\r\n\r\n    const handleAddStoreDayHour = () => {\r\n\r\n        var newStoreDayHours = [...storeDayHours ?? []];\r\n\r\n        if(newStoreDayHours == null || newStoreDayHours.length === 0)\r\n        {\r\n            newStoreDayHours = new Array<StoreDayHour>();\r\n        }\r\n\r\n        newStoreDayHours.push(new StoreDayHour());\r\n        setStoreDayHours(newStoreDayHours);\r\n    }\r\n\r\n    const handleRemoveStoreDayHour = (index: number) => {\r\n\r\n        var newStoreDh = [...storeDayHours ?? []];\r\n        newStoreDh.splice(index, 1);\r\n        setStoreDayHours([...newStoreDh]);\r\n    }\r\n\r\n    const handleChangeDayWeek = (index: number, event: ValueType<SelectModel, false>) => {\r\n\r\n        var storeDh = [...storeDayHours ?? []];\r\n        storeDh[index].dayOfWeek = Number(event?.value);\r\n        setStoreDayHours([...storeDh]);\r\n    }\r\n\r\n    const handleChangeHourOpen = (index: number, value: string) => {\r\n\r\n        var storeDh = [...storeDayHours ?? []];\r\n        storeDh[index].hourOpen = value;\r\n        setStoreDayHours([...storeDh]);\r\n    }\r\n\r\n    const handleChangeHourClose = (index: number, value: string) => {\r\n\r\n        var storeDh = [...storeDayHours ?? []];\r\n        storeDh[index].hourClose = value;\r\n        setStoreDayHours([...storeDh]);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Alert />\r\n\r\n            <Modal \r\n                show={showModalAdd} \r\n                onHide={() => handleModalAddUpd(false)}\r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        Adicionar loja\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body onKeyPress={handleKeypress}>\r\n                    <Form.Group className={`mb-2`}>\r\n                        <Form.Label>Nome</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Digite o nome\" \r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        />\r\n                        <Form.Text className=\"text-danger\">\r\n                            {nameError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <button className={`button mb-2 mt-2`} onClick={handleAddStoreDayHour}>\r\n                        Adicionar dia/horário\r\n                    </button>\r\n\r\n                    <AccordionMenu\r\n                        title='Dias e horários'\r\n                        body={\r\n                            storeDayHours?.map((item, index) => (\r\n                                <div className={`d-flex align-items-center mb-2`}>\r\n                                    <Form.Group className={`${styles.selectDayWeek} me-2`}>\r\n                                        <Form.Label>Dia</Form.Label>\r\n                                        <Select \r\n                                            value={new SelectModel(item.dayOfWeek.toString(), Utils.convertDayWeek(item.dayOfWeek))} \r\n                                            onChange={(e: ValueType<SelectModel, false>) => handleChangeDayWeek(index, e)}\r\n                                            options={optionStoreDayHour} \r\n                                            placeholder='Selecione'\r\n                                            menuPlacement='bottom'\r\n                                            menuPosition='fixed'\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Abre</Form.Label>\r\n                                        <Form.Control \r\n                                            type=\"text\" \r\n                                            placeholder=\"00:00\"\r\n                                            className={`${styles.inputHourMinute} me-2`}\r\n                                            value={item.hourOpen}\r\n                                            onChange={(e) => handleChangeHourOpen(index, Utils.hourMinuteMask(e.target.value))}\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Fecha</Form.Label>\r\n                                        <Form.Control \r\n                                            type=\"text\" \r\n                                            placeholder=\"00:00\"\r\n                                            className={`${styles.inputHourMinute} me-2`}\r\n                                            value={item.hourClose}\r\n                                            onChange={(e) => handleChangeHourClose(index, Utils.hourMinuteMask(e.target.value))}\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <button \r\n                                            className={`button`} \r\n                                            onClick={() => handleRemoveStoreDayHour(index)}\r\n                                        >\r\n                                            <FontAwesomeIcon \r\n                                                icon={faTimes} \r\n                                                title='Remover dia/horário'\r\n                                            />\r\n                                        </button>\r\n                                    </Form.Group>\r\n\r\n                                </div>\r\n                            ))\r\n                        }\r\n                        defaultActiveKey='0'\r\n                        className={`mb-2`}\r\n                    />\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button className={`button`} onClick={() => handleModalAddUpd(false)}>\r\n                        Cancelar\r\n                    </button>\r\n                    <button \r\n                        className={`button`} \r\n                        onClick={handleAdd}\r\n                        disabled={btnDisableAdd}\r\n                    >\r\n                        {btnTxtAdd}\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal \r\n                show={showModalRemove} \r\n                onHide={() => handleModalRemove(false)}\r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        Remover loja\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>Tem certeza que deseja remover?</p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button className={`button`} onClick={() => handleModalRemove(false)}>\r\n                        Cancelar\r\n                    </button>\r\n                    <button \r\n                        className={`button`} \r\n                        onClick={handleRemove}\r\n                        disabled={btnDisableRemove}\r\n                    >\r\n                        {btnTxtRemove}\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <div>\r\n                <h3 className={`title`}>\r\n                    Lojas\r\n                </h3>\r\n            </div>\r\n\r\n            <div className={`${styles.div_btns}`}>\r\n                <button\r\n                    onClick={() => handleModalAddUpd(true)}\r\n                    className={`button ${styles.btn_add} me-md-2 me-0`}\r\n                >\r\n                    Adicionar loja\r\n                </button>\r\n                <InputGroup className={`mt-2 mt-md-0`}>\r\n                    <Form.Control \r\n                        type=\"text\"\r\n                        placeholder=\"Pesquise aqui...\"\r\n                        value={search}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <button className={`button`}>\r\n                        <FontAwesomeIcon icon={faSearch} />\r\n                    </button>\r\n                </InputGroup>\r\n            </div>\r\n\r\n            <div className={`mt-3`}>\r\n                {stores?.length > 0 ? \r\n                    <Table className={`${styles.table}`} responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Nome</th>\r\n                                <th>Dias e horários</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {stores.map((model, key) => (\r\n                                <tr key={key}>\r\n                                    <td>\r\n                                        {model.name}\r\n                                    </td>\r\n                                    <td>\r\n                                        {model.storeDayHours?.map((dayHour, k) => (\r\n                                            <p key={k}>\r\n                                                {dayHour.dayOfWeekString} - {dayHour.hourOpen} às {dayHour.hourClose}\r\n                                            </p>\r\n                                        ))}\r\n                                    </td>\r\n                                    <td align='right'>\r\n                                        <button \r\n                                            className={`button`}\r\n                                            onClick={() => handleModalAddUpd(true, model.id)}\r\n                                        >\r\n                                            <FontAwesomeIcon \r\n                                                icon={faSyncAlt} \r\n                                                className={`${styles.table_icon}`}\r\n                                                title='Atualizar' \r\n                                            />\r\n                                        </button>\r\n                                        <button \r\n                                            className={`button ms-2`} \r\n                                            onClick={() => handleModalRemove(true, model.id)}\r\n                                        >\r\n                                            <FontAwesomeIcon \r\n                                                icon={faTrash} \r\n                                                className={`${styles.table_icon}`}\r\n                                                title='Apagar'\r\n                                            />\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                : <div><p>Nenhum loja adicionada.</p></div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StoreComponent;","import { Tab, Tabs } from \"react-bootstrap\";\r\nimport Alert from \"../components/Alert\";\r\nimport AddressStoreComponent from \"../components/screens/AddressStoreComponent\";\r\nimport DeliveryTaxComponent from \"../components/screens/DeliveryTaxComponent\";\r\nimport StoreComponent from \"../components/screens/StoreComponent\";\r\n\r\nconst Stores = () => {\r\n\r\n    return (\r\n        <div className={`px-4`}>\r\n            <Alert />\r\n\r\n            <Tabs defaultActiveKey=\"store\" className=\"mb-3\">\r\n                <Tab eventKey=\"store\" title=\"Lojas\">\r\n                    <StoreComponent />\r\n                </Tab>\r\n                <Tab eventKey=\"address\" title=\"Endereços\">\r\n                    <AddressStoreComponent />\r\n                </Tab>\r\n                <Tab eventKey=\"tax\" title=\"Taxas de entrega\">\r\n                    <DeliveryTaxComponent />\r\n                </Tab>\r\n            </Tabs>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Stores;","import { Base } from \"./base/Base\";\r\n\r\nexport class User extends Base {\r\n\r\n    name: string = '';\r\n\r\n    username: string = '';\r\n\r\n    birthday: Date | string = new Date();\r\n    \r\n    cpf: string = '';\r\n    \r\n    email: string = '';\r\n    \r\n    password: string | null = null;\r\n    \r\n    numberPhone: string = '';\r\n\r\n    points: number = 0;\r\n\r\n    image: string = '';\r\n}\r\n","import { faSearch, faSyncAlt, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Form, InputGroup, Modal, Spinner, Table } from \"react-bootstrap\";\r\nimport Alert from \"../components/Alert\";\r\nimport { Props } from \"../configs/Props\";\r\nimport { Utils } from \"../configs/Utils\";\r\nimport { Validations } from \"../configs/Validations\";\r\nimport { User } from \"../models/User\";\r\nimport Api from \"../services/api\";\r\n\r\nimport styles from '../styles/default.module.css';\r\n\r\nconst Users = (props: Props) => {\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n    const [users, setUsers] = useState([] as User[]);\r\n    const [userUpd, setUserUpd] = useState({} as User);\r\n    const [initUsers, setInitUsers] = useState([] as User[]);\r\n    \r\n    const [name, setName] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n    const [birthday, setBirthday] = useState(\"\");\r\n    const [cpf, setCpf] = useState(\"\");\r\n    const [numberPhone, setNumberPhone] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    \r\n    const [nameError, setNameError] = useState(\"\");\r\n    const [birthdayError, setBirthdayError] = useState(\"\");\r\n    const [cpfError, setCpfError] = useState(\"\");\r\n    const [numberPhoneError, setNumberPhoneError] = useState(\"\");\r\n    const [emailError, setEmailError] = useState(\"\");\r\n    \r\n    const [idUpdate, setIdUpdate] = useState(\"\");\r\n    const [idRemove, setIdRemove] = useState(\"\");\r\n    const [emailForgotPassword, setEmailForgotPassword] = useState(\"\");\r\n    \r\n    const [btnDisableAdd, setBtnDisableAdd] = useState(false);\r\n    const [btnTxtAdd, setBtnTxtAdd] = useState<string | object>(\"Adicionar\");\r\n    const [showModalAdd, setShowModalAdd] = useState(false);\r\n    \r\n    const [btnDisableRemove, setBtnDisableRemove] = useState(false);\r\n    const [btnTxtRemove, setBtnTxtRemove] = useState<string | object>(\"Remover\");\r\n    const [showModalRemove, setShowModalRemove] = useState(false);\r\n\r\n    const api = new Api();\r\n\r\n    useEffect(() => {\r\n        \r\n        const getUsers = async () => {\r\n\r\n            await api.getUser().then(res => {\r\n                setUsers(res);\r\n                setInitUsers(res);\r\n            });\r\n        }\r\n        getUsers();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const results = initUsers?.filter(cp =>\r\n            cp.name.toLowerCase().includes(search.toLowerCase())\r\n        );\r\n        setUsers(results);\r\n    }, [initUsers, search]);\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setSearch(event.target.value);\r\n    };\r\n\r\n    const handleAdd = async () => {\r\n\r\n        setBtnDisableAdd(true);\r\n        setBtnTxtAdd(<Spinner animation=\"grow\" variant=\"light\" size=\"sm\" />);\r\n\r\n        var nError = Validations.validateRequiredField(name, \"nome\");\r\n        var bError = Validations.validateRequiredField(birthday, \"data de nascimento\");\r\n        var cError = Validations.validateRequiredField(cpf, \"CPF\");\r\n        var nbError = Validations.validateRequiredField(numberPhone, \"telefone\");\r\n        var eError = Validations.validateRequiredField(email, \"email\");\r\n\r\n        if(nError || bError || cError || nbError || eError)\r\n        {\r\n            setNameError(nError);\r\n            setBirthdayError(bError);\r\n            setCpfError(cError);\r\n            setNumberPhoneError(nbError);\r\n            setEmailError(eError);\r\n            setBtnDisableAdd(false);\r\n            setBtnTxtAdd(idUpdate !== '' ? 'Atualizar' : 'Adicionar');\r\n        }\r\n        else\r\n        {\r\n            if(idUpdate === '')\r\n            {\r\n                var model = new User();\r\n                model.name = name;\r\n                model.username = username;\r\n                model.birthday = birthday;\r\n                model.cpf = Utils.removeDiacritics(cpf);\r\n                model.numberPhone = Utils.removeDiacritics(numberPhone);\r\n                model.email = email;\r\n                \r\n                await api.insertUser(model)\r\n                .then(res => {\r\n                    const cpn = res.data.data as User;\r\n                    Utils.alertLocalStorage('Usuário inserido com sucesso!', true);\r\n                    setBtnDisableAdd(false);\r\n                    setBtnTxtAdd('Adicionar');\r\n                    setUsers([...users, cpn]);\r\n                    setInitUsers([...initUsers, cpn]);\r\n                    handleModalAddUpd(false);\r\n                })\r\n                .catch(_ => {\r\n                    Utils.alertLocalStorage(`Ocorreu um erro ao adicionar!`, false);\r\n\r\n                    setBtnDisableAdd(false);\r\n                    setBtnTxtAdd('Adicionar');\r\n                });\r\n            }\r\n            else \r\n            {\r\n                userUpd.name = name;\r\n                userUpd.username = username;\r\n                userUpd.birthday = birthday;\r\n                userUpd.cpf = Utils.removeDiacritics(cpf);\r\n                userUpd.numberPhone = Utils.removeDiacritics(numberPhone);\r\n                userUpd.email = email;\r\n                \r\n                await api.updateUser(userUpd)\r\n                .then(res => {\r\n                    const cpn = res.data.data as User;\r\n                    Utils.alertLocalStorage('Usuário atualizado com sucesso!', true);\r\n                    setBtnDisableAdd(false);\r\n                    setBtnTxtAdd('Atualizar');\r\n                    const newCpn = initUsers.filter((x) => x.id !== cpn.id);\r\n                    setUsers([...newCpn, cpn]);\r\n                    setInitUsers([...newCpn, cpn]);\r\n                    handleModalAddUpd(false);\r\n                })\r\n                .catch(_ => {\r\n                    Utils.alertLocalStorage(`Ocorreu um erro ao atualizar!`, false);\r\n\r\n                    setBtnDisableAdd(false);\r\n                    setBtnTxtAdd('Atualizar');\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleRemove = async () => {\r\n\r\n        if(idRemove === '')\r\n        {\r\n            Utils.alertLocalStorage(`Ocorreu um erro ao remover!`, false);\r\n            handleModalRemove(false);\r\n        }\r\n        else\r\n        {   \r\n            await api.deleteUser(idRemove)\r\n            .then(_ => {\r\n                Utils.alertLocalStorage('Usuário removido com sucesso!', true);\r\n                setBtnDisableRemove(false);\r\n                setBtnTxtRemove('Remover');\r\n\r\n                const newCpn = initUsers.filter((x) => x.id !== idRemove);\r\n                setUsers(newCpn);\r\n                setInitUsers(newCpn);\r\n                handleModalRemove(false);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                Utils.alertLocalStorage(`Ocorreu um erro ao remover!`, false);\r\n                \r\n                setBtnDisableRemove(false);\r\n                setBtnTxtRemove('Remover');\r\n                handleModalRemove(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleModalAddUpd = async (isOpen: boolean, id: string = '') => {\r\n\r\n        if(id !== '')\r\n        {\r\n            setBtnTxtAdd('Atualizar');\r\n            await api.getUserById(id)\r\n            .then(res => {\r\n                const cpn = res as User;\r\n                setUserUpd(cpn);\r\n                setName(cpn.name);\r\n                setUsername(cpn.username);\r\n                setNumberPhone(Utils.numberPhoneMask(cpn.numberPhone));\r\n                setCpf(Utils.cpfMask(cpn.cpf));\r\n                setBirthday(Utils.formatDate(cpn.birthday.toString()));\r\n                setEmail(cpn.email);\r\n                setEmailForgotPassword(cpn.email);\r\n                setIdUpdate(id !== '' ? id : idUpdate);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                Utils.alertLocalStorage('Ocorreu um erro ao pegar os dados do usuário', false);\r\n                setShowModalAdd(false);\r\n            });\r\n        }\r\n        else\r\n        {\r\n            setBtnTxtAdd('Adicionar');\r\n            setIdUpdate('');\r\n            setName('');\r\n        }\r\n        setShowModalAdd(isOpen);\r\n    }\r\n\r\n    const handleModalRemove = (isRemove: boolean, id: string = '') => {\r\n\r\n        setIdRemove(id !== '' ? id : idRemove);\r\n        setShowModalRemove(isRemove);\r\n    }\r\n\r\n    const handleKeypress = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n        if (e.key === 'Enter') {\r\n          handleAdd();\r\n        }\r\n    }\r\n\r\n    const handleForgotPassword = async () => {\r\n\r\n        if(!idUpdate && !emailForgotPassword)\r\n        {\r\n            alert('Você só pode atualizar a senha com um usuário selecionado!');\r\n            return;\r\n        }\r\n        \r\n        await api.forgotPasswordUser(emailForgotPassword)\r\n                .then(_ => {\r\n                    Utils.alertLocalStorage('Senha atualizada com sucesso!', true);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    Utils.alertLocalStorage(`Ocorreu um erro ao atualizar a senha! Tente novamente!`, false);\r\n                });\r\n    }\r\n\r\n    return (\r\n        <div className={`px-4`}>\r\n\r\n            <Alert state={props.location.state} />\r\n\r\n            <Modal \r\n                show={showModalAdd} \r\n                onHide={() => handleModalAddUpd(false)}\r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        Adicionar usuário\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body onKeyPress={handleKeypress}>\r\n                    <Form.Group className={`mb-2`}>\r\n                        <Form.Label>Nome</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Digite o nome\" \r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        />\r\n                        <Form.Text className=\"text-danger\">\r\n                            {nameError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className={`mb-2`}>\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Digite o username\" \r\n                            value={username}\r\n                            onChange={(e) => setUsername(e.target.value.toLowerCase())}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className={`mb-2`}>\r\n                        <Form.Label>Data de nascimento</Form.Label>\r\n                        <Form.Control \r\n                            type=\"date\" \r\n                            placeholder=\"Digite a data de nascimento\" \r\n                            value={birthday}\r\n                            onChange={(e) => setBirthday(e.target.value)}\r\n                        />\r\n                        <Form.Text className=\"text-danger\">\r\n                            {birthdayError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className={`mb-2`}>\r\n                        <Form.Label>CPF</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Digite o cpf\" \r\n                            value={cpf}\r\n                            onChange={(e) => setCpf(Utils.cpfMask(e.target.value))}\r\n                            minLength={14}\r\n                            maxLength={14}\r\n                        />\r\n                        <Form.Text className=\"text-danger\">\r\n                            {cpfError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className={`mb-2`}>\r\n                        <Form.Label>Telefone</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Digite o telefone\" \r\n                            value={numberPhone}\r\n                            onChange={(e) => setNumberPhone(Utils.numberPhoneMask(e.target.value))}\r\n                            minLength={14}\r\n                            maxLength={14}\r\n                        />\r\n                        <Form.Text className=\"text-danger\">\r\n                            {numberPhoneError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className={`mb-2`}>\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control \r\n                            type=\"email\" \r\n                            placeholder=\"Digite o email\" \r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                        <Form.Text className=\"text-danger\">\r\n                            {emailError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button className={`button`} onClick={() => handleModalAddUpd(false)}>\r\n                        Cancelar\r\n                    </button>\r\n                    {idUpdate ? <button \r\n                        className={`button`} \r\n                        onClick={handleForgotPassword}\r\n                    >\r\n                        Enviar nova senha\r\n                    </button>\r\n                    : ''}\r\n                    <button \r\n                        className={`button`} \r\n                        onClick={handleAdd}\r\n                        disabled={btnDisableAdd}\r\n                    >\r\n                        {btnTxtAdd}\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal \r\n                show={showModalRemove} \r\n                onHide={() => handleModalRemove(false)}\r\n                centered\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        Remover usuário\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>Tem certeza que deseja remover?</p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <button className={`button`} onClick={() => handleModalRemove(false)}>\r\n                        Cancelar\r\n                    </button>\r\n                    <button \r\n                        className={`button`} \r\n                        onClick={handleRemove}\r\n                        disabled={btnDisableRemove}\r\n                    >\r\n                        {btnTxtRemove}\r\n                    </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <div>\r\n                <h3 className={`title`}>\r\n                    Usuários\r\n                </h3>\r\n            </div>\r\n\r\n            <div className={`${styles.div_btns}`}>\r\n                <button\r\n                    onClick={() => handleModalAddUpd(true)}\r\n                    className={`button ${styles.btn_add} me-md-2 me-0`}\r\n                >\r\n                    Adicionar usuário\r\n                </button>\r\n                <InputGroup className={`mt-2 mt-md-0`}>\r\n                    <Form.Control \r\n                        type=\"text\"\r\n                        placeholder=\"Pesquise aqui...\"\r\n                        value={search}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <button className={`button`}>\r\n                        <FontAwesomeIcon icon={faSearch} />\r\n                    </button>\r\n                </InputGroup>\r\n            </div>\r\n\r\n            <div className={`mt-3`}>\r\n                {users?.length > 0 ? \r\n                    <Table className={`${styles.table}`} responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Nome</th>\r\n                                <th>Nascimento</th>\r\n                                <th>CPF</th>\r\n                                <th>Telefone</th>\r\n                                <th>Email</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {users.map((model, key) => (\r\n                                <tr key={key}>\r\n                                    <td>\r\n                                        {model.name}\r\n                                    </td>\r\n                                    <td>\r\n                                        {Utils.dateMask(model.birthday.toString())}\r\n                                    </td>\r\n                                    <td>\r\n                                        {Utils.cpfMask(model.cpf)}\r\n                                    </td>\r\n                                    <td>\r\n                                        {Utils.numberPhoneMask(model.numberPhone)}\r\n                                    </td>\r\n                                    <td>\r\n                                        {model.email}\r\n                                    </td>\r\n                                    <td align='right'>\r\n                                        <button \r\n                                            className={`button`}\r\n                                            onClick={() => handleModalAddUpd(true, model.id)}\r\n                                        >\r\n                                            <FontAwesomeIcon \r\n                                                icon={faSyncAlt} \r\n                                                className={`${styles.table_icon}`}\r\n                                                title='Atualizar' \r\n                                            />\r\n                                        </button>\r\n                                        <button \r\n                                            className={`button ms-2`} \r\n                                            onClick={() => handleModalRemove(true, model.id)}\r\n                                        >\r\n                                            <FontAwesomeIcon \r\n                                                icon={faTrash} \r\n                                                className={`${styles.table_icon}`}\r\n                                                title='Apagar'\r\n                                            />\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                : <div><p>Nenhum usuário adicionado.</p></div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport Footer from '../components/Footer';\r\nimport Header from '../components/Header';\r\nimport Coupons from '../screens/Coupons';\r\nimport Home from '../screens/Home';\r\nimport Login from '../screens/Login';\r\nimport NotFound from '../screens/NotFound';\r\nimport Orders from '../screens/Orders';\r\nimport PaymentTypes from '../screens/PaymentTypes';\r\nimport Products from '../screens/Products';\r\nimport Profile from '../screens/Profile';\r\nimport Stores from '../screens/Stores';\r\nimport Users from '../screens/Users';\r\nimport { Session } from '../services/session';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest } : any) => (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        Session.isAuthenticated() ? \r\n        (\r\n            <div className={`div-root`}>\r\n                <Header />\r\n\r\n                <Component {...props} />\r\n\r\n                <Footer />\r\n            </div>\r\n        ) : \r\n        (\r\n            <Redirect \r\n                to={{ pathname: \"/login\" }} \r\n                {...props} \r\n            />\r\n        )\r\n      }\r\n    />\r\n);\r\n\r\n// const PrivateRouteComponent = ({ component: Component, ...rest } : any) => (\r\n//     <Route\r\n//       {...rest}\r\n//       render={props =>\r\n//         Session.isAuthenticated() ? \r\n//         (\r\n//             <Component {...props} />\r\n//         ) : \r\n//         (\r\n//             <Redirect \r\n//                 to={{ pathname: \"/login\" }} \r\n//                 {...props} \r\n//             />\r\n//         )\r\n//       }\r\n//     />\r\n// );\r\n\r\nexport const AppNavigator = () => {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path={['/login']} component={Login} />\r\n                <PrivateRoute exact path={['/']} component={Home} />\r\n                <PrivateRoute exact path={['/perfil']} component={Profile} />\r\n                <PrivateRoute exact path={['/pedidos']} component={Orders} />\r\n                <PrivateRoute exact path={['/usuarios']} component={Users} />\r\n                <PrivateRoute exact path={['/produtos']} component={Products} />\r\n                <PrivateRoute exact path={['/lojas']} component={Stores} />\r\n                <PrivateRoute exact path={['/pagamento']} component={PaymentTypes} />\r\n                <PrivateRoute exact path={['/cupons']} component={Coupons} />\r\n                <Route path=\"*\" component={NotFound} />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n","import { AppNavigator } from './navigations/AppNavigator';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/app.css';\nimport 'leaflet/dist/leaflet.css';\n\nfunction App() {\n  return (\n    <AppNavigator />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h_home\":\"home_h_home__3NYOq\",\"div_home\":\"home_div_home__19tOX\",\"div_row_menu\":\"home_div_row_menu__2_mMn\",\"card_menu\":\"home_card_menu__1boUx\",\"card_body_menu\":\"home_card_body_menu__34jqL\",\"icon_menu\":\"home_icon_menu__3PVrc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div_btns\":\"store_div_btns__2I5S9\",\"btn_add\":\"store_btn_add__2dQR4\",\"table\":\"store_table__aqRJ7\",\"inputHourMinute\":\"store_inputHourMinute__3zwwY\",\"selectDayWeek\":\"store_selectDayWeek__1jS5Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div_full\":\"login_div_full__1OG4Y\",\"card_login\":\"login_card_login__2PZuX\",\"img_logo\":\"login_img_logo__3aYUs\",\"form_group_login\":\"login_form_group_login__1Hl0_\",\"form_label_login\":\"login_form_label_login__1SsMV\",\"form_control_login\":\"login_form_control_login__2eI6S\",\"btn_login\":\"login_btn_login__1Vt1w\",\"h_registration\":\"login_h_registration__3UP43\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__3HYSm\",\"navbar_brand\":\"header_navbar_brand__3V_4P\",\"img_logo\":\"header_img_logo__3BbiT\",\"nav_link\":\"header_nav_link__3DP5a\",\"span_admin_store\":\"header_span_admin_store__3flmT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h_title\":\"profile_h_title__3wV0y\",\"btn_primary\":\"profile_btn_primary__2W3oJ\",\"btn\":\"profile_btn__lYPP0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div_btns\":\"coupon_div_btns__2l9DL\",\"btn_add\":\"coupon_btn_add__fOuX_\",\"table\":\"coupon_table__1hQ2y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div_btns\":\"paymentType_div_btns__2xqES\",\"btn_add\":\"paymentType_btn_add__ckTeB\",\"table\":\"paymentType_table__1xOVj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div_footer\":\"footer_div_footer__2S2zs\"};"],"sourceRoot":""}